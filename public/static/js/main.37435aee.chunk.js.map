{"version":3,"sources":["configs.js","states/employeesState.js","states/inventoryState.js","states/ordersState.js","states/overviewStatisticState.js","states/pharmaciesState.js","states/productsState.js","states/productsStatisticsState.js","states/usersState.js","state.js","components/Footer.jsx","components/common/AuthSectionHeader.jsx","components/forms/FormButton.jsx","components/forms/AuthForm.jsx","components/common/Note.jsx","components/forms/FormField.jsx","components/forms/AuthFormField.jsx","services/http.js","services/users.js","services/auth.js","utility.js","components/common/SuccessPage.jsx","components/pages/ForgetPassword.jsx","components/common/PasswordAuthField.jsx","components/forms/UsernameAuthField.jsx","services/pharmacies.js","components/pages/Login.jsx","components/pages/ResetPassword.jsx","components/common/SignupChoice.jsx","components/GoogleMap.jsx","components/forms/PhoneNumberAuthField.jsx","components/forms/PharmacyRegisterationForm.jsx","components/forms/SignupForm.jsx","components/StepsProgress.jsx","components/pages/Signup.jsx","components/Authentication.jsx","services/employees.js","services/inventoryItems.js","services/notifications.js","services/orders.js","services/products.js","components/Loading.jsx","components/CollapseBtn.jsx","components/Logo.jsx","components/PagePath.jsx","components/AccountMenu.jsx","components/Notifications.jsx","components/TopMenu.jsx","components/TopBar.jsx","components/MenuItem.jsx","components/Navigation.jsx","components/Header.jsx","components/table/SearchFilter.jsx","components/table/SelectFilter.jsx","components/table/Filters.jsx","components/table/TableHead.jsx","components/table/TableRow.jsx","components/table/TableBody.jsx","components/table/Table.jsx","components/table/Pagination.jsx","components/common/DataTable.jsx","components/common/SectionHeader.jsx","components/common/DeleteBtn.jsx","components/table/ManageBtns.jsx","components/table/ProductCell.jsx","components/forms/CategoriesField.jsx","services/categories.js","components/forms/CompaniesField.jsx","services/companies.js","components/forms/SuppliersField.jsx","services/suppliers.js","components/forms/Form.jsx","components/forms/InventoryForm.jsx","states/inventoryFormState.js","components/common/Popup.jsx","components/forms/PopupForm.jsx","components/forms/ProductsField.jsx","components/forms/InventoryPopupForm.jsx","components/pages/Inventory.jsx","services/statistic.js","customLegend.js","components/lineChartSection.jsx","components/common/StatisticsWidget.jsx","components/OverviewSection.jsx","components/PieChartSection.jsx","components/ProductsStatistics.jsx","components/pages/Dashboard.jsx","components/forms/PhoneNumberField.jsx","components/forms/EmployeeForm.jsx","states/employeeFormState.js","components/forms/EmployeePopupForm.jsx","components/pages/Employees.jsx","components/OrderDetails.jsx","components/pages/Orders.jsx","components/forms/PharmacyForm.jsx","components/pages/Pharmacies.jsx","components/forms/UserForm.jsx","states/userFormState.js","components/forms/PasswordField.jsx","components/forms/UserPopupForm.jsx","components/pages/Users.jsx","components/forms/ProductPhoto.jsx","components/forms/ProductForm.jsx","states/productFormState.js","components/forms/ProductPopupForm.jsx","components/pages/Products.jsx","components/common/Section.jsx","services/pharmacyBranch.js","components/common/SubSection.jsx","components/ATMCardOption.jsx","components/MbokOption.jsx","components/PaymentOption.jsx","components/DeliveryOption.jsx","components/forms/PharmacyInformationForm.jsx","components/pages/PharmacySettings.jsx","components/forms/PasswordChangeForm.jsx","components/forms/PersonalInformationForm.jsx","components/pages/AccountSettings.jsx","components/forms/ProductsSearch.jsx","components/forms/DiscountPopupForm.jsx","components/OrderSummary.jsx","components/pages/PointOfSale.jsx","states/pharmacyFormState.js","components/forms/PharmacyPopupForm.jsx","components/pages/MyPharmacies.jsx","components/Main.jsx","components/ControlPanel.jsx","components/App.jsx","index.js"],"names":["itemsPerPage","length","itemsPerPageOptions","currentPage","employeesState","data","filters","search","role","status","pagination","configs","inventoryState","category","ordersState","type","overviewStatisticState","views","counter","previous_counter","online_orders","pharmacies","users","sales","orders","profits","sold_products","pharmaciesState","productsState","company","productsStatisticsState","usersState","defaultState","collapseMenu","localStorage","getItem","statistics","overview","loggedUser","pharmacyBranches","pharmacyBranch","notifications","uploads","productPhoto","tables","productsStatistics","inventory","employees","products","popupWindow","display","pos","discount","amount","unit","store","createState","DevTools","label","Footer","className","Date","getFullYear","AuthSectionHeader","name","FormButton","faClass","onClick","iconAfter","AuthForm","children","submitBtn","footerLink","onSubmit","e","preventDefault","to","link","content","Note","FormField","value","options","taggable","inputOnly","inputClassName","booleanValue","inputWrapper","contentAfter","escapePattern","props","currentValue","undefined","get","onInputChange","target","toLowerCase","set","pattern","replace","onSelectChange","selectedValue","renderInput","useCallback","styles","styleObject","classNamePrefix","onChange","isSearchable","isDisabled","disabled","map","i","checked","toString","id","htmlFor","btnLabel","files","newValue","actionMeta","required","control","provided","justifyContent","valueContainer","padding","indicatorsContainer","input","margin","singleValue","menu","left","AuthFormField","icon","http","axios","post","put","delete","first_name","last_name","username","email","gender","phone_number","state","city","address","last_seen","joining_date","getUserByUsername","result","find","user","Promise","resolve","getUsersByRole","avaiableUsers","filter","getUsers","a","deleteUser","setUser","password","newUser","Math","round","random","toJSON","slice","split","reverse","join","push","updateUser","login","signup","userData","confirm_password","verifyToken","token","includes","forgetPassword","deepCompareEqualsForMaps","createCustomEqual","deepEqual","b","isLatLngLiteral","window","google","maps","LatLng","equals","useDeepCompareMemoize","ref","React","useRef","current","range","min","max","nums","notify","waitMsg","successMsg","errorMsg","successCallback","errorCallback","toastId","toast","loading","update","render","isLoading","autoClose","getStatisticalLabels","time","week","day","getDay","currentWeekDays","unshift","getWeekDays","month","days","getMonthDays","nFormatter","num","digits","lookup","symbol","rx","item","toFixed","getNestedProperty","obj","SuccessPage","title","redirect","history","useHistory","useEffect","setTimeout","href","pageName","ForgetPassword","forgetForm","useState","confirm_email","showSuccessPage","placeholder","PasswordAuthField","confirmation","minLength","maxLength","UsernameAuthField","pharmacy_id","branch","phone_numbers","website","lat","lng","created_at","owned_by","support_delivery","delivery_cost","vat","payment_options","mbok","account_no","account_owner_name","bank_branch_name","atm_card","card_no","card_owner_name","bank_name","updatePharmacyBranch","editedPharmacyBranch","selectedPharmacy","pharmacy","Object","assign","setPharmacy","owner","newPharmacyBranch","setPharmacyBranch","getPharmaciesByOwner","ownerId","getPharmacyBasicInfo","reject","deletePharmacy","updatePharmacyStatus","Login","loginForm","assignPharmacyBranch","pharmacyBranchData","error","ResetPassword","resetPasswordForm","useParams","SignupChoice","onSelect","Map","callback","dependencies","style","onIdle","onDrag","setMap","setOptions","forEach","eventName","event","clearListeners","addListener","Children","child","isValidElement","cloneElement","Marker","marker","setMarker","GoogleMap","coordinates","immutable","initZoom","position","zoom","setZoom","apiKey","center","latLng","m","getZoom","PhoneNumberAuthField","PharmacyRegisterationForm","formState","SignupForm","StepsProgress","steps","currentStep","no","Signup","signupProgress","step","signupForm","pharmacyRegisterationForm","createdUser","renderStep","haveNextBtn","Authentication","minHeight","src","alt","path","component","full_name","work_from","work_to","getEmployees","pharmacy_branch_id","deleteEmployee","emp","setEmployee","pharmacyBranchId","newEmployee","updateEmployee","inventoryItems","barcode","photo","cost","price","supplier","stock","reserved","arrival_date","expire_date","online_order","deleteInventoryItem","setInventoryItem","productId","response","updateInventoryItem","getInventoryItems","duration","deleteNotification","notification","handled_by","date","payment","method","proof","qty","products_amount","delivery","getOrders","setOrder","newOrder","updateOrderStatus","selectedOrder","order","url","size","ingredient","need_perspection","description","usage","warnings","side_effects","getProducts","deleteProduct","product","setProduct","uploadProductPhoto","image","p","formData","FormData","append","Loading","CollapseBtn","setItem","Logo","withoutCollapseBtn","width","height","pagesName","PagePathItem","PagePath","pathname","useLocation","AccountMenu","confirm","merge","Notification","colorsMap","new_pharmacy","new_branch","out_of_stock","expire_soon","expired","new_order","willBeDeleted","notificationLink","msg","stopPropagation","prev","NotificationsList","TopMenuItem","submenu","active","transitionProperty","TopMenu","withoutNotifications","activeMenu","changeActive","useHookstate","location","Notifications","ornull","TopBar","withLogo","MenuItem","exact","isActive","startsWith","activeClassName","Navigation","userRole","isPharmacyBranchSelected","output","renderNavigationItems","Header","SearchFilter","SelectFilter","wide","Filters","prop","option","TableHead","columns","sortColumn","sortColumnName","columnName","isCurrentSortingColumn","sortProp","sortable","TableRow","edited","form","columnsWidth","highlight","cell","colSpan","TableBody","params","useRouteMatch","editedRow","col","wrapper","defaultValue","handleEdit","Table","Pagination","paginationData","onPaginate","actualLength","ceil","start","floor","end","index","DataTable","filtersData","filteredData","useMemo","row","every","filterData","rowData","by","RegExp","handler","sortedData","sort","columnA","columnB","sortData","paginatedData","paginateData","SectionHeader","addButton","selectMenu","onchange","DeleteBtn","onDelete","ManageBtns","onEdit","onView","ProductCell","backgroundImage","CategoriesField","CompaniesField","SuppliersField","Form","formButtons","InventoryForm","closeForm","JSON","parse","stringify","inventoryFormState","errors","Popup","onClose","visiable","maxHeight","PopupForm","ProductsField","productsData","InventoryPopupForm","showState","inventoryData","scanneredBarcode","onkeypress","keyCode","key","newInventoryData","selectedId","Inventory","showPopupForm","inventoryItemId","sold","statisticOptions","getOverviewStatistic","getOrdersStatistic","getOnlineOrdersStatistic","getViewsStatistic","getSalesStatistic","getOrdersLineStatistic","getProfitsStatistic","htmlLegendPlugin","afterUpdate","chart","args","ul","legendContainer","document","getElementById","listContainer","querySelector","createElement","flexDirection","flexWrap","config","_config","fontSize","appendChild","getOrCreateLegendList","containerID","firstChild","remove","plugins","legend","labels","generateLabels","li","alignItems","cursor","marginRight","marginBottom","marginLeft","onclick","toggleDataVisibility","setDatasetVisibility","datasetIndex","isDatasetVisible","boxSpan","background","strokeStyle","borderRadius","textContainer","color","fontWeight","textDecoration","hidden","text","createTextNode","Chart","defaults","font","family","LineChartSection","onTimeChange","canvas","ctx","htmlLegend","elements","line","tension","scales","y","ticks","values","datasets","borderColor","backgroundColor","pointBorderColor","pointBackgroundColor","fill","initLineChart","getContext","destroy","StatisticsWidget","mainText","seconderyText","percent","bgColor","iconColor","suffix","toLocaleString","direction","OverviewSection","setOverview","getPercentage","deff","abs","PieChartSection","animation","animateScale","borderWidth","borderAlign","initPieChart","statusLabels","ProductsStatistics","productsStatisticsData","Dashboard","lineChartTime","setLineChartTime","pieChartTime","setPieChartTime","lineChartState","setLineChartState","pieChartState","setPieChartState","ordersDatasets","viewsDatasets","profitsDatasets","salesDatasets","PhoneNumberField","EmployeeForm","employeeFormState","EmployeePopupForm","employeesData","avaiableUsersToEmployee","newEmployeesData","selectedUsername","Employees","employeeId","OrderDetials","print","Orders","orderId","isNaN","proof_screenshot","rejectBtn","activeBtn","PharmacyForm","changePharmacyStatus","bind","Pharmacies","trim","UserForm","userFormState","PasswordField","UserPopupForm","usersData","newUsersData","Users","userId","ProductPhoto","pop","ProductForm","productFormState","ProductPopupForm","productData","newProductsData","photoData","Products","Section","contentClassName","setDisplay","handleDisplay","setPaymentOption","setPharmacyInformation","SubSection","ATMCardOption","onSave","onDeactivate","MbokOption","PaymentOption","defaultStatus","branchId","setActive","handleSave","isDeactivate","handleDeactivate","card_onwer_name","DeliveryOption","PharmacyInformationForm","PharmacySettings","vatAmount","setVATOption","newPassword","confirmPassword","oldPassword","PasswordChangeForm","console","dir","PersonalInformationForm","AccountSettings","ResultItem","isInStock","ProductsSearch","setLoading","resultSet","setResultSet","oldList","alreadyExist","DiscountPopupForm","totalAmount","minWidth","OrderSummary","orderDetails","displayDiscountForm","totalItems","basketTotal","discountPercentage","total","actualDiscountAmount","ordersData","log","PointOfSale","searchValue","pharmacyFormState","PharmacyPopupForm","pharmaciesData","isPending","isFirstPharmacy","pharmacyBasicInfo","isUpdate","newPharmacyBranchData","AddPharmacyBranchCard","PharmacyCard","statusColor","MyPharmacies","displayPopupForm","pharmacyBranchFormState","handlePharmacySelection","selectedPharmacyBranch","Main","from","renderMain","ControlPanel","notificationsData","all","appData","ex","App","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","StrictMode"],"mappings":"oNAAe,EACC,CACRA,aAAc,EACdC,OAAQ,EACRC,oBAAqB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAC7CC,YAAa,GCONC,EAVQ,CACnBC,KAAM,GACNC,QAAS,CACLC,OAAQ,GACRC,KAAM,GACNC,OAAQ,IAEZC,WAAW,eAAMC,ICGNC,EAVQ,CACnBP,KAAM,GACNC,QAAS,CACLC,OAAQ,GACRM,SAAU,GACVJ,OAAQ,IAEZC,WAAW,eAAMC,ICGNG,EAVK,CAChBT,KAAM,GACNC,QAAS,CACLC,OAAQ,GACRQ,KAAM,GACNN,OAAQ,IAEZC,WAAW,eAAMC,ICwBNK,EAjCgB,CAC3BC,MAAO,CACHC,QAAS,EACTC,iBAAkB,GAEtBC,cAAe,CACXF,QAAS,EACTC,iBAAkB,GAEtBE,WAAY,CACRH,QAAS,GAEbI,MAAO,CACHJ,QAAS,GAEbK,MAAO,CACHL,QAAS,EACTC,iBAAkB,GAEtBK,OAAQ,CACJN,QAAS,EACTC,iBAAkB,GAEtBM,QAAS,CACLP,QAAS,EACTC,iBAAkB,GAEtBO,cAAe,CACXR,QAAS,EACTC,iBAAkB,ICnBXQ,EARS,CACpBtB,KAAM,GACNC,QAAS,CACLC,OAAQ,IAEZG,WAAW,eAAMC,ICKNiB,EAVO,CAClBvB,KAAM,GACNC,QAAS,CACLC,OAAQ,GACRM,SAAU,GACVgB,QAAS,IAEbnB,WAAW,eAAMC,ICCNmB,EARiB,CAC5BzB,KAAM,GACNC,QAAS,CACLC,OAAQ,IAEZG,WAAW,eAAMC,ICKNoB,EAVI,CACf1B,KAAM,GACNC,QAAS,CACLC,OAAQ,GACRC,KAAM,GACNC,OAAQ,IAEZC,WAAW,eAAMC,ICCfqB,EAAe,CACjBC,aAAwD,SAA1CC,aAAaC,QAAQ,iBACnCC,WAAY,CACRC,SAAS,eAAMrB,IAEnBsB,WAAY,GACZC,iBAAkB,GAClBC,eAAgB,GAChBC,cAAe,GACfC,QAAS,CACLC,aAAc,IAElBC,OAAQ,CACJC,mBAAoBf,EACpBgB,UAAWlC,EACXmC,UAAW3C,EACXoB,OAAQV,EACRO,WAAYM,EACZL,MAAOS,EACPiB,SAAUpB,GAEdqB,YAAa,CACTC,SAAS,EACTnC,KAAM,GACNV,KAAM,IAEV8C,IAAK,CACDH,SAAU,GACVI,SAAU,CAAEC,OAAQ,EAAGC,KAAM,SAIjCC,EAAQC,YAAY,eAAKxB,IAM7ByB,YAASF,GAAOG,MAAM,SAEPH,Q,sBCtCAI,EAVA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,oBAAGA,UAAU,4DAAb,mBACY,IAAIC,MAAOC,cADvB,sC,uBCOGC,EAVW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACI,oBAAIJ,UAAU,0CAAd,SACI,sBAAMA,UAAU,6DAAhB,SACKI,OCwBFC,EA5BI,SAAC,GAOb,IAAD,IANFP,aAME,MANM,eAMN,MALFQ,eAKE,MALQ,cAKR,MAJFN,iBAIE,MAJU,sEAIV,MAHF7C,YAGE,MAHK,SAGL,EAFFoD,EAEE,EAFFA,QAEE,IADFC,iBACE,SACF,OACI,wBACIrD,KAAMA,EACNoD,QAASA,EACTP,UAAS,uDAAkDA,GAH/D,SAKKQ,EACG,qCACKV,EACD,mBAAGE,UAAS,UAAKM,EAAL,4BAGhB,qCACI,mBAAGN,UAAS,UAAKM,EAAL,yBADhB,IACyDR,QCoB1DW,EAvCE,SAAC,GAMX,IALHC,EAKE,EALFA,SACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,WACAC,EAEE,EAFFA,SAEE,IADFb,iBACE,MADU,wBACV,EACF,OACI,sBAAKA,UAAU,6FAAf,UACI,uBACIa,SAAU,SAACC,GACPA,EAAEC,iBACFF,KAHR,UAMI,qBAAKb,UAAWA,EAAhB,SAA4BU,IAC5B,cAAC,EAAD,CACIZ,MAAOa,EAAUb,MACjBQ,QAASK,EAAUL,QACnBE,WAAS,EACTR,UAAS,UACLW,EAAUX,WAAa,SADlB,2FAKhBY,GACG,qBAAKZ,UAAU,qEAAf,SACI,cAAC,IAAD,CACIgB,GAAIJ,EAAWK,KACfjB,UAAU,oCAFd,SAIKY,EAAWM,gBCvBrBC,EAVF,SAAC,GAA6B,IAA3BT,EAA0B,EAA1BA,SAAUV,EAAgB,EAAhBA,UACtB,OACI,qBACIA,UAAS,uFAAkFA,GAD/F,SAGKU,K,8KCwLEU,MA3Lf,YAcI,IAbApB,EAaD,EAbCA,UACAF,EAYD,EAZCA,MAYD,IAXC3C,YAWD,MAXQ,OAWR,EAVCkE,EAUD,EAVCA,MAUD,IATCC,eASD,MATW,GASX,MARCC,gBAQD,aAPCC,iBAOD,aANCC,sBAMD,MANkB,GAMlB,MALCC,oBAKD,aAJCC,oBAID,SAHCC,EAGD,EAHCA,aACAC,EAED,EAFCA,cACGC,EACJ,iBACOC,OAAyBC,IAAVX,EAAsBA,EAAMY,MAAQ,GAEnDC,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrB,GAAIT,EACA,OAAQS,EAAOd,MAAMe,eACjB,IAAK,KACL,IAAK,QACL,IAAK,IACDf,EAAMgB,KAAI,GACV,MACJ,QACIhB,EAAMgB,KAAI,QAGlBhB,EAAMgB,IAAIF,EAAOd,QAIrBQ,GAAiBC,EAAMQ,UACvBR,EAAMQ,QAAUR,EAAMQ,QAAQC,QAAQ,QAAS,SAGnD,IAAMC,EAAiB,SAACC,GACpBpB,EAAMgB,IAAII,EAAcpB,QAGtBqB,EAAcC,uBAAY,WAC5B,OAAQxF,GACJ,IAAK,SACD,OACI,cAAC,IAAD,aACIyF,OAAQC,EACR7C,UACIyB,GAEM,8DAEVqB,gBAAgB,eAChBzB,MAAO,CACHvB,MAAOiC,EACPV,MAAOU,GAEXT,QAASA,EACTyB,SAAUP,EACVQ,cAAc,EACdC,WAAYnB,EAAMoB,UACdpB,IAIhB,IAAK,QACD,OACI,qBAAK9B,UAAU,UAAf,SACKsB,EAAQ6B,KAAI,WAAmBC,GAAnB,IAAGtD,EAAH,EAAGA,MAAOuB,EAAV,EAAUA,MAAV,OACT,sBAEIrB,UAAU,8BAFd,UAII,+CACIA,UAAU,oBACV7C,KAAK,QACLkE,MAAOA,EACP0B,SAAUb,EACVmB,QACItB,EAAauB,aACbjC,EAAMiC,YAENxB,GATR,IAUIyB,GAAE,UAAKzD,EAAL,YAAcsD,MAEpB,uBAAOI,QAAO,UAAK1D,EAAL,YAAcsD,GAA5B,SAAkCtD,MAf7BsD,QAqBzB,IAAK,WACD,OACI,0BACIpD,UAAU,iEACVqB,MAAOU,EACPgB,SAAUb,IAItB,IAAK,OACD,OACI,qCACI,wBACIsB,QAAS1B,EAAMyB,GACfvD,UAAU,+HAFd,UAII,mBAAGA,UAAU,mCAAsC,IAClD8B,EAAM2B,UAAY,YAEvB,mCACIzD,UAAU,SACV7C,KAAMA,EACNkE,MAAM,GACN0B,SAAU,YAAiB,IAAdZ,EAAa,EAAbA,OACTd,EAAMgB,IAAIF,EAAOuB,MAAM,MAEvB5B,OAKpB,QACI,OAAIP,EAEI,cAAC,IAAD,aACIqB,OAAQC,EACR7C,UAAU,qEACV8C,gBAAgB,eAChBzB,MAAO,CACHvB,MAAOiC,EACPV,MAAOU,GAEXT,QAASA,EACTyB,SAAUP,EACVN,cAAe,SAACyB,EAAUC,GACH,iBAAfA,GACAvC,EAAMgB,IAAIsB,IAGlBX,cAAc,EACdC,WAAYnB,EAAMoB,UACdpB,IAMZ,mCACI9B,UACIyB,GAAc,4DAGlBtE,KAAMA,EACNkE,MAAOU,EACPgB,SAAUb,GACNJ,OAIrB,CAACA,EAAOR,EAASC,EAAUpE,IAE9B,OAAIqE,EAAkBkB,IAElB,sBAAK1C,UAAWA,EAAhB,UACI,wBACIwD,QAAS1B,EAAMyB,GACfvD,UAAU,oCAFd,UAIKF,EACAgC,EAAM+B,SACH,sBAAM7D,UAAU,kBAAhB,oBACAgC,KAEPL,EACG,sBAAK3B,UAAU,WAAf,UACK0C,IADL,IACqBd,KAGrB,qCACKc,IADL,IACqBd,SAS/BiB,EAAc,CAChBiB,QAAS,SAACC,GAAD,MAAe,CACpBzE,QAAS,OACT0E,eAAgB,kBAEpBC,eAAgB,SAACF,GAAD,mBAAC,eACVA,GADS,IAEZG,QAAS,OAEbC,oBAAqB,iBAAO,IAC5BC,MAAO,SAACL,GAAD,mBAAC,eACDA,GADA,IAEHG,QAAS,IACTG,OAAQ,OAEZC,YAAa,SAACP,GAAD,mBAAC,eACPA,GADM,IAETM,OAAQ,OAEZE,KAAM,SAACR,GAAD,mBAAC,eACAA,GADD,IAEFS,KAAM,M,WChMCC,EAnBO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAS5C,EAAY,iBAC1C,OACI,cAAC,EAAD,aACIL,eAAc,0DACViD,EAAO,OAAS,IAEpB/C,eAAgB+C,EAChB9C,aACI8C,GACI,mBACI1E,UAAS,UAAK0E,EAAL,mFAIjB5C,K,iBCRD6C,EAPF,CACT1C,IAAK2C,IAAM3C,IACX4C,KAAMD,IAAMC,KACZC,IAAKF,IAAME,IACXC,OAAQH,IAAMG,QCJPrH,EAAQ,CACf,CACI6F,GAAI,EACJyB,WAAY,UACZC,UAAW,QACXC,SAAU,UACVC,MAAO,2BACPvI,KAAM,QACNwI,OAAQ,IACRC,aAAc,gBACdC,MAAO,WACPC,KAAM,WACNC,QAAS,qBACT3I,OAAQ,SACR4I,UAAW,SACXC,aAAc,cAElB,CACInC,GAAI,EACJ2B,SAAU,eACVC,MAAO,2BACPH,WAAY,UACZC,UAAW,QACXG,OAAQ,IACRC,aAAc,gBACdzI,KAAM,iBACN0I,MAAO,WACPC,KAAM,WACNC,QAAS,6CACT3I,OAAQ,SACR4I,UAAW,cACXC,aAAc,cAElB,CACInC,GAAI,EACJyB,WAAY,MACZC,UAAW,QACXC,SAAU,MACVC,MAAO,uBACPvI,KAAM,iBACNwI,OAAQ,IACRC,aAAc,gBACdC,MAAO,WACPC,KAAM,WACNC,QAAS,2BACT3I,OAAQ,SACR4I,UAAW,cACXC,aAAc,cAElB,CACInC,GAAI,EACJyB,WAAY,OACZC,UAAW,SACXC,SAAU,OACVC,MAAO,4BACPvI,KAAM,aACNwI,OAAQ,IACRC,aAAc,GACdC,MAAO,WACPC,KAAM,GACNC,QAAS,GACT3I,OAAQ,SACR4I,UAAW,YACXC,aAAc,cAElB,CACInC,GAAI,EACJyB,WAAY,QACZC,UAAW,UACXC,SAAU,QACVC,MAAO,4BACPvI,KAAM,OACNwI,OAAQ,IACRC,aAAc,gBACdC,MAAO,WACPC,KAAM,GACNC,QAAS,GACT3I,OAAQ,SACR4I,UAAW,YACXC,aAAc,cAElB,CACInC,GAAI,EACJyB,WAAY,SACZC,UAAW,QACXC,SAAU,SACVC,MAAO,yBACPvI,KAAM,aACNwI,OAAQ,IACRC,aAAc,eACdC,MAAO,WACPC,KAAM,GACNC,QAAS,GACT3I,OAAQ,SACR4I,UAAW,cACXC,aAAc,eAITC,EAAoB,SAACT,GAC9B,IAAMU,EAASlI,EAAMmI,MAAK,SAACC,GAAD,OAAUA,EAAKZ,WAAaA,KACtD,OAAOa,QAAQC,QAAQ,CAAEvJ,KAAMmJ,EAAQ/I,OAAQ,OAGtCoJ,EAAiB,SAACrJ,GAC3B,IAAMsJ,EAAgBxI,EAAMyI,QAAO,SAACL,GAAD,OAAUA,EAAKlJ,OAASA,KAC3D,OAAOmJ,QAAQC,QAAQ,CAAEvJ,KAAMyJ,EAAerJ,OAAQ,OAG7CuJ,EAAQ,uCAAG,sBAAAC,EAAA,sEACPN,QAAQC,QAAQ,CAAEvJ,KAAMiB,EAAOb,OAAQ,MADhC,mFAAH,qDAIRyJ,EAAa,SAAC/C,GAEvB,OADA7F,EAAQA,EAAMyI,QAAO,SAACL,GAAD,OAAUA,EAAKvC,KAAOA,KACpCwC,QAAQC,QAAQ,CAAEvJ,KAAM,CAAE8G,MAAM1G,OAAQ,OAGtC0J,EAAO,uCAAG,qDAAAF,EAAA,6DACnBrB,EADmB,EACnBA,WACAC,EAFmB,EAEnBA,UACAC,EAHmB,EAGnBA,SAHmB,EAInBsB,SACArB,EALmB,EAKnBA,MACAvI,EANmB,EAMnBA,KACAwI,EAPmB,EAOnBA,OACAC,EARmB,EAQnBA,aACAxI,EATmB,EASnBA,OACAyI,EAVmB,EAUnBA,MACAC,EAXmB,EAWnBA,KACAC,EAZmB,EAYnBA,QAEM/I,EAAO,CACTuI,aACAC,YACAC,WACAC,QACAvI,OACAwI,SACAC,eACAxI,SACAyI,QACAC,OACAC,WAGEiB,EA5Ba,aA6BflD,GAAI7F,EAAMrB,OAASqK,KAAKC,MAAsB,IAAhBD,KAAKE,UACnClB,cAAc,IAAIzF,MACb4G,SACAC,MAAM,EAAG,IACTC,MAAM,KACNC,UACAC,KAAK,KACVxB,UAAW,IACRhJ,GAGPiB,EAAMwJ,KAAKT,GAxCQ,SA0CNV,QAAQC,QAAQ,CAAEvJ,KAAMgK,EAAS5J,OAAQ,MA1CnC,mFAAH,sDA8CPsK,EAAU,uCAAG,iDAAAd,EAAA,+DACtB9C,GACAyB,EAFsB,EAEtBA,WACAC,EAHsB,EAGtBA,UACAC,EAJsB,EAItBA,SACAC,EALsB,EAKtBA,MACAvI,EANsB,EAMtBA,KACAwI,EAPsB,EAOtBA,OACAC,EARsB,EAQtBA,aACAxI,EATsB,EAStBA,OACAyI,EAVsB,EAUtBA,MACAC,EAXsB,EAWtBA,KACAC,EAZsB,EAYtBA,QAEa,CACTR,aACAC,YACAC,WACAC,QACAvI,OACAwI,SACAC,eACAxI,SACAyI,QACAC,OACAC,WAzBkB,SA4BTO,QAAQC,QAAQ,CAAEnJ,OAAQ,MA5BjB,mFAAH,sDCnKVuK,EAAQ,SAAClC,EAAUsB,GAC5B,IAAM9H,EAAahB,EAAMmI,MAAK,SAACC,GAAD,OAAUA,EAAKZ,WAAaA,KAE1D,OAAKxG,EAEEqH,QAAQC,QAAQ,CACnBvJ,KAAMiC,EACN7B,OAAQ,MAJYkJ,QAAQC,QAAQ,CAAEnJ,OAAQ,OAQzCwK,EAAM,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,oEACXiB,EAASd,gBACTc,EAASC,iBAEVd,EAJY,yBAKdlD,GAAI7F,EAAMrB,OAAS,GAChBiL,GANW,IAOdhC,MAAO,GACPC,KAAM,GACNC,QAAS,GACT3I,OAAQ,aACR6I,cAAc,IAAIzF,MACb4G,SACAC,MAAM,EAAG,IACTC,MAAM,KACNC,UACAC,KAAK,OAGdvJ,EAAMwJ,KAAKT,GAnBO,kBAqBXV,QAAQC,QAAQ,CAAEvJ,KAAMgK,EAAS5J,OAAQ,OArB9B,2CAAH,sDAwBN2K,EAAc,SAACC,GAGxB,OAAO1B,QAAQC,QAAQ,CACnBnJ,OAHgB,CAAC,SAAU,SAAU,UAGjB6K,SAASD,GAAS,IAAM,OAUvCE,GAAiB,SAACxC,GAG3B,OAFsBzH,EAAMmI,MAAK,SAACC,GAAD,OAAUA,EAAKX,QAAUA,KAGnDY,QAAQC,QAAQ,CAAEnJ,OAAQ,MADNkJ,QAAQC,QAAQ,CAAEV,MAAO,O,oCClDlDsC,GAA2BC,8BAAkB,SAACC,GAAD,OAAe,SAACzB,EAAG0B,GAClE,OACIC,aAAgB3B,IAChBA,aAAa4B,OAAOC,OAAOC,KAAKC,QAChCJ,aAAgBD,IAChBA,aAAaE,OAAOC,OAAOC,KAAKC,OAEzB,IAAIH,OAAOC,OAAOC,KAAKC,OAAO/B,GAAGgC,OACpC,IAAIJ,OAAOC,OAAOC,KAAKC,OAAOL,IAO/BD,EAAUzB,EAAG0B,OAGxB,SAASO,GAAsBjH,GAC3B,IAAMkH,EAAMC,IAAMC,SAMlB,OAJKb,GAAyBvG,EAAOkH,EAAIG,WACrCH,EAAIG,QAAUrH,GAGXkH,EAAIG,QAoCR,SAASC,GAAMC,EAAKC,GAEvB,IADA,IAAMC,EAAO,GACJ1F,EAAIwF,EAAKxF,GAAKyF,EAAKzF,IACxB0F,EAAK5B,KAAK9D,GAEd,OAAO0F,EAGJ,SAASC,GAAT,GAOH,IANAlM,EAMD,EANCA,OAMD,IALCmM,eAKD,MALW,iBAKX,EAJCC,EAID,EAJCA,WAID,IAHCC,gBAGD,MAHY,iBAGZ,EAFCC,EAED,EAFCA,gBACAC,EACD,EADCA,cAEA,GAAIvM,GAAU,KAAOA,EAAS,IAAK,CAC/B,IAAMwM,EAAUJ,GAAcK,IAAMC,QAAQP,GACxCC,GACAK,IAAME,OAAOH,EAAS,CAClBI,OAAQR,EACR9L,KAAM,UACNuM,WAAW,EACXC,UAAW,MAIQ,oBAApBR,GAAkCA,QACtC,CACH,IAAME,EAAUC,IAAMC,QAAQP,GAC9BM,IAAME,OAAOH,EAAS,CAClBI,OAAQP,EACR/L,KAAM,QACNuM,WAAW,EACXC,UAAW,MAGU,oBAAlBP,GAAgCA,KAoB/C,IAWaQ,GAAuB,SAACC,GACjC,OAAQA,GACJ,IAAK,MACD,MAAO,CACH,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAER,IAAK,OACD,OAzCQ,WAEd,IADFC,EACC,uDADM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE5CC,GAAM,IAAI9J,MAAO+J,SACjBC,EAAkBH,EAAKhD,MAAM,EAAGiD,EAAM,GAI5C,OAFAE,EAAgBC,QAAhB,MAAAD,EAAe,aAAYH,EAAKhD,MAAMiD,EAAM,KAErCE,EAiCQE,GAEX,IAAK,QACD,OA5DZ,SAAsBC,GAElB,IADA,IAAIC,EAAO,GACFjH,EAAI,EAAGA,EAAI,KACF,IAAVgH,GAAqB,KAANhH,OAEbgH,EAAQ,IAAM,GAAKA,EAAQ,GACxBA,EAAQ,IAAM,GAAKA,EAAQ,IAC1B,KAANhH,GALgBA,IASpBiH,EAAKnD,KAAK9D,EAAI,EAAI,IAEtB,OAAOiH,EA+CQC,GAEX,IAAK,OACD,MAAO,CACH,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SAYT,SAASC,GAAWC,GAAkB,IAAbC,EAAY,uDAAH,EAC/BC,EAAS,CACX,CAAErJ,MAAO,EAAGsJ,OAAQ,IACpB,CAAEtJ,MAAO,IAAKsJ,OAAQ,KACtB,CAAEtJ,MAAO,IAAKsJ,OAAQ,KACtB,CAAEtJ,MAAO,IAAKsJ,OAAQ,KACtB,CAAEtJ,MAAO,KAAMsJ,OAAQ,KACvB,CAAEtJ,MAAO,KAAMsJ,OAAQ,KACvB,CAAEtJ,MAAO,KAAMsJ,OAAQ,MAErBC,EAAK,2BACPC,EAAOH,EACN5D,QACAE,UACAnB,MAAK,SAAUgF,GACZ,OAAOL,GAAOK,EAAKxJ,SAE3B,OAAOwJ,GACAL,EAAMK,EAAKxJ,OAAOyJ,QAAQL,GAAQlI,QAAQqI,EAAI,MAAQC,EAAKF,OAC5D,IAoCV,SAASI,GAAkBjJ,EAAOkJ,GAC9BlJ,EAAQA,EAAMiF,MAAM,KADe,qBAEhBjF,GAFgB,IAEnC,2BAA0B,CACtBkJ,EAAMA,EADgB,UAFS,8BAKnC,OAAOA,EC3PX,IA0BeC,GA1BK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOxK,EAAyB,EAAzBA,SAAUyK,EAAe,EAAfA,SAC9BC,EAAUC,cAQhB,OANAC,qBAAU,WACNrD,OAAOsD,YAAW,WACdH,EAAQlE,KAAKiE,EAASlK,QACvB,OACJ,IAGC,0BAASjB,UAAU,oCAAnB,UACI,qBAAIA,UAAU,uDAAd,UACI,mBAAGA,UAAU,oDAAuD,IACnEkL,KAEL,mBAAGlL,UAAU,oCAAb,SAAkDU,IACjDyK,GACG,oBAAGnL,UAAU,mDAAb,uDAC+C,IAC3C,mBAAGwL,KAAML,EAASlK,KAAlB,SAAyBkK,EAASM,WAFtC,WCyEDC,GAnFQ,WACnB,IAAMC,EAAaC,YAAS,CACxBzG,MAAO,GACP0G,cAAe,KAGbC,EAAkBF,aAAS,GAEjC,OACI,qBACI5L,UAAS,wBACL8L,EAAgBzK,MAAQ,WAAa,QAF7C,SAKKyK,EAAgBzK,MACb,cAAC,GAAD,CACI6J,MAAM,sEACNC,SAAU,CAAElK,KAAM,SAAUwK,SAAU,gBAG1C,qCACI,cAAC,EAAD,CAAmBrL,KAAK,uBACxB,eAAC,EAAD,CACIO,UAAW,CACPb,MAAO,kBACPQ,QAAS,sBAEbM,WAAY,CACRK,KAAM,WACNC,QAAS,qCAEbL,SAAQ,sBAAE,4BAAAwF,EAAA,sEACmBsB,GACrBgE,EAAWxG,MAAMlD,OAFf,gBAKN8G,GAAO,CACHlM,OANE,EACEA,OAMJoM,WACI,kEACJE,gBAJG,WAKC2C,EAAgBzJ,KAAI,IAExB6G,SACI,sDAbF,2CATd,UA0BI,eAAC,EAAD,CAAMlJ,UAAU,WAAhB,UACI,2CADJ,yFAKA,cAAC,EAAD,CACII,KAAK,QACLN,MAAM,QACNyD,GAAG,QACHpG,KAAK,QACLkE,MAAOsK,EAAWxG,MAClB4G,YAAY,2BACZrH,KAAK,YACLb,UAAQ,IAGZ,cAAC,EAAD,CACIzD,KAAK,gBACLN,MAAM,gBACNyD,GAAG,gBACHpG,KAAK,QACLkE,MAAOsK,EAAWE,cAClBE,YAAY,2BACZzJ,QAASqJ,EAAWxG,MAAM9D,MAC1BqD,KAAK,sBACL7C,eAAa,EACbgC,UAAQ,a,4BC7DrBmI,GApBW,SAAC,GAAuC,IAArC3K,EAAoC,EAApCA,MAAO4K,EAA6B,EAA7BA,aAAiBnK,EAAY,kBAC7D,OACI,cAAC,EAAD,aACI1B,KAAK,WACLN,MAAM,WACNyD,GAAG,WACHpG,KAAK,WACLkE,MAAOA,EACP0K,YAAY,eACZrH,KAAMuH,EAAY,0CAClBC,UAAU,IACVC,UAAU,KACV7J,QAAS2J,EACTpK,eAAa,EACbgC,UAAQ,GACJ/B,K,aCGDsK,GAlBW,SAAC,GAAyB,IAAvB/K,EAAsB,EAAtBA,MAAUS,EAAY,kBAC/C,OACI,cAAC,EAAD,aACI1B,KAAK,WACLN,MAAM,WACNyD,GAAG,WACHlC,MAAOA,EACP0K,YAAY,aACZrH,KAAK,cACLwH,UAAU,IACVC,UAAU,KACV7J,QAAQ,OACRuB,UAAQ,GACJ/B,KCbLrE,GAAa,CACpB,CACI8F,GAAI,EACJnD,KAAM,eACNiM,YAAa,EACbC,OAAQ,kBACRC,cAAe,CAAC,gBAAiB,iBACjCpH,MAAO,4BACPqH,QAAS,4BACTlH,MAAO,WACPC,KAAM,WACNC,QAAS,uCACTiH,IAAK,QACLC,IAAK,QACLC,WAAY,yBACZ9P,OAAQ,SACR+P,SAAU,CACNrJ,GAAI,EACJnD,KAAM,iBAEVyM,kBAAkB,EAClBC,cAAe,EACfC,IAAK,EACLC,gBAAiB,CACbC,KAAM,CACFC,WAAY,UACZC,mBAAoB,wBACpBC,iBAAkB,UAEtBC,SAAU,CACNC,QAAS,GACTC,gBAAiB,GACjBC,UAAW,MAIvB,CACIjK,GAAI,EACJnD,KAAM,eACNiM,YAAa,EACbC,OAAQ,kBACRC,cAAe,CAAC,gBAAiB,iBACjCpH,MAAO,4BACPqH,QAAS,4BACTlH,MAAO,WACPC,KAAM,WACNC,QAAS,4BACTiH,IAAK,QACLC,IAAK,QACLC,WAAY,yBACZ9P,OAAQ,UACR+P,SAAU,CACNrJ,GAAI,EACJnD,KAAM,iBAEVyM,kBAAkB,EAClBC,cAAe,EACfC,IAAK,EACLC,gBAAiB,CACbC,KAAM,CACFC,WAAY,GACZC,mBAAoB,GACpBC,iBAAkB,IAEtBC,SAAU,CACNC,QAAS,GACTC,gBAAiB,GACjBC,UAAW,MAIvB,CACIjK,GAAI,EACJnD,KAAM,eACNiM,YAAa,EACbC,OAAQ,eACRC,cAAe,CAAC,gBAAiB,iBACjCpH,MAAO,4BACPqH,QAAS,4BACTlH,MAAO,WACPC,KAAM,QACNC,QAAS,cACTiH,IAAK,OACLC,IAAK,OACLC,WAAY,yBACZ9P,OAAQ,WACR+P,SAAU,CACNrJ,GAAI,EACJnD,KAAM,iBAEVyM,kBAAkB,EAClBC,cAAe,EACfC,IAAK,EACLC,gBAAiB,CACbC,KAAM,CACFC,WAAY,GACZC,mBAAoB,GACpBC,iBAAkB,IAEtBC,SAAU,CACNC,QAAS,GACTC,gBAAiB,GACjBC,UAAW,OAMdC,GAAuB,SAAC,GAW9B,IAVHlK,EAUE,EAVFA,GAWMmK,EAAuB,CACzBpB,OAFF,EATFA,OAYIC,cAHF,EARFA,cAYIpH,MAJF,EAPFA,MAYIqH,QALF,EANFA,QAYIlH,MANF,EALFA,MAYIC,KAPF,EAJFA,KAYIC,QARF,EAHFA,QAYIiH,KATF,EAFFA,IAYIC,KAVF,EADFA,IAYI7P,OAAQ,WAER8Q,EAAmBlQ,GAAWoI,MAAK,SAAC+H,GAAD,OAAcA,EAASrK,KAAOA,KAOrE,OANIoK,IACAA,EAAmBE,OAAOC,OACtBH,EACAD,IAGD3H,QAAQC,QAAQ,CAAEvJ,KAAMkR,EAAkB9Q,OAAQ,OAGhDkR,GAAc,SAAC,EAaxBC,GACE,IAZE5N,EAYH,EAZGA,KACAkM,EAWH,EAXGA,OACAC,EAUH,EAVGA,cACApH,EASH,EATGA,MACAqH,EAQH,EARGA,QACAlH,EAOH,EAPGA,MACAC,EAMH,EANGA,KACAC,EAKH,EALGA,QACAiH,EAIH,EAJGA,IACAC,EAGH,EAHGA,IAIEuB,EAAoB,CACtB1K,GAAI9F,GAAWpB,OAAS,EACxB+D,OACAiM,YAAa5O,GAAWpB,OAASqK,KAAKC,MAAsB,IAAhBD,KAAKE,UACjD0F,SACAC,cAAc,aAAKA,GACnBpH,QACAqH,UACAlH,QACAC,OACAC,UACAiH,KAAMA,EACNC,KAAMA,EACNC,YAAY,IAAI1M,MAAO4G,SACvBhK,OAAQ,UACR+P,SAAU,CACNrJ,GAAIyK,EAAMzK,GACVnD,KAAM4N,EAAM5N,MAEhByM,kBAAkB,EAClBC,cAAe,EACfC,IAAK,EACLC,gBAAiB,CACbC,KAAM,CACFC,WAAY,GACZC,mBAAoB,GACpBC,iBAAkB,IAEtBC,SAAU,CACNC,QAAS,GACTC,gBAAiB,GACjBC,UAAW,MAOvB,OAFA/P,GAAWyJ,KAAK+G,GAETlI,QAAQC,QAAQ,CACnBvJ,KAAMwR,EACNpR,OAAQ,OAIHqR,GAAoB,SAAC,GAY3B,IAXH7B,EAWE,EAXFA,YACAjM,EAUE,EAVFA,KACAkM,EASE,EATFA,OACAC,EAQE,EARFA,cACApH,EAOE,EAPFA,MACAqH,EAME,EANFA,QACAlH,EAKE,EALFA,MACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,QACAiH,EAEE,EAFFA,IACAC,EACE,EADFA,IAEMuB,EAAoB,CACtB1K,GAAI9F,GAAWpB,OAASqK,KAAKC,MAAsB,IAAhBD,KAAKE,UACxCxG,OACAiM,cACAC,SACAC,cAAc,aAAKA,GACnBpH,QACAqH,UACAlH,QACAC,OACAC,UACAiH,KAAMA,EACNC,KAAMA,EACNC,YAAY,IAAI1M,MAAO4G,SACvBhK,OAAQ,UACR+P,SAAU,CACNrJ,GAAI5D,EAAMjB,WAAW6E,GAAGtB,MACxB7B,KAAK,GAAD,OAAKT,EAAMjB,WAAWsG,WAAW/C,MAAjC,YAA0CtC,EAAMjB,WAAWuG,UAAUhD,QAE7E4K,kBAAkB,EAClBC,cAAe,EACfC,IAAK,EACLC,gBAAiB,CACbC,KAAM,CACFC,WAAY,GACZC,mBAAoB,GACpBC,iBAAkB,IAEtBC,SAAU,CACNC,QAAS,GACTC,gBAAiB,GACjBC,UAAW,MAOvB,OAFA/P,GAAWyJ,KAAK+G,GAETlI,QAAQC,QAAQ,CACnBvJ,KAAMwR,EACNpR,OAAQ,OAIHsR,GAAuB,SAACC,GACjC,OAAOrI,QAAQC,QAAQ,CACnBvJ,KAAMgB,GAAW0I,QAAO,SAACyH,GAAD,OAAcA,EAAShB,SAASrJ,KAAO6K,KAC/DvR,OAAQ,OAaHwR,GAAuB,SAACD,GACjC,IAAMR,EAAWnQ,GAAWoI,MACxB,SAAC+H,GAAD,OAAcA,EAAShB,SAASrJ,MAAQ6K,KAE5C,QAAiBpM,IAAb4L,EAAwB,OAAO7H,QAAQuI,OAAO,CAAEzR,OAAQ,MAE5D,IAAQwP,EAAsCuB,EAAtCvB,YAAajM,EAAyBwN,EAAzBxN,KAAM+E,EAAmByI,EAAnBzI,MAAOqH,EAAYoB,EAAZpB,QAElC,OAAOzG,QAAQC,QAAQ,CACnBvJ,KAAM,CAAE4P,cAAajM,OAAM+E,QAAOqH,WAClC3P,OAAQ,OAQH0R,GAAiB,SAAChL,GAE3B,OADA9F,GAAaA,GAAW0I,QAAO,SAACyH,GAAD,OAAcA,EAASrK,KAAOA,KACtDwC,QAAQC,QAAQ,CAAEvJ,KAAM,CAAE8G,MAAM1G,OAAQ,OAGtC2R,GAAoB,uCAAG,WAAOjL,EAAI1G,GAAX,SAAAwJ,EAAA,sEACnBN,QAAQC,QAAQ,CAAEvJ,KAAM,CAAEI,UAAUA,OAAQ,MADzB,mFAAH,wDCnMlB4R,GA5FD,WACV,MAAuC7C,YAASjM,GAAxCjB,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,eACd8P,EAAY9C,YAAS,CACvB1G,SAAU,GACVsB,SAAU,KAGR4E,EAAUC,cAEVsD,EAAoB,uCAAG,+BAAAtI,EAAA,+DAAS9C,GAAT,kBDyPtBwC,QAAQC,QAAQ,CACnBvJ,KAAMgB,GAAW,GACjBZ,OAAQ,MC3PiB,uBAEP+R,EAFO,EAEbnS,KAERmC,EAAeyD,IAAIuM,GAJE,mBAKd,GALc,kCAOrBtF,IAAMuF,MACF,0DARiB,kCAWlB,GAXkB,0DAAH,sDAc1B,OACI,sBAAK7O,UAAU,qBAAf,UACI,cAAC,EAAD,CAAmBI,KAAK,UACxB,eAAC,EAAD,CACIO,UAAW,CACPb,MAAO,QACPQ,QAAS,sBAEbM,WAAY,CACRK,KAAM,WACNC,QAAS,qCAEbL,SAAQ,sBAAE,oCAAAwF,EAAA,+DACyBqI,EAAUzM,MAAjCiD,EADF,EACEA,SADF,EACYsB,SADZ,SAEyBY,EAAMlC,GAF/B,mBAEEzI,EAFF,EAEEA,KAEO,OAFDI,EAFR,EAEQA,QAFR,oBAMgB,eAAdJ,EAAKG,MACS,eAAdH,EAAKG,KAPP,kCASa+R,EAAqBlS,GATlC,wBAS6C,IAT7C,mFAWuB,SAAdA,EAAKG,KAXd,0CAYS0M,IAAMuF,MACT,yCAbN,QAkBN9F,GAAO,CACHlM,SACAmM,QAAS,oBACTC,WAAYxM,EACR,oDACiB,IACb,yBAAQuD,UAAU,gBAAlB,UACKvD,EAAKuI,WADV,IACuBvI,EAAKwI,UAD5B,UAKJ,GAEEkE,gBAbH,WAasB,OAAD,oGAEpBzK,EAAW2D,IAAI5F,GAGf2O,EAAQ7I,QAAQ,KALI,8CAOxB2G,SACI,8DACJE,cAtBG,WAuBCsF,EAAUlI,SAASnE,IAAI,OAzCzB,4CATd,UAuDI,cAAC,GAAD,CAAmBhB,MAAOqN,EAAUxJ,WACpC,cAAC,GAAD,CAAmB7D,MAAOqN,EAAUlI,WAEpC,cAAC,IAAD,CAAMxF,GAAG,mBAAmBhB,UAAU,yBAAtC,wCCJD8O,GAnFO,WAClB,IAAMC,EAAoBnD,YAAS,CAC/BpF,SAAU,GACVe,iBAAkB,KAGhBuE,EAAkBF,aAAS,GACzBnE,EAAUuH,cAAVvH,MACF2D,EAAUC,cAWhB,OARAC,qBAAU,WACN,sBAAC,4BAAAjF,EAAA,sEAC4BmB,EAAYC,GADxC,gBAGkB,MAHlB,EACW5K,QAEYuO,EAAQ7I,QAAQ,oBAHvC,0CAAD,KAKD,IAGC,qBACIvC,UAAS,wBACL8L,EAAgBzK,MAAQ,WAAa,QAF7C,SAKKyK,EAAgBzK,MACb,cAAC,GAAD,CACI6J,MAAM,6CACNC,SAAU,CAAElK,KAAM,SAAUwK,SAAU,gBAG1C,qCACI,cAAC,EAAD,CAAmBrL,KAAK,sBACxB,eAAC,EAAD,CACIO,UAAW,CACPb,MAAO,oBACPQ,QAAS,eAEbM,WAAY,CACRK,KAAM,WACNC,QAAS,qCAEbL,SAAQ,sBAAE,4BAAAwF,EAAA,sEAGF0I,EAAkBvI,SAASvE,MRRhD8D,QAAQC,QAAQ,CACnBnJ,OAAQ,MQIkB,gBAKNkM,GAAO,CACHlM,OANE,EACEA,OAMJsM,gBAFG,WAGC2C,EAAgBzJ,KAAI,IAExB6G,SACI,0FACJE,cAPG,WAQCnB,OAAOsD,YACH,kBACIH,EAAQ7I,QAAQ,sBACpB,QAhBN,2CATd,UA+BI,cAAC,GAAD,CACIzC,MAAM,eACNuB,MAAO0N,EAAkBvI,WAG7B,cAAC,GAAD,CACIpG,KAAK,mBACLN,MAAM,uBACNyD,GAAG,mBACHlC,MAAO0N,EAAkBxH,iBACzB0E,aAAc8C,EAAkBvI,SAASnF,iBCjEtD4N,GAjBM,SAAC,GAAsC,IAApCnP,EAAmC,EAAnCA,MAAO4E,EAA4B,EAA5BA,KAAMwG,EAAsB,EAAtBA,MAAOgE,EAAe,EAAfA,SACxC,OACI,yBACIlP,UAAU,0DACVkL,MAAOA,EACP3K,QAAS2O,EAHb,UAKI,sBAAMlP,UAAU,iIAAhB,SACI,mBAAGA,UAAS,UAAK0E,EAAL,iCAEhB,wBAAQ1E,UAAU,uEAAlB,SACKF,Q,sEC+CXqP,GAAM,SAAC,GAA8D,IT3B/BC,EAAUC,ES2BvC3O,EAA2D,EAA3DA,SAAiBH,GAA0C,EAAjD+O,MAAiD,EAA1C/O,SAASgP,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,OAAWlO,EAAc,kBAChEiH,EAAME,iBAAO,MACnB,EAAsBmD,qBAAtB,oBAAOzI,EAAP,KAAYsM,EAAZ,KA2BA,OAzBAnE,qBAAU,WACF/C,EAAIG,UAAYvF,GAChBsM,EAAO,IAAIxH,OAAOC,OAAOC,KAAKgH,IAAI5G,EAAIG,QAASpH,MAEpD,CAACiH,EAAKpF,ITnC+BiM,ESuCZ,WACpBjM,GACAA,EAAIuM,WAAWpO,ITzC2B+N,ES2C/C,CAAClM,EAAK7B,GT1CTkH,IAAM8C,UAAU8D,EAAUC,EAAalM,IAAImF,KS4C3CgD,qBAAU,WACFnI,IACA,CAAC,QAAS,QAAQwM,SAAQ,SAACC,GAAD,OACtB3H,OAAOC,OAAOC,KAAK0H,MAAMC,eAAe3M,EAAKyM,MAGjDrP,GAAW4C,EAAI4M,YAAY,QAASxP,GACpCgP,GAAUpM,EAAI4M,YAAY,QAAQ,kBAAMR,EAAOpM,SAEpD,CAACA,EAAK5C,EAASgP,EAAQC,IAGtB,qCACI,qBAAKjH,IAAKA,EAAKvI,UAAU,kCACxBwI,IAAMwH,SAAS7M,IAAIzC,GAAU,SAACuP,GAC3B,GAAIzH,IAAM0H,eAAeD,GAErB,OAAOzH,IAAM2H,aAAaF,EAAO,CAAE9M,eAOjDiN,GAAS,SAAC9O,GACZ,MAA4BsK,qBAA5B,oBAAOyE,EAAP,KAAeC,EAAf,KAqBA,OAnBAhF,qBAAU,WAMN,OALK+E,GACDC,EAAU,IAAIrI,OAAOC,OAAOC,KAAKiI,QAI9B,WACCC,GACAA,EAAOZ,OAAO,SAGvB,CAACY,IAEJ/E,qBAAU,WACF+E,GACAA,EAAOX,WAAWpO,KAEvB,CAAC+O,EAAQ/O,IAEL,MAGIiP,GA3HG,SAAC,GAOZ,IAAD,IANFzQ,aAME,MANM,WAMN,EALFE,EAKE,EALFA,UAKE,IAJF6D,gBAIE,SAHF2M,EAGE,EAHFA,YAGE,IAFFC,iBAEE,aADFC,gBACE,MADS,GACT,EACIC,EAAW,CACblE,IAAK+D,EAAY/D,IAAIxK,MACrByK,IAAK8D,EAAY9D,IAAIzK,OAGzB,EAAwB2J,mBAAS8E,GAAjC,oBAAOE,EAAP,KAAaC,EAAb,KAWA,OACI,sBAAK7Q,UAAWA,EAAhB,UACI,wBAAOA,UAAU,oCAAjB,UACKF,EACA+D,EACG,sBAAM7D,UAAU,kBAAhB,oBACAgC,KAGR,cAAC,WAAD,CACI8O,OAAO,0CACPrH,OAAQ,SAAC5M,GAAD,OACJ,6BACgB,YAAXA,EACK,0BACAA,KANlB,SAUI,cAAC,GAAD,CACIkU,OAAQJ,EACRC,KAAMA,EACNrQ,QAASkQ,GA/BL,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACnBR,EAAY/D,IAAIpK,IAAI2O,EAAOvE,KAC3B+D,EAAY9D,IAAIrK,IAAI2O,EAAOtE,MA8Bf6C,OA3BI,SAAC0B,GACjBJ,EAAQI,EAAEC,YAsBF,SAMI,cAAC,GAAD,CAAQP,SAAUA,YCnCvBQ,GAfc,SAACrP,GAC1B,OACI,cAAC,EAAD,aACIhC,MAAM,eACNM,KAAK,eACLjD,KAAK,MACLgP,UAAU,KACV7J,QAAQ,oBACRyJ,YAAY,qBACZrH,KAAK,gBACD5C,KC6FDsP,GAnGmB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWxQ,EAAe,EAAfA,SAC5C,OACI,eAAC,EAAD,CACIF,UAAW,CACPb,MAAO,8BACPQ,QAAS,qBACTN,UAAW,gCAEfY,WAAY,CACRK,KAAM,SACNC,QAAS,qCAEblB,UAAU,yBACVa,SAAUA,EAXd,UAaI,cAAC,EAAD,CACIT,KAAK,gBACLN,MAAM,gBACNyD,GAAG,gBACHlC,MAAOgQ,EAAUjR,KACjB2L,YAAY,oBACZG,UAAU,IACVrI,UAAQ,IAEZ,cAAC,EAAD,CACIzD,KAAK,cACLN,MAAM,cACNyD,GAAG,cACHlC,MAAOgQ,EAAU/E,OACjBP,YAAY,yBAEhB,cAAC,GAAD,CACI3L,KAAK,iBACLN,MAAM,iBACNyD,GAAG,iBACHlC,MAAOgQ,EAAU9E,cAAc,GAC/B1I,UAAQ,IAEZ,cAAC,GAAD,CACIzD,KAAK,iBACLN,MAAM,iBACNyD,GAAG,iBACHlC,MAAOgQ,EAAU9E,cAAc,KAEnC,cAAC,EAAD,CACInM,KAAK,iBACLN,MAAM,iBACNyD,GAAG,iBACHpG,KAAK,QACLkE,MAAOgQ,EAAUlM,MACjB4G,YAAY,0BACZrH,KAAK,oBAET,cAAC,EAAD,CACItE,KAAK,mBACLN,MAAM,mBACNyD,GAAG,mBACHlC,MAAOgQ,EAAU7E,QACjBrP,KAAK,MACL4O,YAAY,uBACZrH,KAAK,iBAET,cAAC,EAAD,CACI5E,MAAM,QACNM,KAAK,QACLjD,KAAK,SACLoG,GAAG,QACHlC,MAAOgQ,EAAU/L,MACjBhE,QAAS,CAAC,CAAExB,MAAO,WAAYuB,MAAO,aACtCwC,UAAQ,IAEZ,cAAC,EAAD,CACIzD,KAAK,OACLN,MAAM,OACNyD,GAAG,OACHlC,MAAOgQ,EAAU9L,KACjBpI,KAAK,SACLmE,QX9CL,CACH,CAAExB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,QAASuB,MAAO,UW4CjB0K,YAAY,oBACZlI,UAAQ,IAEZ,cAAC,EAAD,CACI7D,UAAU,aACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,UACHlC,MAAOgQ,EAAU7L,QACjBuG,YAAY,uBACZlI,UAAQ,IAEZ,cAAC,GAAD,CACI7D,UAAU,aACVwQ,YAAa,CAAE/D,IAAK4E,EAAU5E,IAAKC,IAAK2E,EAAU3E,KAClDgE,SAAU,QCFXY,GA3FI,SAAC,GAA6B,IAA3BD,EAA0B,EAA1BA,UAAWxQ,EAAe,EAAfA,SAC7B,OACI,eAAC,EAAD,CACIF,UAAW,CACPb,MAAO,iBACPQ,QAAS,mBACTN,UAAW,gCAEfY,WAAY,CACRK,KAAM,SACNC,QAAS,qCAEblB,UAAU,yBACVa,SAAUA,EAXd,UAaI,cAAC,EAAD,CACIT,KAAK,aACLN,MAAM,aACNyD,GAAG,YACHlC,MAAOgQ,EAAUrM,WACjB+G,YAAY,eACZG,UAAU,IACVC,UAAU,KACV7J,QAAQ,aACRuB,UAAQ,IAGZ,cAAC,EAAD,CACIzD,KAAK,YACLN,MAAM,YACNyD,GAAG,WACHlC,MAAOgQ,EAAUpM,UACjB8G,YAAY,aACZG,UAAU,IACVC,UAAU,KACV7J,QAAQ,aACRuB,UAAQ,IAGZ,cAAC,GAAD,CAAmBxC,MAAOgQ,EAAUnM,SAAUrB,UAAQ,IAEtD,cAAC,EAAD,CACIzD,KAAK,QACLN,MAAM,QACNyD,GAAG,QACHpG,KAAK,QACLkE,MAAOgQ,EAAUlM,MACjB4G,YAAY,0BACZrH,KAAK,kBACLb,UAAQ,IAGZ,cAAC,GAAD,CAAmBxC,MAAOgQ,EAAU7K,SAAU3C,UAAQ,IAEtD,cAAC,GAAD,CACIzD,KAAK,mBACLN,MAAM,mBACNyD,GAAG,mBACHlC,MAAOgQ,EAAU9J,iBACjB0E,aAAcoF,EAAU7K,SAASnF,MACjCqD,KAAK,sBACLb,UAAQ,IAGZ,cAAC,GAAD,CACIN,GAAG,eACHlC,MAAOgQ,EAAUhM,aACjBxB,UAAQ,IAGZ,cAAC,EAAD,CACIzD,KAAK,SACLN,MAAM,SACNyD,GAAG,SACHpG,KAAK,QACLkE,MAAOgQ,EAAUjM,OACjB9D,QAAS,CACL,CACIxB,MAAO,OACPuB,MAAO,KAEX,CACIvB,MAAO,SACPuB,MAAO,YCThBkQ,GA/EO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC5B,OACI,sBAAKzR,UAAU,8DAAf,UACI,qBAAKA,UAAU,8BAAf,SACKwR,EAAMrO,KAAI,SAAC+H,EAAO9H,GACf,IAAMsO,EAAKtO,EAAI,EACf,OAAIoO,EAAMnV,OAAS,IAAM+G,EAEjB,qCACI,sBACIpD,UAAS,UACiB,IAAtByR,EAAYpQ,OAAsB,IAAPqQ,EACrB,iBACA,GAHD,2HAKLA,GAAMD,EAAYpQ,MACZ,aACA,aAEVd,QAAS,WAEqB,IAAtBkR,EAAYpQ,OACL,IAAPqQ,GAEAD,EAAYpP,IAAI,IAf5B,SAmBKqP,IAEL,sBACI1R,UAAS,2CACL0R,EAAKD,EAAYpQ,MACX,aACA,oBAOtB,sBACIrB,UAAS,qIACL0R,GAAMD,EAAYpQ,MACZ,aACA,aAJd,SAOKqQ,SAKjB,qBAAK1R,UAAU,mCAAf,SACKwR,EAAMrO,KAAI,SAAC+H,EAAO9H,GACf,IAAMsO,EAAKtO,EAAI,EACf,OACI,sBACIpD,UAAS,uCACLwR,EAAMnV,OADD,qBAGLqV,GAAMD,EAAYpQ,MAAQ,GAAK,gBAH1B,YAKLqQ,EAAK,GAAKA,EAAKF,EAAMnV,OACf,cACAqV,IAAOF,EAAMnV,OACb,aACA,IAVd,SAaK6O,aCiGdyG,GA7JA,WACX,IAAMC,EAAiBhG,YAAS,CAC5BzO,KAAM,GACN0U,KAAM,IAGJC,EAAalG,YAAS,CACxB5G,WAAY,GACZC,UAAW,GACXC,SAAU,GACVsB,SAAU,GACVe,iBAAkB,GAClBpC,MAAO,GACPE,aAAc,GACdD,OAAQ,KAGN2M,EAA4BnG,YAAS,CACvCxL,KAAM,GACNkM,OAAQ,GACRC,cAAe,CAAC,GAAI,IACpBpH,MAAO,GACPqH,QAAS,GACTlH,MAAO,WACPC,KAAM,GACNC,QAAS,GACTiH,IAAK,QACLC,IAAK,UAGLsF,EAAcvJ,mBAEZwJ,EAAatP,uBAAY,WAC3B,IAAQxF,EAAeyU,EAAfzU,KAAM0U,EAASD,EAATC,KAGd,OAFmB,KAAf1U,EAAK8E,OAAgB4P,EAAK5P,MAAQ,GAAG4P,EAAKxP,IAAI,GAE1CwP,EAAKxQ,OACT,KAAK,EACD,OACI,sBAAKrB,UAAU,qCAAf,UACI,cAAC,GAAD,CACIF,MAAM,WACN4E,KAAK,uBACLwG,MAAM,yBACNgE,SAAU,WACN/R,EAAKkF,IAAI,QACTwP,EAAKxP,IAAI,MAGjB,cAAC,GAAD,CACIvC,MAAM,iBACN4E,KAAK,wBACLwG,MAAM,4BACNgE,SAAU,WACN/R,EAAKkF,IAAI,kBACTwP,EAAKxP,IAAI,SAM7B,KAAK,EACD,OACI,cAAC,GAAD,CACIgP,UAAWS,EACXI,YAA4B,mBAAf/U,EAAKkE,MAClBR,SAAQ,sBAAE,8BAAAwF,EAAA,sEACyBgB,EAAO,aAClCzK,KAAMO,EAAKkE,OACRyQ,EAAW7P,QAHZ,gBACExF,EADF,EACEA,KAKRsM,GAAO,CACHlM,OAPE,EACQA,OAOVoM,WACmB,mBAAf9L,EAAKkE,MACC,8CACA,GACV8H,gBANG,WAOoB,mBAAfhM,EAAKkE,OACL2Q,EAAYtJ,QAAU,CAClBnF,GAAI9G,EAAK8G,GACTnD,KAAK,GAAD,OAAK3D,EAAKuI,WAAV,YAAwBvI,EAAKwI,YAErC4M,EAAKxP,IAAI,IAETwP,EAAKxP,IAAI,MApBf,6CA4BtB,KAAK,EACD,OACI,cAAC,GAAD,CACIgP,UAAWU,EACXlR,SAAQ,sBAAE,4BAAAwF,EAAA,sEACyB0H,GAC3BgE,EAA0B9P,MAC1B+P,EAAYtJ,SAHV,kBACEjM,KAKRsM,GAAO,CACHlM,OAPE,EACQA,OAOVsM,gBAFG,WAGC0I,EAAKxP,IAAI,MATX,6CAgBtB,KAAK,EACD,OACI,cAAC,GAAD,CACI6I,MAAM,mCACNC,SAAU,CAAElK,KAAM,SAAUwK,SAAU,cAF1C,mGASb,CAACmG,EAAevQ,QAEnB,OACI,sBAAKrB,UAAU,yBAAf,UACmC,IAA9B4R,EAAeC,KAAKxQ,OACjB,cAAC,EAAD,CAAmBjB,KAAK,WAEG,KAA9BwR,EAAezU,KAAKkE,OACjBuQ,EAAeC,KAAKxQ,MAAQ,GACxB,cAAC,GAAD,CACImQ,MACkC,SAA9BI,EAAezU,KAAKkE,MACd,CACI,sBACA,oBACA,iBAEJ,CACI,sBACA,oBACA,qBACA,iBAGdoQ,YAAaG,EAAeC,OAGvCI,QC1HEE,GAjCQ,WACnB,OACI,qCAEI,uBACInS,UAAU,sBACVsP,MAAO,CAAE8C,UAAW,sBAFxB,UAII,qBAAKpS,UAAU,qBAAf,SACI,cAAC,IAAD,CAAMgB,GAAG,IAAT,SACI,qBACIqR,IAAI,4BACJC,IAAI,oBAKhB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAW9G,KAC1C,cAAC,IAAD,CACI6G,KAAK,yBACLC,UAAW1D,KAEf,cAAC,IAAD,CAAOyD,KAAK,SAASC,UAAW/D,KAChC,cAAC,IAAD,CAAO8D,KAAK,WAAWC,UAAWb,KAClC,cAAC,IAAD,CAAU3Q,GAAG,iBAGrB,cAAC,EAAD,QCnCR7B,GAAY,CACZ,CACIoE,GAAI,EACJkP,UAAW,gBACXvN,SAAU,gBACVG,aAAc,gBACdD,OAAQ,IACRvI,OAAQ,UACRD,KAAM,iBACN8V,UAAW,GACXC,QAAS,GACTlN,UAAW,cACXC,aAAc,cAElB,CACInC,GAAI,EACJkP,UAAW,iBACXvN,SAAU,YACVG,aAAc,gBACdD,OAAQ,IACRvI,OAAQ,UACRD,KAAM,aACN8V,UAAW,QACXC,QAAS,QACTlN,UAAW,SACXC,aAAc,cAElB,CACInC,GAAI,EACJkP,UAAW,gBACXvN,SAAU,UACVG,aAAc,gBACdD,OAAQ,IACRvI,OAAQ,UACRD,KAAM,aACN8V,UAAW,QACXC,QAAS,QACTlN,UAAW,eACXC,aAAc,eAITkN,GAAe,SAACC,GACzB,OAAO9M,QAAQC,QAAQ,CAAEvJ,KAAM0C,GAAWtC,OAAQ,OAGzCiW,GAAc,uCAAG,WAAOvP,GAAP,SAAA8C,EAAA,6DAC1BlH,GAAYA,GAAUgH,QAAO,SAAC4M,GAAD,OAASA,EAAIxP,KAAOA,KADvB,kBAEnBwC,QAAQC,QAAQ,CAAEvJ,KAAM,CAAE8G,MAAM1G,OAAQ,OAFrB,2CAAH,sDAKdmW,GAAc,SAAC,GAQrB,IACGvW,EAAO,CACTwW,iBAAkB,EAClBR,UAHF,EAPFA,UAWIvN,SAJF,EANFA,SAWIG,aALF,EALFA,aAWID,OANF,EAJFA,OAWIxI,KAPF,EAHFA,KAWI8V,UARF,EAFFA,UAWIC,QATF,EADFA,SAaMO,EAAW,aACb3P,GAAIpE,GAAU9C,OAASqK,KAAKC,MAAsB,IAAhBD,KAAKE,UACvClB,cAAc,IAAIzF,MACb4G,SACAC,MAAM,EAAG,IACTC,MAAM,KACNC,UACAC,KAAK,KACVxB,UAAW,GACX5I,OAAQ,WACLJ,GAKP,OAFA0C,GAAU+H,KAAKgM,GAERnN,QAAQC,QAAQ,CACnBvJ,KAAMyW,EACNrW,OAAQ,OAIHsW,GAAiB,SAAC,GAWxB,IAVH5P,EAUE,EAVFA,GACAkP,EASE,EATFA,UACAvN,EAQE,EARFA,SACAG,EAOE,EAPFA,aACAD,EAME,EANFA,OACAK,EAKE,EALFA,UACAC,EAIE,EAJFA,aAKMjJ,EAAO,CACT8G,KACAkP,YACAvN,WACAG,eACAD,SACAxI,KAPF,EAHFA,KAWI8V,UARF,EAFFA,UAWIC,QATF,EADFA,QAWIjN,eACAD,aAGJ,OAAOM,QAAQC,QAAQ,CAAEvJ,KAAMA,EAAMI,OAAQ,OCrHtCuW,GAAiB,CACxB,CACI7P,GAAI,EACJnD,KAAM,0CACNiT,QAAS,mBACT3T,KAAM,aACNzC,SAAU,cACVgB,QAAS,YACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,KACPC,SAAU,oBACVC,MAAO,IACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,EACJnD,KAAM,2BACNiT,QAAS,kBACT3T,KAAM,mBACNzC,SAAU,cACVgB,QAAS,OACTqV,MAAO,uBACPC,KAAM,KACNC,MAAO,KACPC,SAAU,WACVC,MAAO,GACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,EACJnD,KAAM,8BACNiT,QAAS,mBACT3T,KAAM,aACNzC,SAAU,cACVgB,QAAS,MACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,IACPC,SAAU,WACVC,MAAO,GACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,EACJnD,KAAM,kCACNiT,QAAS,iBACT3T,KAAM,mBACNzC,SAAU,oBACVgB,QAAS,SACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,KACPC,SAAU,oBACVC,MAAO,EACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,EACJnD,KAAM,uBACNiT,QAAS,iBACT3T,KAAM,aACNzC,SAAU,iBACVgB,QAAS,SACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,IACPC,SAAU,iBACVC,MAAO,IACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,EACJnD,KAAM,0CACNiT,QAAS,mBACT3T,KAAM,aACNzC,SAAU,cACVgB,QAAS,YACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,KACPC,SAAU,oBACVC,MAAO,IACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,EACJnD,KAAM,2BACNiT,QAAS,kBACT3T,KAAM,mBACNzC,SAAU,cACVgB,QAAS,OACTqV,MAAO,uBACPC,KAAM,KACNC,MAAO,KACPC,SAAU,WACVC,MAAO,GACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,EACJnD,KAAM,8BACNiT,QAAS,mBACT3T,KAAM,aACNzC,SAAU,cACVgB,QAAS,MACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,IACPC,SAAU,WACVC,MAAO,GACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,EACJnD,KAAM,kCACNiT,QAAS,iBACT3T,KAAM,mBACNzC,SAAU,oBACVgB,QAAS,SACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,KACPC,SAAU,oBACVC,MAAO,EACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,GACJnD,KAAM,uBACNiT,QAAS,iBACT3T,KAAM,aACNzC,SAAU,iBACVgB,QAAS,SACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,IACPC,SAAU,iBACVC,MAAO,IACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,GACJnD,KAAM,0CACNiT,QAAS,mBACT3T,KAAM,aACNzC,SAAU,cACVgB,QAAS,YACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,KACPC,SAAU,oBACVC,MAAO,IACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,GACJnD,KAAM,2BACNiT,QAAS,UACT3T,KAAM,mBACNzC,SAAU,cACVgB,QAAS,OACTqV,MAAO,uBACPC,KAAM,KACNC,MAAO,KACPC,SAAU,WACVC,MAAO,GACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,GACJnD,KAAM,8BACNiT,QAAS,mBACT3T,KAAM,aACNzC,SAAU,cACVgB,QAAS,MACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,IACPC,SAAU,WACVC,MAAO,GACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,GACJnD,KAAM,kCACNiT,QAAS,iBACT3T,KAAM,mBACNzC,SAAU,oBACVgB,QAAS,SACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,KACPC,SAAU,oBACVC,MAAO,EACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,GAElB,CACIvQ,GAAI,GACJnD,KAAM,uBACNiT,QAAS,iBACT3T,KAAM,aACNzC,SAAU,iBACVgB,QAAS,SACTqV,MAAO,uBACPC,KAAM,IACNC,MAAO,IACPC,SAAU,iBACVC,MAAO,IACPC,SAAU,EACVC,aAAc,aACdC,YAAa,aACbC,cAAc,IAITC,GAAmB,uCAAG,WAAOxQ,GAAP,SAAA8C,EAAA,6DAC/B+M,GAAiBA,GAAejN,QAAO,SAAC0E,GAAD,OAAUA,EAAKtH,KAAOA,KAD9B,kBAExBwC,QAAQC,QAAQ,CAAEvJ,KAAM,CAAE8G,MAAM1G,OAAQ,OAFhB,2CAAH,sDAKnBmX,GAAgB,uCAAG,WAAOnJ,GAAP,eAAAxE,EAAA,4DACf,CACT4M,iBAAkB,EAClBgB,UAAWpJ,EAAKoJ,UAChBV,KAAM1I,EAAK0I,KACXC,MAAO3I,EAAK2I,MACZI,aAAc/I,EAAK+I,aACnBC,YAAahJ,EAAKgJ,YAClBC,aAAcjJ,EAAKiJ,aACnBJ,MAAO7I,EAAK6I,MACZC,SAAU9I,EAAK8I,SACfF,SAAU5I,EAAK4I,UAXS,SAcL1N,QAAQC,QAAQ,CACnCvJ,KAAK,aACD8G,GAAI6P,GAAe/W,OAASqK,KAAKC,MAAsB,IAAhBD,KAAKE,WACzCiE,GAEPhO,OAAQ,MAnBgB,cActBqX,EAdsB,OAsB5Bd,GAAelM,KAAKgN,EAASzX,MAtBD,kBAuBrByX,GAvBqB,2CAAH,sDA2BhBC,GAAmB,uCAAG,+CAAA9N,EAAA,6DAC/B9C,EAD+B,EAC/BA,GACAgQ,EAF+B,EAE/BA,KACAC,EAH+B,EAG/BA,MACAI,EAJ+B,EAI/BA,aACAC,EAL+B,EAK/BA,YACAC,EAN+B,EAM/BA,aACAJ,EAP+B,EAO/BA,MACAC,EAR+B,EAQ/BA,SACAF,EAT+B,EAS/BA,SAEMhX,EAAO,CACT8W,OACAC,QACAI,eACAC,cACAC,eACAJ,QACAC,WACAF,YAnB2B,SAsBlB9O,EAAKG,IAAL,qDACqCvB,GAC9C9G,GAxB2B,mFAAH,sDA4BnB2X,GAAiB,uCAAG,sBAAA/N,EAAA,sEAChBN,QAAQC,QAAQ,CAAEvJ,KAAM2W,GAAgBvW,OAAQ,MADhC,mFAAH,qDC9T1BgC,GAAgB,CAChB,CACI0E,GAAI,EACJpG,KAAM,YACNV,KAAM,CACF8G,GAAI,EACJuC,KAAM,kBAGd,CACIvC,GAAI,EACJpG,KAAM,eACNV,KAAM,CACF8G,GAAI,EACJnD,KAAM,eACN4N,MAAO,kBAGf,CACIzK,GAAI,EACJpG,KAAM,aACNV,KAAM,CACF8G,GAAI,EACJnD,KAAM,eACNkM,OAAQ,eACR0B,MAAO,kBAGf,CACIzK,GAAI,EACJpG,KAAM,eACNV,KAAM,CACF8G,GAAI,EACJnD,KAAM,4CAGd,CACImD,GAAI,EACJpG,KAAM,cACNV,KAAM,CACF8G,GAAI,EACJnD,KAAM,2BACNiU,SAAU,KAGlB,CACI9Q,GAAI,EACJpG,KAAM,UACNV,KAAM,CACF8G,GAAI,EACJnD,KAAM,iCAyBLkU,GAAqB,SAAC/Q,GAK/B,OAJA1E,GAAgBA,GAAcsH,QAC1B,SAACoO,GAAD,OAAkBA,EAAahR,KAAOA,KAGnCwC,QAAQC,QAAQ,CACnBnJ,OAAQ,OChFVe,GAAS,CACX,CACI2F,GAAI,MACJpG,KAAM,QACNN,OAAQ,WACR2X,WAAY,CACRjR,GAAI,EACJnD,KAAM,iBAEVqU,KAAM,yBACNC,QAAS,CACLC,OAAQ,OACRC,MAAO,IAEXxV,SAAU,CACN,CACIgB,KAAM,0CACNyU,IAAK,EACLrB,MAAO,MAEX,CACIpT,KAAM,2BACNyU,IAAK,EACLrB,MAAO,OAGfsB,gBAAiB,KACjBtV,SAAU,EACVuN,IAAK,EACLgI,SAAU,GAEd,CACIxR,GAAI,MACJpG,KAAM,SACNN,OAAQ,UACR2X,WAAY,CACRjR,GAAI,GACJnD,KAAM,IAEVqU,KAAM,yBACNC,QAAS,CACLC,OAAQ,OACRC,MAAO,0BAEXxV,SAAU,CACN,CACIgB,KAAM,8BACNyU,IAAK,EACLrB,MAAO,MAGfsB,gBAAiB,KACjBtV,SAAU,EACVuN,IAAK,EACLgI,SAAU,MAILC,GAAY,WACrB,OAAOjP,QAAQC,QAAQ,CAAEvJ,KAAMmB,GAAQf,OAAQ,OAGtCoY,GAAW,SAACxY,GACrB,IAAMyY,EAAQ,aACV3R,GAAI3F,GAAOvB,OAASqK,KAAKC,MAAsB,IAAhBD,KAAKE,UACpC8N,QAAS,CACLC,OAAQ,OACRC,MAAO,IAEXG,SAAU,GACPtY,GAKP,OAFAmB,GAAOsJ,KAAKgO,GAELnP,QAAQC,QAAQ,CACnBvJ,KAAMyY,EACNrY,OAAQ,OAIHsY,GAAoB,SAAC5R,EAAI1G,GAClC,IAAMuY,EAAgBxX,GAAOiI,MAAK,SAACwP,GAAD,OAAWA,EAAM9R,KAAOA,KAC1D,YAAsBvB,IAAlBoT,EAAoCrP,QAAQuI,OAAO,CAAEzR,OAAQ,OACjEuY,EAAcvY,OAASA,EACvBuY,EAAcZ,WAAa,CACvBjR,GAAI5D,EAAMjB,WAAW6E,GAAGtB,MACxB7B,KAAK,GAAD,OAAKT,EAAMjB,WAAWsG,WAAW/C,MAAjC,YAA0CtC,EAAMjB,WAAWuG,UAAUhD,QAEtE8D,QAAQC,QAAQ,CAAEvJ,KAAM,CAAEI,UAAUA,OAAQ,QCzF5CuC,GAAW,CAClB,CACImE,GAAI,EACJnD,KAAM,0CACNiT,QAAS,mBACT3T,KAAM,aACNzC,SAAU,cACVgB,QAAS,YACTqV,MAAO,CAAEgC,IAAK,uBAAwBC,KAAM,OAC5CC,WAAY,2BACZC,kBAAkB,EAClBC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,aAAc,IAElB,CACItS,GAAI,EACJnD,KAAM,2BACNiT,QAAS,kBACT3T,KAAM,mBACNzC,SAAU,cACVgB,QAAS,OACTqV,MAAO,CAAEgC,IAAK,uBAAwBC,KAAM,MAC5CC,WAAY,cACZC,kBAAkB,EAClBC,YAAY,ySAGZC,MAAM,kIAENC,SACI,+DACJC,aACI,yGAER,CACItS,GAAI,EACJnD,KAAM,8BACNiT,QAAS,mBACT3T,KAAM,aACNzC,SAAU,cACVgB,QAAS,MACTqV,MAAO,CAAEgC,IAAK,uBAAwBC,KAAM,MAC5CC,WAAY,GACZC,kBAAkB,EAClBC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,aAAc,IAElB,CACItS,GAAI,EACJnD,KAAM,kCACNiT,QAAS,iBACT3T,KAAM,mBACNzC,SAAU,oBACVgB,QAAS,SACTqV,MAAO,CACHgC,IAAK,uBACLC,KAAM,MAEVC,WAAY,YACZC,kBAAkB,EAClBC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,aAAc,IAElB,CACItS,GAAI,EACJnD,KAAM,uBACNiT,QAAS,iBACT3T,KAAM,aACNzC,SAAU,iBACVgB,QAAS,SACTqV,MAAO,CACHgC,IAAK,uBACLC,KAAM,MAEVC,WAAY,uBACZC,kBAAkB,EAClBC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,aAAc,KAITC,GAAW,uCAAG,sBAAAzP,EAAA,sEACVN,QAAQC,QAAQ,CAAEvJ,KAAM2C,GAAUvC,OAAQ,MADhC,mFAAH,qDAIXkZ,GAAgB,SAACxS,GAE1B,OADAnE,GAAWA,GAAS+G,QAAO,SAAC6P,GAAD,OAAaA,EAAQzS,KAAOA,KAChDwC,QAAQC,QAAQ,CAAEvJ,KAAM,CAAE8G,MAAM1G,OAAQ,OAGtCoZ,GAAU,uCAAG,WAAOxZ,GAAP,eAAA4J,EAAA,sEACCN,QAAQC,QAAQ,CACnCvJ,KAAK,aACD8G,GAAInE,GAAS/C,OAASqK,KAAKC,MAAsB,IAAhBD,KAAKE,WACnCnK,GAEPI,OAAQ,MANU,cAChBqX,EADgB,OAQtB9U,GAAS8H,KAAKgN,EAASzX,MARD,kBASfyX,GATe,2CAAH,sDAkBVgC,GAAqB,SAAC3S,GAC/B,IAAI4S,EAAQ,GAMZ,GALAxW,EAAMb,QAAQC,aAAasD,KAAI,SAAC+T,GAE5B,OADAD,EAAQC,EACDA,KAGG,KAAVD,EAAJ,CAEA,IAAME,EAAW,IAAIC,SAIrB,OAHAD,EAASE,OAAO,aAAchT,GAC9B8S,EAASE,OAAO,gBAAiBJ,GAE1BpQ,QAAQC,QAAQ,CACnBnJ,OAAQ,IACRJ,KAAM,CAAE6Y,IAAK,uBAAwBC,KAAM,WCtHpCiB,OAdf,YAGI,IAAD,IAFC1W,aAED,MAFS,UAET,MADCE,iBACD,MADa,4BACb,EACC,OACI,qBAAKA,UAAWA,EAAhB,SACI,oBAAGA,UAAU,qBAAb,UACI,mBAAGA,UAAU,qDACb,wBAAQA,UAAU,yBAAlB,SAA4CF,UCqB7C2W,GA3BK,SAAC,GAAoC,IAAD,IAAjCzW,iBAAiC,MAArB,eAAqB,EAC5C3B,EAAiBuN,YAASjM,GAA1BtB,aAER,OACI,wBACI6M,MACI7M,EAAagD,MACP,+BACA,oCAEVkC,GAAG,eACHhD,QAAS,WACL,IAAMoD,GAAYtF,EAAagD,MAC/BhD,EAAagE,IAAIsB,GACjBrF,aAAaoY,QAAQ,gBAAiB/S,EAASL,aAEnDtD,UAAWA,EAZf,SAcI,mBACIA,UAAS,yBACL3B,EAAagD,MAAQ,QAAU,aCkBpCsV,OApCf,YAGI,IAAD,IAFC3W,iBAED,MAFa,6DAEb,MADC4W,0BACD,SACSvY,EAAiBuN,YAASjM,GAA1BtB,aAER,OACI,sBAAK2B,UAAWA,EAAhB,UACI,qBAAKuD,GAAG,OAAOvD,UAAU,OAAzB,SACI,cAAC,IAAD,CAAMA,UAAU,QAAQgB,GAAG,IAA3B,SACK3C,EAAagD,QAAUuV,EACpB,qBACIvE,IAAI,6BACJC,IAAI,cACJhD,MAAO,CACHuH,MAAO,GACPC,OAAQ,SAIhB,qBACIzE,IAAI,0BACJC,IAAI,cACJhD,MAAO,CACHuH,MAAO,MACPC,OAAQ,cAM1BF,IAAuBvY,EAAagD,OAAS,cAAC,GAAD,QCjCrD0V,GAAY,IAAI5H,IAAI,CACtB,CAAC,IAAK,aACN,CAAC,iBAAkB,iBACnB,CAAC,aAAc,aACf,CAAC,cAAe,cAChB,CAAC,YAAa,YACd,CAAC,UAAW,UACZ,CAAC,OAAQ,iBACT,CAAC,SAAU,SACX,CAAC,SAAU,SACX,CAAC,qBAAsB,qBACvB,CAAC,oBAAqB,sBAoB1B,SAAS6H,GAAT,GAA8C,IAAD,IAArB/V,YAAqB,MAAd,IAAc,EAATiK,EAAS,EAATA,MAChC,OACI,+BACI,mBAAGlL,UAAU,oDACb,cAAC,IAAD,CAAMgB,GAAIC,EAAMjB,UAAU,yBAA1B,SACKkL,OAMF+L,OA5Bf,WACI,IAAMC,EAAaC,cAAbD,SAGN,OAFAA,EAAW,IAAMA,EAASnQ,MAAM,KAAK,GAGjC,qBAAI/G,UAAU,gDAAd,UACI,6BACI,cAAC,IAAD,CAAMgB,GAAG,IAAT,SACI,mBAAGhB,UAAU,sCAIrB,cAACgX,GAAD,CAAc/V,KAAMiW,EAAUhM,MAAO6L,GAAU9U,IAAIiV,SCWhDE,OApCf,WACI,MAAuCxL,YAASjM,GAEhD,OAFA,EAAQjB,WAAR,EAAoBE,eAGhB,qCACI,oBAAIoB,UAAU,6BAAd,SACI,eAAC,IAAD,CACIgB,GAAG,oBACHhB,UAAU,kDAFd,UAII,mBAAGA,UAAU,8CAJjB,wBASJ,6BACI,yBACIA,UAAU,mEACVO,QAAS,SAACO,GACUmH,OAAOoP,QACnB,iCAGA1X,EAAM0C,IAAI,IpCiBlC1C,EAAM2X,MAAN,eAAiBlZ,MoCxBL,UAYI,mBAAG4B,UAAU,kDAZjB,kBCAhB,SAASuX,GAAT,GAAoC,IAAZrW,EAAW,EAAXA,QACdsW,EAAY/O,iBAAO,CACrBgP,aAAc,QACdC,WAAY,aACZC,aAAc,MACdC,YAAa,SACbC,QAAS,cACTC,UAAW,YAGPjZ,EAAkB+M,YAASjM,GAA3Bd,cACA0E,EAAmBrC,EAAnBqC,GAAIpG,EAAe+D,EAAf/D,KAAMV,EAASyE,EAATzE,KACZsb,EAAgBnM,aAAS,GAE3BoM,EAAmB,GACnBC,EAAM,GAEV,OAAQ9a,GACJ,IAAK,eACD6a,EAAgB,sBAAkBvb,EAAK8G,IACvC0U,EACI,qCACI,iCAASxb,EAAK2D,OADlB,4CAKJ,MAEJ,IAAK,aACD4X,EAAgB,sBAAkBvb,EAAK8G,IACvC0U,EACI,qCACI,iCAASxb,EAAK2D,OADlB,wCAEW,iCAAS3D,EAAK6P,SAFzB,0BAKJ,MAEJ,IAAK,YACD0L,EAAgB,kBAAcvb,EAAK8G,IACnC0U,EACI,kDACc,uCAAUxb,EAAK8G,MAD7B,0BACiE,IAC5D9G,EAAKqJ,QAGd,MAEJ,IAAK,UACDkS,EAAgB,qBAAiBvb,EAAK8G,IACtC0U,EACI,qCACI,iCAASxb,EAAK2D,OADlB,mBAIJ,MAEJ,IAAK,cACD4X,EAAgB,qBAAiBvb,EAAK8G,IACtC0U,EACI,qCACI,iCAASxb,EAAK2D,OADlB,0BACwD,IACnD3D,EAAK4X,SAFV,WAKJ,MAEJ,IAAK,eACD2D,EAAgB,qBAAiBvb,EAAK8G,IACtC0U,EACI,qCACI,iCAASxb,EAAK2D,OADlB,+BAMZ,OACI,oBACIJ,UAAS,mDACL+X,EAAc1W,MACR,0DACA,IAJd,SAOI,eAAC,IAAD,CACIL,GAAIgX,EACJhY,UAAU,6CAFd,UAII,wBACIkL,MAAM,yBACNlL,UAAU,0GACVO,QAAS,SAACO,GACNA,EAAEC,iBACFD,EAAEoX,kBACFH,EAAc1V,KAAI,GAElB4F,OAAOsD,WAAP,sBAAkB,sBAAAlF,EAAA,sEACRiO,GAAmB/Q,GADX,OAEd1E,EAAcwD,KAAI,SAAC8V,GACf,OAAOA,EAAKhS,QAAO,SAACoO,GAChB,OAAOA,EAAahR,KAAOA,QAJrB,2CAOf,MAfX,SAkBI,mBAAGvD,UAAU,mBAEjB,sBACIA,UAAS,aAAQwX,EAAU9O,QAAQvL,GAA1B,mGADb,SAGKA,EAAKoF,QAAQ,KAAM,OAExB,mBAAGvC,UAAU,4BAAb,SAA0CiY,SAM3CG,OAtIf,WACI,IAAQvZ,EAAkB+M,YAASjM,GAA3Bd,cAER,OACI,mCACKA,EAAcsE,KAAI,SAACoR,GAAD,OACf,cAACgD,GAAD,CAEIrW,QAASqT,EAAalT,OADjBkT,EAAahR,GAAGlC,aCwEzC,SAASgX,GAAT,GAA8E,IAAvD3X,EAAsD,EAAtDA,SAAU4X,EAA4C,EAA5CA,QAAS/X,EAAmC,EAAnCA,QAASgY,EAA0B,EAA1BA,OAA0B,IAAlBvY,iBAAkB,MAAN,GAAM,EACzE,OACI,qBAAIA,UAAU,WAAd,UACI,wBACIO,QAASA,EACTP,UAAS,sGACLuY,EAAS,6BAA+B,GADnC,YAELvY,GACJsP,MAAO,CAAEkJ,mBAAoB,cALjC,SAOK9X,IAEJ4X,GACG,oBACItY,UAAS,oOACLuY,EAAS,aAAe,IAFhC,SAKKD,OAONG,OAvGf,YAAoD,IAAD,IAAhCC,4BAAgC,SAC/C,EAAmC9M,mBAAS,GAA5C,oBAAO+M,EAAP,KAAmBC,EAAnB,KACA,EAAsCC,YAAalZ,GAA3Cd,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,WACjBoa,EAAW3B,cACX/L,EAAUC,cAEhB,OACI,qBAAIrL,UAAU,OAAd,WACM0Y,GAAwB7Z,EAAcxC,OAAS,GAC7C,eAACgc,GAAD,CACIC,QAAS,cAACS,GAAD,IACTR,OAAuB,IAAfI,EACRpY,QAAS,kBACcqY,EAAJ,IAAfD,EAAgC,EAAkB,IAJ1D,UAOI,mBACI3Y,UAAS,6GAEa,IAAzBnB,EAAcxC,QACX,sBAAM2D,UAAU,6EAAhB,SACKnB,EAAcxC,YAMJ,mBAA1BqC,EAAW9B,KAAKqF,OACb,eAACoW,GAAD,CACIE,OAA8B,mBAAtBO,EAAS5B,SACjB3W,QAAS,kBAAM6K,EAAQlE,KAAK,mBAFhC,UAII,iDACA,mBAAGlH,UAAU,+CAIpBtB,EAAW6E,GAAGyV,OACX,eAACX,GAAD,CACIC,QAAS,cAAC,GAAD,IACTC,OAAuB,IAAfI,EACRpY,QAAS,kBACcqY,EAAJ,IAAfD,EAAgC,EAAkB,IAJ1D,UAOI,8CACA,mBAAG3Y,UAAU,4CAGjB,qCACI,eAACqY,GAAD,CACIE,OAA8B,WAAtBO,EAAS5B,SACjB3W,QAAS,kBAAM6K,EAAQlE,KAAK,WAFhC,UAII,yCACA,mBAAGlH,UAAU,4CAGjB,eAACqY,GAAD,CACIE,OAA8B,aAAtBO,EAAS5B,SACjB3W,QAAS,kBAAM6K,EAAQlE,KAAK,aAC5BlH,UAC0B,aAAtB8Y,EAAS5B,SACH,GACA,8BANd,UASI,2CACA,mBACIlX,UAAS,+DC1CtBiZ,OA3Bf,YAAuC,IAAD,IAApBC,gBAAoB,SAC1B7a,EAAiBuN,YAASjM,GAA1BtB,aAER,OAAI6a,EAEI,yBAAQlZ,UAAU,iDAAlB,UACI,cAAC,GAAD,CACIA,UAAU,gCACV4W,oBAAkB,IAEtB,cAAC,GAAD,CAAS8B,sBAAoB,OAMrC,sBACI1Y,UAAS,yFACL3B,EAAagD,MAAQ,UAAY,UAD5B,YADb,UAKI,cAAC,GAAD,IACA,cAAC,GAAD,QCoBG8X,OA5Cf,YAA4D,IAAxCjO,EAAuC,EAAvCA,MAAOjK,EAAgC,EAAhCA,KAAMX,EAA0B,EAA1BA,QAA0B,IAAjB8Y,aAAiB,SAC/ClC,EAAaC,cAAbD,SACFmC,EAAWD,EAAQlC,IAAajW,EAAOiW,EAASoC,WAAWrY,GACzD5C,EAAiBuN,YAASjM,GAA1BtB,aAER,OACI,6BACI,eAAC,IAAD,CACI2C,GAAIC,EACJsY,gBAAgB,mBAChBvZ,UAAS,0BACL3B,EAAagD,MAAQ,uBAAyB,IAElD+X,MAAOA,EANX,UAQI,mBACIpZ,UACIM,EACA,KACC+Y,EAAW,UAAY,IACxB,mBACEA,GAAYhb,EAAagD,MAAQ,QAAU,MAGrD,sBACIrB,UAAS,eACLqZ,EAAW,GAAK,OADX,6BAEYhb,EAAagD,MAAQ,SAAW,IAHzD,SAKK6J,IAEL,mBACIlL,UAAS,4HAILqZ,EAAW,GAAK,oCCgIzBG,OAnKf,WACI,MAAqD5N,YAASjM,GAAtDjB,EAAR,EAAQA,WAAYL,EAApB,EAAoBA,aAAcO,EAAlC,EAAkCA,eAC5B6a,EAAW/a,EAAW9B,KAAKqF,MAC3ByX,OAAuD1X,IAA5BpD,EAAe2E,GAAGlC,MAkJnD,OACI,qBAAKkC,GAAG,WAAWvD,UAAU,UAA7B,SACI,+BACK3B,EAAa4D,OACV,6BACI,cAAC,GAAD,CAAajC,UAAU,yGArJ3C,WACI,IAAM2Z,EAAS,GACf,OAAQF,GACJ,IAAK,QACDE,EAAOzS,KACH,qCACI,cAAC,GAAD,CAEIgE,MAAM,YACN5K,QAAQ,wBACRW,KAAK,IACLmY,OAAK,GAJD,aAMR,cAAC,GAAD,CAEIlO,MAAM,mBACN5K,QAAQ,eACRW,KAAK,aAHD,YAMR,cAAC,GAAD,CAEIiK,MAAM,aACN5K,QAAQ,wBACRW,KAAK,eAHD,cAMR,cAAC,GAAD,CAEIiK,MAAM,QACN5K,QAAQ,eACRW,KAAK,UAHD,aAOhB,MAEJ,IAAK,iBACD,IAAKyY,EAA0B,CAC3BC,EAAOzS,KACH,cAAC,GAAD,CAEIgE,MAAM,gBACN5K,QAAQ,wBACRW,KAAK,kBAHD,kBAMZ,MAGR,IAAK,aACD0Y,EAAOzS,KACH,qCACI,cAAC,GAAD,CAEIgE,MAAM,YACN5K,QAAQ,wBACRW,KAAK,IACLmY,OAAK,GAJD,aAOR,cAAC,GAAD,CAEIlO,MAAM,gBACN5K,QAAQ,uBACRW,KAAK,QAHD,OAMR,cAAC,GAAD,CAEIiK,MAAM,SACN5K,QAAQ,eACRW,KAAK,WAHD,UAMR,cAAC,GAAD,CAEIiK,MAAM,YACN5K,QAAQ,eACRW,KAAK,cAHD,aAMR,cAAC,GAAD,CAEIiK,MAAM,QACN5K,QAAQ,kBACRW,KAAK,UAHD,aAOhB,MAEJ,IAAK,aACD0Y,EAAOzS,KACH,qCACI,cAAC,GAAD,CAEIgE,MAAM,gBACN5K,QAAQ,uBACRW,KAAK,IACLmY,OAAK,GAJD,OAOR,cAAC,GAAD,CAEIlO,MAAM,SACN5K,QAAQ,eACRW,KAAK,WAHD,UAMR,cAAC,GAAD,CAEIiK,MAAM,YACN5K,QAAQ,eACRW,KAAK,cAHD,iBA8BxB,MApBiB,mBAAbwY,GAAiCC,GACjCC,EAAOzS,KACH,cAAC,GAAD,CAEIgE,MAAM,oBACN5K,QAAQ,cACRW,KAAK,sBAHD,sBAQhB0Y,EAAOzS,KACH,cAAC,GAAD,CAEIgE,MAAM,mBACN5K,QAAQ,kBACRW,KAAK,qBAHD,qBAOL0Y,EAWEC,SC5IFC,OAjBf,WACI,IAAQxb,EAAiBuN,YAASjM,GAA1BtB,aAER,OACI,mCACI,yBACI2B,UAAS,mBACL3B,EAAagD,MAAQ,OAAS,OADzB,8EADb,UAKI,cAAC,GAAD,IACA,cAAC,GAAD,UCIDyY,OAnBf,YAAiE,IAAD,IAAxCha,aAAwC,MAAhC,SAAgC,EAAtBiM,EAAsB,EAAtBA,YAAa1K,EAAS,EAATA,MACnD,OACI,sBAAKrB,UAAU,yCAAf,UACI,uBAAOwD,QAAS1D,EAAOE,UAAU,OAAjC,SACKF,IAEL,uBACIyD,GAAIzD,EACJE,UAAU,4FACV7C,KAAK,SACL4O,YAAaA,EACb1K,MAAOA,EAAMY,MACbc,SAAU,gBAAGZ,EAAH,EAAGA,OAAH,OAAgBd,EAAMgB,IAAIF,EAAOd,UAE/C,mBAAGrB,UAAU,wFCYV+Z,OA1Bf,YAAgF,IAAxDja,EAAuD,EAAvDA,MAAOuB,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,QAAyC,IAAhCtB,iBAAgC,MAApB,GAAoB,MAAhBga,YAAgB,SAC3E,OACI,sBACIha,UAAS,2DAAsDA,GADnE,UAGI,uBAAOwD,QAAS1D,EAAOE,UAAU,oBAAjC,SACKF,IAEL,wBACIyD,GAAIzD,EACJE,UAAS,mCACLga,EAAO,OAAS,OADX,gEAGT3Y,MAAOA,EAAMY,MACbc,SAAU,gBAAGZ,EAAH,EAAGA,OAAH,OAAgBd,EAAMgB,IAAIF,EAAOd,QAN/C,SAQKC,EAAQ6B,KAAI,SAAC0H,EAAMzH,GAAP,OACT,wBAAgB/B,MAAOwJ,EAAKxJ,MAA5B,SACKwJ,EAAK/K,OADGsD,YCsClB6W,OArDf,YAAiD,IAA9Bvd,EAA6B,EAA7BA,QAASD,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,WAC9B,OACI,sBAAKkD,UAAU,eAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,mBAAGA,UAAU,mCADjB,WAEI,sBAAMA,UAAU,OAAhB,kBAGHtD,EAAQyG,KAAI,SAACgD,GACV,MACS,WADDA,EAAOhJ,KAGH,cAAC,GAAD,CAEI2C,MAAOqG,EAAOrG,MACduB,MAAO5E,EAAK0J,EAAO+T,MACnBnO,YAAa5F,EAAO4F,YACpBhJ,SAAUoD,EAAOpD,UAJZoD,EAAOrG,OAUhB,cAAC,GAAD,CAEIA,MAAOqG,EAAOrG,MACduB,MAAO5E,EAAK0J,EAAO+T,MACnB5Y,QAAS6E,EAAO7E,QAChByB,SAAUoD,EAAOpD,SACjBiX,KAAM7T,EAAO6T,MALR7T,EAAOrG,UAW/BhD,GACG,cAAC,GAAD,CACIgD,MAAM,iBACNM,KAAK,iBACLJ,UAAU,cACVqB,MAAOvE,EAAWV,aAClBkF,QAASxE,EAAWR,oBACf2F,MACAkB,KAAI,SAACgX,GAAD,MAAa,CACdra,MAAOqa,EACP9Y,MAAO8Y,YCGpBC,OAlDf,YAA6C,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACpBC,EAAiBD,EAAaA,EAAWE,WAAWvY,MAAQ,GAC5DoT,EAAQiF,EAAaA,EAAWjF,MAAMpT,MAAQ,GAEpD,OACI,gCACI,oBAAIjC,UAAU,YAAd,SACKqa,EAAQlX,KAAI,YAA0C,IAC/CsX,EADQvP,EAAsC,EAAtCA,MAAOgP,EAA+B,EAA/BA,KAAMQ,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAQnC,YANmB3Y,IAAfsY,EACAK,EAAWF,GAAyB,EAGpCA,EAAyBF,KADzBG,EAAWA,GAAYR,GAIvB,qBAEIla,UAAS,mEACQ,IAAb2a,EAAqB,iBAAmB,IAE5Cpa,QAAS,YACY,IAAboa,GACAL,EAAWjY,IAAI,CACXmY,WAAYE,EACZrF,MAAOoF,GACS,SAAVpF,EACI,MAEJ,UAbtB,UAkBKnK,EACAuP,GACG,mBACIza,UAAS,2BACK,SAAVqV,EAAmB,OAAS,UArBnCnK,WCUlB0P,OA3Bf,YAA4E,IAAxDne,EAAuD,EAAvDA,KAAuD,IAAjDoe,cAAiD,SAAjCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,UAC1D,OACI,qCACI,oBAAIhb,UAAS,yBAAoBgb,EAAY,cAAgB,IAA7D,SACKve,EAAK0G,KAAI,SAAC8X,EAAM7X,GAAP,OACN,oBAEIkM,MACIyL,EAAa3X,GACP,CAAEyT,MAAOkE,EAAa3X,SACtBpB,EAEVhC,UAAU,mCAPd,SASKib,GARI7X,QAYhByX,GAAUC,GACP,oBAAI9a,UAAU,iBAAd,SACI,oBAAIkb,QAASze,EAAKJ,OAAlB,SAA2Bye,UC4BhCK,OA5Cf,YAA6C,IAAxB1e,EAAuB,EAAvBA,KAAM4d,EAAiB,EAAjBA,QAASS,EAAQ,EAARA,KACxBM,EAAWC,cAAXD,OACFE,EAAY1P,YAAS,MACnBvM,EAAgBuM,YAASjM,GAAzBN,YAOR,OANAQ,YAASyb,GAAWxb,MAAM,cAE1BwL,qBAAU,WACF8P,EAAO7X,IAAI+X,EAAUjZ,KAAK+Y,EAAO7X,MACtC,CAAC6X,EAAO7X,KAGP,gCACK9G,EAAK0G,KAAI,SAAC0H,GACP,IAAMgQ,EAASS,EAAUrZ,QAAU4I,EAAKtH,GAAGtB,MAC3C,OACI,cAAC,GAAD,CAEI+Y,UAAWI,EAAO7X,KAAO6X,EAAO7X,KAAOsH,EAAKtH,GAAGtB,MAC/C6Y,KAAMA,GAAQA,EAAKjQ,GAAM,kBAAMyQ,EAAUjZ,IAAI,SAC7CwY,OAAQA,EACRE,aAAcV,EAAQlX,KAAI,SAACoY,GAAD,OAASA,EAAI1E,SACvCpa,KAAM4d,EAAQlX,KACV,gBAAG+W,EAAH,EAAGA,KAAMsB,EAAT,EAASA,QAAT,IAAkBC,oBAAlB,MAAiC,GAAjC,SACIvB,EAC2B,KAArBrP,EAAKqP,GAAM7Y,MACPoa,EACA5Q,EAAKqP,GAAM7Y,MACfma,EAAQ,2BACD3Q,GADA,IAEHgQ,SACAa,WAAY,SAACnY,GACT+X,EAAUjZ,IAAIkB,IAElBlE,cACAwL,cAlBbA,EAAKtH,GAAGlC,aCAtBsa,OAlBf,YAAqD,IAApClf,EAAmC,EAAnCA,KAAM4d,EAA6B,EAA7BA,QAASS,EAAoB,EAApBA,KAAMR,EAAc,EAAdA,WAClC,OAAoB,IAAhB7d,EAAKJ,OAED,mBAAG2D,UAAU,+EAAb,mCAMJ,mCACI,kCACI,cAAC,GAAD,CAAWqa,QAASA,EAASC,WAAYA,IACzC,cAAC,GAAD,CAAWD,QAASA,EAAS5d,KAAMA,EAAMqe,KAAMA,UCoChDc,OAjDf,YAA2D,IAArCC,EAAoC,EAApCA,eAAgBpf,EAAoB,EAApBA,KAAMqf,EAAc,EAAdA,WAClC1f,EAAeyf,EAAezf,aAAa6F,MAC3C5F,EAASwf,EAAexf,OAAO4F,MAC/B1F,EAAcsf,EAAetf,YAAY0F,MACzC8Z,EAAerV,KAAKsV,KAAKvf,EAAKJ,OAASD,GACzC6f,EAAQ1f,EAAcmK,KAAKwV,MAAM7f,EAAS,GAE1C8f,GADJF,EAAQA,EAAQ,EAAI,EAAIA,GACN5f,EAAS,EAG3B,OAFA8f,EAAMA,EAAMJ,EAAeA,EAAeI,EAGtC,oBAAInc,UAAU,2BAAd,SACI,+BACKic,EAAQ,GACL,wBACIjc,UAAU,oFACVO,QAAS,kBAAMub,EAAW,IAF9B,SAII,mBAAG9b,UAAU,+BAGpB2I,GAAMsT,EAAOE,GAAKhZ,KAAI,SAACiZ,GAAD,OACnB,wBAEIpc,UAAS,4CACJzD,IAAgB6f,EACX,iDACA,sBAEV7b,QAAS,kBACL6b,KAAW7f,EAAcuf,EAAWM,GAAS,MARrD,SAWKA,GAVIA,MAaZD,EAAMJ,GACH,wBACI/b,UAAU,oFACVO,QAAS,kBAAMub,EAAWC,IAF9B,SAII,mBAAG/b,UAAU,sCCYtBqc,OAlDf,YAQI,IAPAhC,EAOD,EAPCA,QACA5d,EAMD,EANCA,KACAqe,EAKD,EALCA,KACApe,EAID,EAJCA,QACA4f,EAGD,EAHCA,YACAxf,EAED,EAFCA,WACAwd,EACD,EADCA,WAEMiC,EAAeC,mBACjB,kBAAO9f,ExC+MR,SAAoBA,EAAS4f,EAAa7f,GAC7C,OAAOA,EAAK0J,QAAO,SAACsW,GAChB,OAAO/f,EAAQggB,OAAM,SAACvW,GAClB,IAAMwW,EAAaL,EAAYnW,EAAO+T,MAAMjY,MAC5C,GAAmB,KAAf0a,EAAmB,OAAO,EAE9B,IAAIC,EAAUH,EAAItW,EAAO0W,IAAI5a,MAE7B,MACS,WADDkE,EAAOhJ,MAKoD,IAFvDyf,EACKtZ,WACA3G,OAAO,IAAImgB,OAAJ,YAAgBH,EAAhB,MAAgC,MAI5CxW,EAAO4W,QACA5W,EAAO4W,QAAQJ,EAAYC,GAE/BD,IAAeC,QwCnOjBD,CAAWjgB,EAAS4f,EAAa7f,GAAQA,IAC1D,CAACC,EAAS4f,EAAa7f,IAGrBugB,EAAaR,mBACf,kBAAOlC,ExC4OR,WAAyC7d,GAAO,IAA5B+d,EAA2B,EAA3BA,WAAYnF,EAAe,EAAfA,MAWnC,OAVAmF,EAAaA,EAAWvY,MACxBoT,EAAQA,EAAMpT,MACdxF,EAAKwgB,MAAK,SAAC5W,EAAG0B,GACV,IAAMmV,EAAUnS,GAAkByP,EAAYnU,GAAGhF,MAC3C8b,EAAUpS,GAAkByP,EAAYzS,GAAG1G,MACjD,MAAc,SAAVgU,EACO6H,GAAWC,GAAW,EAAI,EAE9BD,GAAWC,GAAW,EAAI,KAE9B1gB,EwCvPiB2gB,CAAS9C,EAAYiC,GAAgBA,IACzD,CAACjC,EAAYiC,IAGXc,EAAgBb,mBAClB,kBAAO1f,ExC8LR,SAAsBA,EAAYL,GACrC,MAAsCK,EAAWmF,MAAzC1F,EAAR,EAAQA,YAAaH,EAArB,EAAqBA,aACf6f,GAAS1f,EAAc,GAAKH,EAC5B+f,EAAMF,IAAS7f,EACrB,OAAOK,EAAKqK,MAAMmV,EAAOE,GwClMDmB,CAAaxgB,EAAYkgB,GAAcA,IAC3D,CAAClgB,EAAYkgB,IAGjB,OACI,sBAAKhd,UAAU,oCAAf,UACKtD,GACG,cAAC,GAAD,CACIA,QAASA,EACTD,KAAM6f,EACNxf,WAAYA,IAGpB,cAAC,GAAD,CACIL,KAAM4gB,EACNhD,QAASA,EACTC,WAAYA,EACZQ,KAAMA,IAEThe,GACG,cAAC,GAAD,CACI+e,eAAgB/e,EAChBL,KAAM8f,EACNT,WAAYhf,EAAWP,YAAY8F,UCJxCkb,GA3CO,SAAC,GAKhB,IAAD,IAJFnd,YAIE,MAJK,GAIL,MAHFE,eAGE,MAHQ,GAGR,MAFFkd,iBAEE,aADFC,kBACE,SACIla,EAAKnD,EAAKmC,QAAQ,IAAK,KAC7B,OACI,qBAAIvC,UAAU,yBAAd,UACI,uBAAMA,UAAU,oBAAhB,UACI,mBAAGA,UAAS,sBAAiBM,EAAjB,wBAAmD,IAC9DF,KAEJqd,GACG,sBAAKzd,UAAU,6CAAf,UACI,uBAAOwD,QAASD,EAAhB,SAAqBka,EAAW3d,QAChC,wBACIyD,GAAIA,EACJlC,MAAOoc,EAAWpc,MAClB0B,SAAU0a,EAAWC,SACrB1d,UAAU,sDAJd,SAMKyd,EAAWnc,QAAQ6B,KAAI,gBAAGrD,EAAH,EAAGA,MAAOuB,EAAV,EAAUA,MAAV,OACpB,wBAAoBA,MAAOA,EAA3B,SACKvB,GADQuB,WAO5Bmc,GACG,yBACIxd,UAAU,0GACVO,QAASid,EAAUT,QAFvB,UAII,mBAAG/c,UAAU,uBACZwd,EAAU1d,aCvBhB6d,GAbG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAkC,IAAxB1S,aAAwB,MAAhB,UAAgB,EACnD,OACI,wBACIA,MAAOA,EACP/N,KAAK,SACL6C,UAAU,iEACVO,QAASqd,EAJb,SAMI,mBAAG5d,UAAU,wBC8BV6d,GArCI,SAAC,GAA8C,IAA5Cta,EAA2C,EAA3CA,GAAIsX,EAAuC,EAAvCA,OAAQiD,EAA+B,EAA/BA,OAAQF,EAAuB,EAAvBA,SAAUG,EAAa,EAAbA,OAChD,OACI,sBAAK/d,UAAU,OAAf,UACK4d,GAAY,cAAC,GAAD,CAAWA,SAAU,kBAAMA,EAASra,EAAGlC,UACnDyc,GACG,yBACI5S,MAAM,QACNlL,UAAS,iCACL6a,EACM,eACA,iCAEVta,QAAS,kBAAMud,EAAOjD,EAAS,KAAOtX,EAAGlC,QAP7C,UASI,mBAAGrB,UAAU,mCACb,wCACA,mBACIA,UAAS,uBACL6a,EAAS,KAAO,OADX,cAMpBkD,GACG,yBACI7S,MAAM,gBACNlL,UAAS,sDACTO,QAASwd,EAHb,UAKI,mBAAG/d,UAAU,2CACb,uDCJLge,GA3BK,SAAC,GAA+C,IAA7Cza,EAA4C,EAA5CA,GAAInD,EAAwC,EAAxCA,KAAMkT,EAAkC,EAAlCA,MAAO5T,EAA2B,EAA3BA,KAAMmb,EAAqB,EAArBA,OAAQiD,EAAa,EAAbA,OAClD,OACI,sBAAK9d,UAAU,oBAAf,UACI,qBACIA,UAAU,0FACVsP,MAAO,CACH2O,gBAAgB,QAAD,OAAU3K,EAAV,SAGvB,sBAAKtT,UAAU,8BAAf,UACK8d,EACG,mBACItS,KAAI,WAAMpL,GACVG,QAAS,kBAAMud,EAAOjD,EAAS,KAAOtX,EAAGlC,QACzCrB,UAAU,UAHd,SAKKI,IAGL,sBAAMJ,UAAU,sBAAhB,SAAuCI,IAE3C,uBAAMJ,UAAU,6BAAhB,cAA+CN,EAA/C,cCNDwe,GAbS,SAACpc,GACrB,OACI,cAAC,EAAD,aACI1B,KAAK,WACLN,MAAM,WACN3C,KAAK,SACLmE,QAAO,CAAG,CAAExB,MAAO,OAAQuB,MAAO,KAA3B,oBCTR,CACH,CAAEkC,GAAI,EAAGzD,MAAO,aAAcuB,MAAO,cACrC,CAAEkC,GAAI,EAAGzD,MAAO,WAAYuB,MAAO,YACnC,CAAEkC,GAAI,EAAGzD,MAAO,oBAAqBuB,MAAO,qBAC5C,CAAEkC,GAAI,EAAGzD,MAAO,kBAAmBuB,MAAO,mBAC1C,CAAEkC,GAAI,EAAGzD,MAAO,iBAAkBuB,MAAO,kBACzC,CAAEkC,GAAI,EAAGzD,MAAO,cAAeuB,MAAO,kBDIlC0K,YAAY,mBACRjK,KEMDqc,GAdQ,SAACrc,GACpB,OACI,cAAC,EAAD,aACI1B,KAAK,UACLN,MAAM,UACN3C,KAAK,OACLmE,QCTD,CACH,CAAEiC,GAAI,EAAGzD,MAAO,OAAQuB,MAAO,QAC/B,CAAEkC,GAAI,EAAGzD,MAAO,YAAauB,MAAO,aACpC,CAAEkC,GAAI,EAAGzD,MAAO,MAAOuB,MAAO,OAC9B,CAAEkC,GAAI,EAAGzD,MAAO,SAAUuB,MAAO,UACjC,CAAEkC,GAAI,EAAGzD,MAAO,SAAUuB,MAAO,WDK7B0K,YAAY,uBACZxK,UAAQ,GACJO,KEKDsc,GAdQ,SAACtc,GACpB,OACI,cAAC,EAAD,aACI1B,KAAK,WACLN,MAAM,WACN3C,KAAK,OACLmE,QCTD,CACH,CAAEiC,GAAI,EAAGzD,MAAO,oBAAqBuB,MAAO,qBAC5C,CAAEkC,GAAI,EAAGzD,MAAO,WAAYuB,MAAO,YACnC,CAAEkC,GAAI,EAAGzD,MAAO,iBAAkBuB,MAAO,mBDOrC0K,YAAY,yBACZxK,UAAQ,GACJO,KEQDuc,GAlBF,SAAC,GAA2D,IAAzD3d,EAAwD,EAAxDA,SAAUV,EAA8C,EAA9CA,UAAWa,EAAmC,EAAnCA,SAAmC,IAAzByd,mBAAyB,MAAX,CAAC,IAAU,EACpE,OACI,uBACIzd,SAAU,SAACC,GAEP,OADAA,EAAEC,iBACKF,EAASC,IAHxB,UAMI,qBAAKd,UAAWA,EAAhB,SAA4BU,IAC5B,qBAAKV,UAAU,wBAAf,SACKse,EAAYnb,KAAI,SAACrB,EAAOsB,GAAR,OACb,cAAC,EAAD,eAAwBtB,GAAPsB,YCyJtBmb,GA7JO,SAAC,GAIhB,IAHHjZ,EAGE,EAHFA,MACAkZ,EAEE,EAFFA,UAEE,IADFxe,iBACE,MADU,mCACV,EACIqR,EAAYzF,YAAS6S,KAAKC,MAAMD,KAAKE,UAAUrZ,EAAMjE,SAG3D,OAFAxB,YAASwR,GAAWvR,MAAM,6BAGtB,eAAC,GAAD,CACIE,UAAWA,EACXa,SAAQ,sBAAE,4BAAAwF,EAAA,sEACmB8N,GAAoB9C,EAAUpP,OADjD,gBAEN8G,GAAO,CACHlM,OAHE,EACEA,OAGJmM,QAAS,mBACTC,WAAY,gDACZE,gBAJG,WAKC7D,EAAMjD,IAAIoc,KAAKC,MAAMD,KAAKE,UAAUtN,EAAUhQ,SAC9Cmd,OARF,2CAFd,UAeI,cAAC,EAAD,CACIxe,UAAU,2BACVF,MAAM,eACNM,KAAK,eACLmD,GAAG,IACHlC,MAAOgQ,EAAUjR,KACjB2L,YAAY,6BACZ7I,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,gBACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHlC,MAAOgQ,EAAUgC,QACjBtH,YAAY,kBACZ7I,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,gBACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAOgQ,EAAU3R,KACjBqM,YAAY,kBACZ7I,UAAQ,IAGZ,cAAC,GAAD,CACIlD,UAAU,gBACVuD,GAAG,IACHlC,MAAOgQ,EAAUpU,SACjBiG,UAAQ,IAGZ,cAAC,GAAD,CACIlD,UAAU,2BACVuD,GAAG,IACHlC,MAAOgQ,EAAUpT,QACjBiF,UAAQ,IAGZ,cAAC,GAAD,CACIlD,UAAU,gBACVuD,GAAG,IACHlC,MAAOgQ,EAAUoC,WAGrB,cAAC,EAAD,CACIzT,UAAU,gBACVF,MAAM,OACNM,KAAK,OACLmD,GAAG,IACHlC,MAAOgQ,EAAUkC,KACjBpW,KAAK,SACLyL,IAAI,MAGR,cAAC,EAAD,CACI5I,UAAU,gBACVF,MAAM,QACNM,KAAK,QACLmD,GAAG,IACHlC,MAAOgQ,EAAUmC,MACjBrW,KAAK,SACLyL,IAAI,MAGR,cAAC,EAAD,CACI5I,UAAU,gBACVF,MAAM,gBACNM,KAAK,SACLjD,KAAK,QACLkE,MAAOgQ,EAAUyC,aACjBxS,QAAS,CACL,CACIxB,MAAO,SACPuB,OAAO,GAEX,CACIvB,MAAO,UACPuB,OAAO,MAKnB,cAAC,EAAD,CACIrB,UAAU,gBACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHlC,MAAOgQ,EAAUqC,MACjBvW,KAAK,SACLyL,IAAI,MAGR,cAAC,EAAD,CACI5I,UAAU,gBACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,KACHlC,MAAOgQ,EAAUsC,SACjBxW,KAAK,SACLyL,IAAI,MAGR,cAAC,EAAD,CACI5I,UAAU,2BACVF,MAAM,eACNM,KAAK,eACLmD,GAAG,KACHlC,MAAOgQ,EAAUuC,aACjB/K,IAAKwI,EAAUwC,YAAYxS,MAC3BlE,KAAK,OACL4O,YAAY,oBAGhB,cAAC,EAAD,CACI/L,UAAU,2BACVF,MAAM,cACNM,KAAK,cACLmD,GAAG,KACHlC,MAAOgQ,EAAUwC,YACjBjL,IAAKyI,EAAUuC,aAAavS,MAC5BlE,KAAK,OACL4O,YAAY,wBC5Ib6S,GArBY,CACvBniB,KAAM,CACFwX,UAAW,KACX7T,KAAM,GACNiT,QAAS,GACT3T,KAAM,GACNzC,SAAU,GACVgB,QAAS,GACTqV,MAAO,GACPC,KAAM,EACNC,MAAO,EACPC,SAAU,GACVC,MAAO,EACPC,SAAU,EACVC,aAAc,GACdC,YAAa,GACbC,cAAc,GAElB+K,OAAQ,ICqCGC,OArDf,YAOI,IANA5T,EAMD,EANCA,MACAxK,EAKD,EALCA,SACA4E,EAID,EAJCA,MACAyZ,EAGD,EAHCA,QAGD,IAFCze,eAED,MAFW,qBAEX,MADCgP,aACD,MADS,GACT,EACOkP,EAAY,WACdlZ,EAAMjD,KAAI,GACV0c,GAAWA,KAGTC,EAAW1Z,EAAMrD,MAEvB,OACI,qCACI,qBACI1B,QAASie,EACTxe,UAAS,sEACLgf,EAAW,qBAAuB,eAG1C,sBACIhf,UAAS,2KACLgf,EAAW,yBAA2B,IAE1C1P,MAAOA,EAJX,UAMI,sBAAKtP,UAAU,iEAAf,UACI,+BACI,mBAAGA,UAAS,UAAKM,EAAL,wBACX4K,KAEL,wBACIlL,UAAU,4BACVkL,MAAM,SACN3K,QAASie,EAHb,SAKI,mBAAGxe,UAAU,+DAGrB,qBACIA,UAAU,4BACVsP,MAAO,CAAE2P,UAAW,uBAFxB,SAIKD,GAAYte,W,qDCxBlBwe,GApBG,SAAC,GAMZ,IALHxe,EAKE,EALFA,SACAV,EAIE,EAJFA,UACAa,EAGE,EAHFA,SAGE,IAFFyd,mBAEE,MAFY,CAAC,IAEb,EADCxc,EACD,kBACF,OACI,cAAC,GAAD,2BAAWA,GAAX,aACI,cAAC,GAAD,CACIwc,YAAaA,EACbte,UAAWA,EACXa,SAAUA,EAHd,SAKKH,QCIFye,GAjBO,SAACrd,GACnB,IAAMsd,EAAevG,YAAalZ,EAAMX,OAAOI,SAAS3C,MAExD,OACI,cAAC,EAAD,aACIqD,MAAM,eACNM,KAAK,eACLjD,KAAK,SACLmE,QAAS8d,EAAajc,KAAI,SAAC6S,GAAD,MAAc,CACpClW,MAAOkW,EAAQ5V,KAAKiB,MACpBA,MAAO2U,EAAQzS,GAAGlC,WAElBS,KCyODud,GAzOY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtBha,EAAQuT,YAAa,CACrBpc,KAAK,eAAMmiB,GAAmBniB,MAC9BoiB,OAAO,eAAMD,GAAmBC,UAE9BO,EAAevG,YAAalZ,EAAMX,OAAOI,SAAS3C,MAClD8iB,EAAgB1G,YAAalZ,EAAMX,OAAOE,UAAUzC,MAClDA,EAAiB6I,EAAjB7I,KAAiB6I,EAAXuZ,OA0Bd,OAzBAhf,YAASyF,GAAOxF,MAAM,wBAEtBwL,qBAAU,WACN,IAAIkU,EAAmB,GACvBvX,OAAOwX,WAAa,YAAuB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAC5B,GAAgB,KAAZD,EAAgB,CAChB,IAAM1J,EAAUoJ,EAAavZ,MACzB,qBAAGwN,QAAsBhS,QAAUme,KAEnCxJ,IACAvZ,EAAKwX,UAAU5R,IAAI2T,EAAQzS,GAAGlC,OAC9B5E,EAAK2D,KAAKiC,IAAI2T,EAAQ5V,KAAKiB,OAC3B5E,EAAK6W,MAAMjR,IAAI2T,EAAQ1C,MAAMgC,IAAIjU,OACjC5E,EAAK4W,QAAQhR,IAAI2T,EAAQ3C,QAAQhS,OACjC5E,EAAKiD,KAAK2C,IAAI2T,EAAQtW,KAAK2B,OAC3B5E,EAAKQ,SAASoF,IAAI2T,EAAQ/Y,SAASoE,OACnC5E,EAAKwB,QAAQoE,IAAI2T,EAAQ/X,QAAQoD,QAErCme,EAAmB,QAEnBA,GAAoBG,KAG7B,IAGC,eAAC,GAAD,CACIzU,MAAM,kBACN5F,MAAOga,EACPhB,YAAa,CACT,CACIxe,MAAO,2BACPQ,QAAS,gBAGjBN,UAAU,uDACVa,SAAQ,sBAAE,4BAAAwF,EAAA,sEACmB2N,GAAiBvX,EAAKwF,OADzC,gBAEN8G,GAAO,CACHlM,OAHE,EACEA,OAGJoM,WAAY,8CACZE,gBAAgB,WAAD,4BAAE,8BAAA9C,EAAA,6DAEb5J,EAAK4F,IAAL,eAAcuc,GAAmBniB,OAGjC6iB,EAAUjd,KAAI,GALD,SASH+R,KATG,gBAQCwL,EARD,EAQLnjB,KAER8iB,EAAcld,IAAIud,GAVL,2CAAF,kDAAC,KALd,2CAVd,UA8BI,eAAC,EAAD,CAAM5f,UAAU,aAAhB,UACI,2CADJ,eACuC,IACnC,mBAAGA,UAAU,mBAFjB,iFAMA,cAAC,GAAD,CACIA,UAAU,2BACVuD,GAAG,IACHpG,KAAK,SACLkE,MAAO5E,EAAK2D,KACZ2C,SAAU,YAA4B,IAAlB8c,EAAiB,EAAxBxe,MACH2U,EAAUoJ,EAAavZ,MACzB,qBAAGtC,GAAYlC,QAAUwe,KAE7BpjB,EAAKwX,UAAU5R,IAAI2T,EAAQzS,GAAGlC,OAC9B5E,EAAK2D,KAAKiC,IAAI2T,EAAQ5V,KAAKiB,OAC3B5E,EAAK6W,MAAMjR,IAAI2T,EAAQ1C,MAAMgC,IAAIjU,OACjC5E,EAAK4W,QAAQhR,IAAI2T,EAAQ3C,QAAQhS,OACjC5E,EAAKiD,KAAK2C,IAAI2T,EAAQtW,KAAK2B,OAC3B5E,EAAKQ,SAASoF,IAAI2T,EAAQ/Y,SAASoE,OACnC5E,EAAKwB,QAAQoE,IAAI2T,EAAQ/X,QAAQoD,QAErCwC,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,UACNM,KAAK,UACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAO5E,EAAK4W,QACZ/R,QAAS8d,EAAajc,KAAI,gBAAGkQ,EAAH,EAAGA,QAAS9P,EAAZ,EAAYA,GAAZ,MAAsB,CAC5CzD,MAAOuT,EAAQhS,MACfA,MAAOkC,EAAGlC,UAEd0B,SAAU,YAA4B,IAAlB8c,EAAiB,EAAxBxe,MACH2U,EAAUoJ,EAAavZ,MACzB,qBAAGtC,GAAYlC,QAAUwe,KAE7BpjB,EAAKwX,UAAU5R,IAAI2T,EAAQzS,IAC3B9G,EAAK2D,KAAKiC,IAAI2T,EAAQ5V,MACtB3D,EAAK4W,QAAQhR,IAAI2T,EAAQ3C,SACzB5W,EAAKiD,KAAK2C,IAAI2T,EAAQtW,MACtBjD,EAAKQ,SAASoF,IAAI2T,EAAQ/Y,UAC1BR,EAAKwB,QAAQoE,IAAI2T,EAAQ/X,UAE7B8N,YAAY,kBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAO5E,EAAKiD,KACZqM,YAAY,kBACZ7I,UAAQ,IAGZ,cAAC,GAAD,CACIlD,UAAU,2BACVuD,GAAG,IACHlC,MAAO5E,EAAKQ,SACZiG,UAAQ,IAGZ,cAAC,GAAD,CACIlD,UAAU,2BACVuD,GAAG,IACHlC,MAAO5E,EAAKwB,QACZ8N,YAAY,kBACZ7I,UAAQ,IAGZ,cAAC,GAAD,CACIlD,UAAU,2BACVuD,GAAG,IACHlC,MAAO5E,EAAKgX,WAGhB,cAAC,EAAD,CACIzT,UAAU,gBACVF,MAAM,OACNM,KAAK,OACLmD,GAAG,IACHlC,MAAO5E,EAAK8W,KACZpW,KAAK,SACLyL,IAAI,IACJ/E,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,QACNM,KAAK,QACLmD,GAAG,IACHlC,MAAO5E,EAAK+W,MACZrW,KAAK,SACLyL,IAAI,IACJ/E,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHlC,MAAO5E,EAAKiX,MACZvW,KAAK,SACLyL,IAAI,IACJ/E,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,KACHlC,MAAO5E,EAAKkX,SACZxW,KAAK,SACLyL,IAAI,MAGR,cAAC,EAAD,CACI5I,UAAU,2BACVF,MAAM,gBACNM,KAAK,SACLjD,KAAK,QACLkE,MAAO5E,EAAKqX,aACZxS,QAAS,CACL,CACIxB,MAAO,SACPuB,OAAO,GAEX,CACIvB,MAAO,UACPuB,OAAO,MAKnB,cAAC,EAAD,CACIrB,UAAU,2BACVF,MAAM,eACNM,KAAK,eACLmD,GAAG,KACHlC,MAAO5E,EAAKmX,aACZ/K,IAAKpM,EAAKoX,YAAYxS,MACtBlE,KAAK,OACL4O,YAAY,oBAGhB,cAAC,EAAD,CACI/L,UAAU,2BACVF,MAAM,cACNM,KAAK,cACLmD,GAAG,KACHlC,MAAO5E,EAAKoX,YACZjL,IAAKnM,EAAKmX,aAAavS,MACvBlE,KAAK,OACL4O,YAAY,wBCvLb+T,GA/CG,WACd,IACc5gB,EACV0M,YAASjM,GADTX,OAAUE,UAEdW,YAASX,GAAWY,MAAM,aAE1B,IAAMigB,EAAgBnU,aAAS,GACzB0O,EAAa1O,YAAS,CAAE4O,WAAY,KAAMnF,MAAO,SAC7C2K,EAAoBhR,cAAxBzL,GAWN,OATA+H,qBAAU,WACN,GAAgC,kBAApB0U,EAA8B,CACtC,IAAMnV,EAAO3L,EAAUzC,KAAKoJ,MACxB,SAACgF,GAAD,OAAUA,EAAKtH,GAAGlC,SAAW2e,KAEjCnV,GAAQ3L,EAAUxC,QAAQC,OAAO0F,IAAIwI,EAAKzK,KAAKiB,UAEpD,CAAC2e,IAGA,qCACI,cAAC,GAAD,CACI5f,KAAK,uBACLE,QAAQ,eACRkd,UAAW,CACP1d,MAAO,kBACPid,QAAS,WACLgD,EAAc1d,KAAI,OAI9B,cAAC,GAAD,CACI3F,QAASA,GACT4f,YAAapd,EAAUxC,QACvBD,KAAMyC,EAAUzC,KAChB4d,QAASA,GACTC,WAAYA,EACZQ,KAAM,SAACxV,EAAOkZ,GAAR,OACF,cAAC,GAAD,CAAelZ,MAAOA,EAAOkZ,UAAWA,KAE5C1hB,WAAYoC,EAAUpC,aAE1B,cAAC,GAAD,CAAoBwiB,UAAWS,QAOrC1F,GAAU,CACZ,CACInP,MAAO,gBACPwP,SAAU,KACVc,QAAS,gBAAGpb,EAAH,EAAGA,KAAMkT,EAAT,EAASA,MAAO5T,EAAhB,EAAgBA,KAAM6D,EAAtB,EAAsBA,GAAIsX,EAA1B,EAA0BA,OAAQa,EAAlC,EAAkCA,WAAlC,OACL,cAAC,GAAD,CACItb,KAAMA,EAAKiB,MACXiS,MAAOA,EAAMjS,MACb3B,KAAMA,EAAK2B,MACXkC,GAAIA,EACJsX,OAAQA,EACRiD,OAAQpC,MAIpB,CAAExQ,MAAO,OAAQgP,KAAM,QACvB,CAAEhP,MAAO,QAASgP,KAAM,SACxB,CAAEhP,MAAO,WAAYgP,KAAM,YAC3B,CAAEhP,MAAO,QAASgP,KAAM,SACxB,CAAEhP,MAAO,WAAYgP,KAAM,YAC3B,CAAEhP,MAAO,eAAgBgP,KAAM,gBAC/B,CAAEhP,MAAO,cAAegP,KAAM,eAC9B,CACIhP,MAAO,SACPyP,UAAU,EACVa,QAAS,gBAAGjY,EAAH,EAAGA,GAAIsX,EAAP,EAAOA,OAAQa,EAAf,EAAeA,WAAf,OACL,cAAC,GAAD,CACInY,GAAIA,EACJsX,OAAQA,EACRiD,OAAQpC,EACRkC,SAAQ,sBAAE,8BAAAvX,EAAA,0DAIW,IAHA4B,OAAOoP,QACpB,+CAFE,iEAMyBtD,GAC3BxQ,EAAGtB,OAPD,gBAMExF,EANF,EAMEA,KAIRsM,GAAO,CACHlM,OAXE,EAMQA,OAMVmM,QAAS,6BACTC,WACI,gDACJE,gBALG,WAMCxJ,EAAMX,OAAOE,UAAUzC,KAAK4F,KAAI,SAAC+T,GAC7B,OAAOA,EAAEjQ,QAAO,SAAC0E,GAAD,OAAUA,EAAKtH,KAAO9G,EAAK8G,YAjBjD,gDA2BpB7G,GAAU,CACZ,CACIoD,MAAO,SACP3C,KAAM,SACN0f,GAAI,OACJ3C,KAAM,SACNnO,YAAa,kCAEjB,CACIjM,MAAO,WACP3C,KAAM,SACN0f,GAAI,WACJ3C,KAAM,WACNF,MAAM,EACN1Y,QAAQ,CAAE,CAAExB,MAAO,MAAOuB,MAAO,KAA1B,oBZrIJ,CACH,CAAEkC,GAAI,EAAGzD,MAAO,aAAcuB,MAAO,cACrC,CAAEkC,GAAI,EAAGzD,MAAO,WAAYuB,MAAO,YACnC,CAAEkC,GAAI,EAAGzD,MAAO,oBAAqBuB,MAAO,qBAC5C,CAAEkC,GAAI,EAAGzD,MAAO,kBAAmBuB,MAAO,mBAC1C,CAAEkC,GAAI,EAAGzD,MAAO,iBAAkBuB,MAAO,kBACzC,CAAEkC,GAAI,EAAGzD,MAAO,cAAeuB,MAAO,mBYiI1C,CACIvB,MAAO,SACP3C,KAAM,SACN0f,GAAI,QACJ3C,KAAM,SACN6C,QAAS,SAAClgB,EAAQ6W,GACd,MAAkB,aAAX7W,EAAwB6W,EAAQ,EAAIA,GAAS,GAExDpS,QAAS,CACL,CAAExB,MAAO,MAAOuB,MAAO,IACvB,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,eAAgBuB,MAAO,mBCjJtCpC,GAAqB,CACvB,CACIsE,GAAI,EACJnD,KAAM,0CACNV,KAAM,aACN4T,MAAO,uBACPC,KAAM,IACNC,MAAO,KACPyM,KAAM,IACNtiB,MAAO,KACPE,QAAS,KACTgX,IAAK,KAET,CACItR,GAAI,EACJnD,KAAM,2BACNV,KAAM,mBACN4T,MAAO,uBACPC,KAAM,KACNC,MAAO,KACPyM,KAAM,IACNtiB,MAAO,MACPE,QAAS,IACTgX,IAAK,KAQAqL,GAAmB,CAC5B,CAAEpgB,MAAO,WAAYuB,MAAO,OAC5B,CAAEvB,MAAO,YAAauB,MAAO,QAC7B,CAAEvB,MAAO,aAAcuB,MAAO,SAC9B,CAAEvB,MAAO,YAAauB,MAAO,SAGpB8e,GAAuB,WAAqB,IAApBhjB,EAAmB,uDAAZ,QACxC,MAAa,UAATA,EACO4I,QAAQC,QAAQ,CACnBvJ,KAAM,CACFY,MAAO,CACHC,QAAS,KACTC,iBAAkB,MAEtBK,OAAQ,CACJN,QAAS,IACTC,iBAAkB,KAEtBE,WAAY,CACRH,QAAS,KAEbI,MAAO,CACHJ,QAAS,OAGjBT,OAAQ,MAGLkJ,QAAQC,QAAQ,CACnBvJ,KAAM,CACFkB,MAAO,CACHL,QAAS,MACTC,iBAAkB,OAEtBK,OAAQ,CACJN,QAAS,IACTC,iBAAkB,KAEtBM,QAAS,CACLP,QAAS,KACTC,iBAAkB,MAEtBO,cAAe,CACXR,QAAS,KACTC,iBAAkB,OAG1BV,OAAQ,OAKPujB,GAAqB,WAAoB,IAAnBvW,EAAkB,uDAAX,OAClCpN,EAAO,GAEX,OAAQoN,GACJ,IAAK,MACDpN,EAAO,CAAC,IAAK,IAAK,IAAK,IACvB,MACJ,IAAK,OACDA,EAAO,CAAC,KAAM,KAAM,IAAK,KACzB,MACJ,IAAK,QACDA,EAAO,CAAC,MAAO,KAAM,IAAK,KAC1B,MACJ,IAAK,OACDA,EAAO,CAAC,MAAO,IAAM,IAAK,KAIlC,OAAOsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,OAG9BwjB,GAA2B,WAAoB,IAAnBxW,EAAkB,uDAAX,OACxCpN,EAAO,GAEX,OAAQoN,GACJ,IAAK,MACDpN,EAAO,CAAC,KAAM,KAAM,KAAM,KAC1B,MAEJ,IAAK,OACDA,EAAO,CAAC,MAAO,MAAO,KAAM,MAC5B,MAEJ,IAAK,QACDA,EAAO,CAAC,MAAO,MAAO,KAAM,MAC5B,MAEJ,IAAK,OACDA,EAAO,CAAC,OAAQ,KAAO,MAAO,MAItC,OAAOsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,OAG9ByjB,GAAoB,WAAoB,IAAnBzW,EAAkB,uDAAX,OACjCpN,EAAO,GAEX,OAAQoN,GACJ,IAAK,MACDpN,EAAO,CACH,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5D,IAAK,IAAK,KAEd,MAEJ,IAAK,OAIL,IAAK,QACDA,EAAO,CAAC,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAC5C,MAEJ,IAAK,OACDA,EAAO,CACH,MAAO,KAAO,IAAO,IAAO,MAAO,MAAO,MAAO,KAAO,KACxD,OAIZ,OAAOsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,OAG9B0jB,GAAoB,WAAoB,IAAnB1W,EAAkB,uDAAX,OACjCpN,EAAO,GAEX,OAAQoN,GACJ,IAAK,MACDpN,EAAO,CACH,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5D,IAAK,IAAK,KAEd,MAEJ,IAAK,OAIL,IAAK,QACDA,EAAO,CAAC,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAC5C,MAEJ,IAAK,OACDA,EAAO,CACH,MAAO,KAAO,IAAO,IAAO,MAAO,MAAO,MAAO,KAAO,KACxD,OAKZ,OAAOsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,OAG9B2jB,GAAyB,WAAoB,IAAnB3W,EAAkB,uDAAX,OACtCpN,EAAO,GAEX,OAAQoN,GACJ,IAAK,MACDpN,EAAO,CACH,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IACxD,IAAK,IAAK,KAEd,MACJ,IAAK,OAIL,IAAK,QACDA,EAAO,CAAC,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAC5C,MAEJ,IAAK,OACDA,EAAO,CACH,MAAO,KAAO,KAAO,KAAO,MAAO,MAAO,MAAO,KAAO,KACxD,OAIZ,OAAOsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,OAG9B4jB,GAAsB,WAAoB,IAAnB5W,EAAkB,uDAAX,OACnCpN,EAAO,GAEX,OAAQoN,GACJ,IAAK,MACDpN,EAAO,CACH,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IACxD,IAAK,IAAK,KAEd,MACJ,IAAK,OAIL,IAAK,QACDA,EAAO,CAAC,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAC5C,MAEJ,IAAK,OACDA,EAAO,CACH,MAAO,KAAO,KAAO,KAAO,MAAO,MAAO,MAAO,KAAO,KACxD,OAIZ,OAAOsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,O,SCpJ5B6jB,GAtEU,CACrBnd,GAAI,aACJod,YAFqB,SAETC,EAAOC,EAAMvf,GAIrB,IAHA,IAAMwf,EA5BgB,SAACF,EAAOrd,GAClC,IAAMwd,EAAkBC,SAASC,eAAe1d,GAC5C2d,EAAgBH,EAAgBI,cAAc,MAoBlD,OAlBKD,KACDA,EAAgBF,SAASI,cAAc,OAEzB9R,MAAMhQ,QAAU,OAC9B4hB,EAAc5R,MAAM+R,cAAgB,MACpCH,EAAc5R,MAAMgS,SAAW,OACG,QAA9BV,EAAMW,OAAOC,QAAQrkB,KACrB+jB,EAAc5R,MAAMtL,eAAiB,SAErCkd,EAAc5R,MAAMtL,eAAiB,WAEzCkd,EAAc5R,MAAMmS,SAAW,OAC/BP,EAAc5R,MAAMjL,OAAS,EAC7B6c,EAAc5R,MAAMpL,QAAU,EAE9B6c,EAAgBW,YAAYR,IAGzBA,EAMQS,CAAsBf,EAAOtf,EAAQsgB,aAGzCd,EAAGe,YACNf,EAAGe,WAAWC,SAIJlB,EAAMtf,QAAQygB,QAAQC,OAAOC,OAAOC,eAAetB,GAE3DjR,SAAQ,SAAC9E,GACX,IAAMsX,EAAKnB,SAASI,cAAc,MAClCe,EAAG7S,MAAM8S,WAAa,SACtBD,EAAG7S,MAAM+S,OAAS,UAClBF,EAAG7S,MAAMhQ,QAAU,OACnB6iB,EAAG7S,MAAM+R,cAAgB,MAES,QAA9BT,EAAMW,OAAOC,QAAQrkB,MACrBglB,EAAG7S,MAAMgT,YAAc,OACvBH,EAAG7S,MAAMiT,aAAe,SAExBJ,EAAG7S,MAAMkT,WAAa,OAG1BL,EAAGM,QAAU,WACT,IAAQtlB,EAASyjB,EAAMW,OAAfpkB,KACK,QAATA,GAA2B,aAATA,EAElByjB,EAAM8B,qBAAqB7X,EAAKuR,OAEhCwE,EAAM+B,qBACF9X,EAAK+X,cACJhC,EAAMiC,iBAAiBhY,EAAK+X,eAGrChC,EAAMpX,UAIV,IAAMsZ,EAAU9B,SAASI,cAAc,QACvC0B,EAAQxT,MAAMyT,WAAalY,EAAKmY,YAChCF,EAAQxT,MAAMhQ,QAAU,eACxBwjB,EAAQxT,MAAMwH,OAAS,MACvBgM,EAAQxT,MAAMgT,YAAc,OAC5BQ,EAAQxT,MAAMuH,MAAQ,OACtBiM,EAAQxT,MAAM2T,aAAe,MAG7B,IAAMC,EAAgBlC,SAASI,cAAc,KAC7C8B,EAAc5T,MAAM6T,MAAQ,wBAC5BD,EAAc5T,MAAM8T,WAAa,SACjCF,EAAc5T,MAAMjL,OAAS,EAC7B6e,EAAc5T,MAAMpL,QAAU,EAC9Bgf,EAAc5T,MAAM+T,eAAiBxY,EAAKyY,OACpC,eACA,GAEN,IAAMC,EAAOvC,SAASwC,eAAe3Y,EAAK0Y,MAC1CL,EAAcxB,YAAY6B,GAE1BpB,EAAGT,YAAYoB,GACfX,EAAGT,YAAYwB,GACfpC,EAAGY,YAAYS,QCnF3BsB,KAAMC,SAASC,KAAKC,OAAS,UAC7BH,KAAMC,SAASC,KAAKpO,KAAO,OAC3BkO,KAAMC,SAASP,MAAQ,UAyGRU,OA5Cf,YAAgF,IAApD3Y,EAAmD,EAAnDA,MAAOzO,EAA4C,EAA5CA,KAAMoN,EAAsC,EAAtCA,KAAMia,EAAgC,EAAhCA,aAAgC,IAAlB3mB,YAAkB,MAAX,QAAW,EACrE4mB,EAAStb,iBAAO,MAkBtB,OAhBA6C,qBAAU,WACN,IACMsV,EAhEd,SAAuBoD,EAAK7mB,GAwDxB,OAvDc,IAAIsmB,KAAMO,EAAK,CACzB7mB,KAAM,OACNmE,QAAS,CACLygB,QAAS,CACLkC,WAAY,CACRrC,YAAa,wBAEjBI,OAAQ,CACJ1iB,SAAS,IAGjB4kB,SAAU,CACNC,KAAM,CACFC,QAAS,KAGjBC,OAAQ,CACJC,EAAG,CACCC,MAAO,CAEHnV,SAAU,SAAU/N,EAAO+a,EAAOoI,GAC9B,OACIja,GAAWlJ,IACD,UAATlE,EAAmB,GAAK,aAOjDV,KAAM,CACFwlB,OAAQ,GACRwC,SAAU,CACN,CACIC,YAAa,mBACbC,gBAAiB,yBACjBC,iBAAkB,mBAClBC,qBAAsB,mBACtBpoB,KAAM,GACNqoB,KAAM,SAGV,CACIJ,YAAa,mBACbC,gBAAiB,yBACjBC,iBAAkB,mBAClBC,qBAAsB,mBACtBpoB,KAAM,GACNqoB,KAAM,WAIlB/C,QAAS,CAACrB,MAWIqE,CADFhB,EAAOrb,QAAQsc,WAAW,MACL7nB,GAWjC,OATIyjB,IACAA,EAAMnkB,KAAKwlB,OAASrY,GAAqBC,GACzC+W,EAAMnkB,KAAKgoB,SAAS,GAAG3kB,MAAQrD,EAAK,GAAGqD,MACvC8gB,EAAMnkB,KAAKgoB,SAAS,GAAGhoB,KAAOA,EAAK,GAAGgoB,SACtC7D,EAAMnkB,KAAKgoB,SAAS,GAAG3kB,MAAQrD,EAAK,GAAGqD,MACvC8gB,EAAMnkB,KAAKgoB,SAAS,GAAGhoB,KAAOA,EAAK,GAAGgoB,SACtC7D,EAAMpX,OAAO,CAAE6K,SAAU,OAGtB,kBAAMuM,EAAMqE,aACpB,CAACpb,EAAMpN,IAGN,sBAAKuD,UAAU,aAAf,UACI,cAAC,GAAD,CACII,KAAM8K,EACN5K,QAAQ,oBACRmd,WAAY,CACR3d,MAAO,OACPwB,QAAS4e,GACT7e,MAAOwI,EACP6T,SAAU,YAAiB,IAAdvb,EAAa,EAAbA,OACT2hB,EAAa3hB,EAAOd,WAIhC,sBAAKrB,UAAU,iCAAf,UACI,qBACIuD,GAAG,uBACHvD,UAAU,qBAEd,wBAAQuI,IAAKwb,WC5DdmB,OA7Cf,YASI,IARAC,EAQD,EARCA,SACAC,EAOD,EAPCA,cACAC,EAMD,EANCA,QACA/kB,EAKD,EALCA,QACAglB,EAID,EAJCA,QACAC,EAGD,EAHCA,UACAtkB,EAED,EAFCA,KAED,IADCukB,cACD,MADU,GACV,EACC,OACI,sBAAKxlB,UAAU,8FAAf,UACI,mBACIA,UAAS,UAAKM,EAAL,6DAAiEglB,EAAjE,YAA4EC,KAEzF,sBAAKvlB,UAAU,2BAAf,UACI,wBAAQA,UAAU,+BAAlB,mBACQmlB,EAASM,eAAe,MADhC,YACyCD,KAEzC,sBAAMxlB,UAAU,sDAAhB,SACKolB,IAEL,sBAAMplB,UAAU,mDAAhB,SACKqlB,EACG,qCACI,mBACIrlB,UAAS,gCACLqlB,EAAQK,UADH,YAGiB,OAAtBL,EAAQK,UACF,aACA,cAER,IACLL,EAAQhkB,MAVb,OAaAJ,GAAQ,cAAC,IAAD,CAAMD,GAAIC,EAAKqU,IAAf,SAAqBrU,EAAKnB,iBCsF3C6lB,GAtHS,WACpB,IAAQjnB,EAAema,YAAalZ,GAA5BjB,WACR,EAAgCkN,mBAASxO,GAAzC,oBAAOqB,EAAP,KAAiBmnB,EAAjB,KACMnM,EAAW/a,EAAW9B,KAAKqF,MACzB5E,EACJoB,EADIpB,MAAOI,EACXgB,EADWhB,WAAYC,EACvBe,EADuBf,MAAOC,EAC9Bc,EAD8Bd,MAAOE,EACrCY,EADqCZ,QAASD,EAC9Ca,EAD8Cb,OAAQE,EACtDW,EADsDX,cAGpD+nB,EAAgB,SAAC,GAAmC,IAAjCvoB,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBACxBuoB,EAAOxoB,EAAUC,EACvB,MAAO,CACH8D,OAASqF,KAAKqf,IAAID,GAAQvoB,EAAoB,KAAO,GAAGuN,QAAQ,GAChE4a,UAAWI,GAAQ,EAAI,KAAO,SAWtC,OAPAxa,qBAAU,WACN,sBAAC,8BAAAjF,EAAA,sEAC0B8Z,GAAqB1G,GAD/C,gBACWhd,EADX,EACWA,KACRmpB,EAAYnpB,GAFf,0CAAD,KAID,IAGC,qCACI,cAAC,GAAD,CACI2D,KACiB,UAAbqZ,EACM,mBACA,mBAEVnZ,QAAQ,eAEZ,sBAAKN,UAAU,yBAAf,UACkB,UAAbyZ,EACG,cAAC,GAAD,CACI0L,SAAU9nB,EAAMC,QAChB8nB,cAAc,gBACdC,QAASQ,EAAcxoB,GACvBiD,QAAQ,aACRglB,QAAQ,gBACRC,UAAU,mBAGd,cAAC,GAAD,CACIJ,SAAUxnB,EAAML,QAChBkoB,OAAO,MACPJ,cAAc,gBACdC,QAASQ,EAAcloB,GACvB2C,QAAQ,oBACRglB,QAAQ,cACRC,UAAU,iBAIlB,cAAC,GAAD,CACIJ,SAAUvnB,EAAON,QACjB8nB,cACiB,UAAb3L,EACM,wBACA,uBAEV4L,QAASQ,EAAcjoB,GACvB0C,QAAQ,yBACRglB,QAAQ,cACRC,UAAU,kBAGA,UAAb9L,EACG,cAAC,GAAD,CACI0L,SAAU1nB,EAAWH,QACrB8nB,cAAc,oBACdnkB,KAAM,CACFqU,IAAK,cACLxV,MAAO,YAEXQ,QAAQ,wBACRglB,QAAQ,cACRC,UAAU,iBAGd,cAAC,GAAD,CACIJ,SAAUtnB,EAAQP,QAClBkoB,OAAO,MACPJ,cAAc,kBACdC,QAASQ,EAAchoB,GACvByC,QAAQ,qBACRglB,QAAQ,iBACRC,UAAU,oBAIJ,UAAb9L,EACG,cAAC,GAAD,CACI0L,SAAUznB,EAAMJ,QAChB8nB,cAAc,eACdnkB,KAAM,CACFqU,IAAK,SACLxV,MAAO,YAEXQ,QAAQ,eACRglB,QAAQ,mBACRC,UAAU,eAGd,cAAC,GAAD,CACIJ,SAAUrnB,EAAcR,QACxB8nB,cAAc,wBACdC,QAASQ,EAAc/nB,GACvBwC,QAAQ,eACRglB,QAAQ,kBACRC,UAAU,uBC/GlC9B,KAAMC,SAASC,KAAKC,OAAS,UAC7BH,KAAMC,SAASC,KAAKpO,KAAO,OAC3BkO,KAAMC,SAASP,MAAQ,UAyFR6C,OA1Cf,YAA+D,IAApC9a,EAAmC,EAAnCA,MAAOzO,EAA4B,EAA5BA,KAAMoN,EAAsB,EAAtBA,KAAMia,EAAgB,EAAhBA,aACpCC,EAAStb,iBAAO,MAgBtB,OAdA6C,qBAAU,WACN,IACMsV,EAlDd,SAAsBoD,GA0ClB,OAzCc,IAAIP,KAAMO,EAAK,CACzB7mB,KAAM,MACNmE,QAAS,CACLygB,QAAS,CACLkC,WAAY,CACRrC,YAAa,uBAEjBI,OAAQ,CACJ1iB,SAAS,IAGjB2mB,UAAW,CACPC,cAAc,IAGtBzpB,KAAM,CACFwlB,OAAQ,GACRwC,SAAU,CACN,CACI3kB,MAAO,GACPqmB,YAAa,EACbC,YAAa,QACb1B,YAAa,CACT,mBACA,mBACA,qBACA,sBAEJC,gBAAiB,CACb,yBACA,yBACA,2BACA,4BAEJloB,KAAM,MAIlBslB,QAAS,CAACrB,MAWI2F,CADFtC,EAAOrb,QAAQsc,WAAW,OAUtC,OAPIpE,IACAA,EAAMnkB,KAAKwlB,OAASxlB,EAAK6pB,aACzB1F,EAAMnkB,KAAKgoB,SAAS,GAAG3kB,MAAQrD,EAAKqD,MACpC8gB,EAAMnkB,KAAKgoB,SAAS,GAAGhoB,KAAOA,EAAKgoB,SACnC7D,EAAMpX,OAAO,CAAE6K,SAAU,QAGtB,kBAAMuM,EAAMqE,aACpB,CAACpb,EAAMpN,IAGN,gCACI,cAAC,GAAD,CACI2D,KAAM8K,EACN5K,QAAQ,mBACRmd,WAAY,CACR3d,MAAO,OACPwB,QAAS4e,GACT7e,MAAOwI,EACP6T,SAAU,YAAiB,IAAdvb,EAAa,EAAbA,OACT2hB,EAAa3hB,EAAOd,WAIhC,sBAAKrB,UAAU,iCAAf,UACI,qBACIuD,GAAG,sBACHvD,UAAU,qBAEd,wBAAQuI,IAAKwb,WClDdwC,OAjCf,WACI,IACctnB,EACV2M,YAASjM,GADTX,OAAUC,mBAEdY,YAASZ,GAAoBa,MAAM,uBACnC,IAAMwa,EAAa1O,YAAS,CACxB4O,WAAY,OACZnF,MAAO,SAQX,OALA/J,oBAAS,sBAAC,8BAAAjF,EAAA,sENWHN,QAAQC,QAAQ,CAAEvJ,KAAMwC,GAAoBpC,OAAQ,MMXjD,gBACQ2pB,EADR,EACE/pB,KACRwC,EAAmBxC,KAAK4F,IAAImkB,GAFtB,2CAGP,IAGC,qCACI,cAAC,GAAD,CACIpmB,KAAK,sBACLE,QAAQ,uBAEZ,cAAC,GAAD,CACI5D,QAASA,GACT4f,YAAard,EAAmBvC,QAChCD,KAAMwC,EAAmBxC,KACzB4d,QAASA,GACTC,WAAYA,EACZxd,WAAYmC,EAAmBnC,iBAQzCud,GAAU,CACZ,CACInP,MAAO,gBACPwP,SAAU,KACVc,QAAS,gBAAGpb,EAAH,EAAGA,KAAMkT,EAAT,EAASA,MAAO5T,EAAhB,EAAgBA,KAAM6D,EAAtB,EAAsBA,GAAtB,OACL,cAAC,GAAD,CACInD,KAAMA,EAAKiB,MACXiS,MAAOA,EAAMjS,MACb3B,KAAMA,EAAK2B,MACXkC,GAAIA,MAIhB,CACI2H,MAAO,OACPwP,SAAU,OACVc,QAAS,gBAAGjI,EAAH,EAAGA,KAAH,gBAAiBA,EAAKtR,MAAtB,UAEb,CACIiJ,MAAO,QACPwP,SAAU,QACVc,QAAS,gBAAGhI,EAAH,EAAGA,MAAH,gBAAkBA,EAAMvR,MAAxB,UAEb,CAAEiJ,MAAO,YAAawP,SAAU,OAAQR,KAAM,QAC9C,CACIhP,MAAO,cACPwP,SAAU,QACVc,QAAS,gBAAG7d,EAAH,EAAGA,MAAH,gBAAkB4M,GAAW5M,EAAMsE,OAAnC,UAEb,CACIiJ,MAAO,UACPwP,SAAU,UACVc,QAAS,gBAAG3d,EAAH,EAAGA,QAAH,gBAAoB0M,GAAW1M,EAAQoE,OAAvC,UAEb,CAAEiJ,MAAO,gBAAiBgP,KAAM,OAChC,CACIhP,MAAO,SACPwP,SAAU,SACVc,QAAS,qBAAG3G,IACJxT,MAAQ,EACR,wBAAQrB,UAAU,2BAAlB,sBAEA,wBAAQA,UAAU,yBAAlB,6BAKVtD,GAAU,CACZ,CACIoD,MAAO,SACP3C,KAAM,SACN0f,GAAI,OACJ3C,KAAM,SACNnO,YAAa,mCCmCN0a,GApHG,WACd,IACMhN,EADiBZ,YAAalZ,GAA5BjB,WACoB9B,KAAKqF,MAEjC,EAA0C2J,mBAAS,QAAnD,oBAAO8a,EAAP,KAAsBC,EAAtB,KACA,EAAwC/a,mBAAS,QAAjD,oBAAOgb,EAAP,KAAqBC,EAArB,KACA,EAA4Cjb,mBAAS,CACjD,CACI9L,MAAoB,UAAb2Z,EAAuB,SAAW,UACzCgL,SAAU,IAEd,CACI3kB,MAAoB,UAAb2Z,EAAuB,QAAU,QACxCgL,SAAU,MAPlB,oBAAOqC,EAAP,KAAuBC,EAAvB,KAWA,EAA0Cnb,mBAAS,CAC/C0a,aAAc,CAAC,WAAY,UAAW,oBAAqB,YAC3DxmB,MAAO,gBACP2kB,SAAU,KAHd,oBAAOuC,EAAP,KAAsBC,EAAtB,KAoEA,OA9DA3b,qBAAU,WACN,sBAAC,gCAAAjF,EAAA,yDACO6gB,EAAiB,GACJ,UAAbzN,EAFP,gCAGyC4G,GAC9BuG,GAJX,gBAGgBM,EAHhB,EAGUzqB,KAHV,wCAOyC2jB,GAC9BwG,GARX,iBAOgBM,EAPhB,EAOUzqB,KAPV,QAYGwqB,EAAiB,2BACVD,GADS,IAEZvC,SAAUyC,KAdjB,2CAAD,KAiBD,CAACN,IAEJtb,qBAAU,WACN,sBAAC,0CAAAjF,EAAA,yDACoB,UAAboT,EADP,iCAE8C+G,GACnCkG,GAHX,uBAEqBQ,EAFrB,EAEezqB,KAFf,SAK6C6jB,GAClCoG,GANX,gBAKqBS,EALrB,EAKe1qB,KAIRsqB,EAAkB,CACd,CACIjnB,MAAO,SACP2kB,SAAUyC,GAEd,CACIpnB,MAAO,QACP2kB,SAAU0C,KAhBzB,yCAoB+C1G,GACpCiG,GArBX,wBAoBqBU,EApBrB,EAoBe3qB,KApBf,UAuB6C8jB,GAClCmG,GAxBX,iBAuBqBW,EAvBrB,EAuBe5qB,KAIRsqB,EAAkB,CACd,CACIjnB,MAAO,UACP2kB,SAAU2C,GAEd,CACItnB,MAAO,QACP2kB,SAAU4C,KAlCzB,2CAAD,KAuCD,CAACX,IAGA,qCACI,cAAC,GAAD,IACA,sBAAK1mB,UAAU,gCAAf,UACI,cAAC,GAAD,CACIkL,MACiB,UAAbuO,EACM,iBACA,kBAEV5P,KAAM6c,EACNjqB,KAAMqqB,EACNhD,aAAc6C,EACdxpB,KAAMsc,IAEV,cAAC,GAAD,CACIvO,MAAM,kBACNzO,KAAMuqB,EACNnd,KAAM+c,EACN9C,aAAc+C,OAGR,mBAAbpN,GACG,qBAAKzZ,UAAU,OAAf,SACI,cAAC,GAAD,UC5GLsnB,GAdU,SAACxlB,GACtB,OACI,cAAC,EAAD,aACIhC,MAAM,eACNM,KAAK,eACLjD,KAAK,MACLgP,UAAU,KACV7J,QAAQ,oBACRyJ,YAAY,sBACRjK,KCyGDylB,GA7GM,SAAC,GAIf,IAHHjiB,EAGE,EAHFA,MACAkZ,EAEE,EAFFA,UAEE,IADFxe,iBACE,MADU,mCACV,EACIqR,EAAYzF,YAAS6S,KAAKC,MAAMD,KAAKE,UAAUrZ,EAAMjE,SAG3D,OAFAxB,YAASwR,GAAWvR,MAAM,4BAGtB,eAAC,GAAD,CACIE,UAAWA,EACXa,SAAQ,sBAAE,4BAAAwF,EAAA,sEACmB8M,GAAe7N,EAAMrD,OADxC,gBAEN8G,GAAO,CACHlM,OAHE,EACEA,OAGJmM,QAAS,mCACTC,WACI,sDACJE,gBALG,WAMC7D,EAAMjD,IAAIoc,KAAKC,MAAMD,KAAKE,UAAUtN,EAAUhQ,SAC9Cmd,OATF,2CAFd,UAgBI,cAAC,EAAD,CACIxe,UAAU,2BACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAOgQ,EAAUoB,UACjB1G,YAAY,8BACZlI,UAAQ,EACRX,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,2BACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHlC,MAAOgQ,EAAUnM,SACjB6G,YAAY,mBACZ7I,UAAQ,EACRW,UAAQ,IAGZ,cAAC,GAAD,CACI7D,UAAU,2BACVuD,GAAG,IACHlC,MAAOgQ,EAAUhM,aACjBnC,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,gBACVuD,GAAG,IACHzD,MAAM,SACNM,KAAK,SACLjD,KAAK,QACLkE,MAAOgQ,EAAUjM,OACjB9D,QAAS,CACL,CACIxB,MAAO,OACPuB,MAAO,KAEX,CACIvB,MAAO,SACPuB,MAAO,MAGf6B,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,gBACVF,MAAM,OACNM,KAAK,OACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAOgQ,EAAUzU,KACjB0E,QAAS,CACL,CAAExB,MAAO,aAAcuB,MAAO,cAC9B,CAAEvB,MAAO,aAAcuB,MAAO,iBAItC,cAAC,EAAD,CACIrB,UAAU,2BACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAOgQ,EAAUqB,UACjBvV,KAAK,SAGT,cAAC,EAAD,CACI6C,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHlC,MAAOgQ,EAAUsB,QACjBxV,KAAK,OACLyL,IAAKtD,EAAMoN,UAAUrR,YClGtBmmB,GAbW,CACtB/qB,KAAM,CACFgW,UAAW,GACXvN,SAAU,GACVG,aAAc,GACdD,OAAQ,GACRxI,KAAM,aACN8V,UAAW,GACXC,QAAS,IAEbkM,OAAQ,IC+JG4I,GA/JW,SAAC,GAAmB,IAAjBnI,EAAgB,EAAhBA,UACrBha,EAAQsG,YAAS,CACjBnP,KAAK,eAAM+qB,GAAkB/qB,MAC7BoiB,OAAO,eAAM2I,GAAkB3I,UAEnChf,YAASyF,GAAOxF,MAAM,uBAEtB,IAAM4nB,EAAgB9b,YAASjM,EAAMX,OAAOG,UAAU1C,MAC9CA,EAAiB6I,EAAjB7I,KACFkrB,GADmBriB,EAAXuZ,OACkBjT,YAAS,KAWzC,OATAN,qBAAU,WACN,sBAAC,8BAAAjF,EAAA,+EAE8BJ,EAAe,QAF7C,gBAEexJ,EAFf,EAEeA,KACRkrB,EAAwBtlB,IAAI5F,GAHnC,wGAAD,KAMD,IAGC,eAAC,GAAD,CACIyO,MAAM,mBACN5F,MAAOga,EACPtf,UAAU,uDACVse,YAAa,CACT,CACIxe,MAAO,eACPQ,QAAS,gBAGjBO,SAAQ,sBAAE,4BAAAwF,EAAA,sEACmB2M,GAAYvW,EAAKwF,OADpC,gBAEN8G,GAAO,CACHlM,OAHE,EACEA,OAGJoM,WACI,wEACqC,IACjC,iCAASxM,EAAKgW,UAAUxQ,QAF5B,qDAMJkH,gBAAgB,WAAD,4BAAE,8BAAA9C,EAAA,6DAEb5J,EAAK4F,IAAL,eAAcmlB,GAAkB/qB,OAFnB,SAK4BmW,KAL5B,gBAKCgV,EALD,EAKLnrB,KACRirB,EAAcrlB,IAAIulB,GAGlBtI,EAAUjd,KAAI,GATD,2CAAF,kDAAC,KAXd,2CAVd,UAmCI,cAAC,EAAD,CACIrC,UAAU,2BACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHpG,KAAK,SACLkE,MAAO5E,EAAKyI,SACZ5D,QAASqmB,EAAwBxkB,KAAI,SAAC2C,GAAD,MAAW,CAC5ChG,MAAOgG,EAAKZ,SAAS7D,MACrBA,MAAOyE,EAAKZ,SAAS7D,UAEzB0B,SAAQ,uCAAE,iCAAAsD,EAAA,6DAAgBwhB,EAAhB,EAASxmB,MAAT,SACuBsE,EACzBkiB,GAFE,gBACQ/hB,EADR,EACErJ,KAIRA,EAAKyI,SAAS7C,IAAIyD,EAAKZ,UACvBzI,EAAKgW,UAAUpQ,IAAf,UAAsByD,EAAKd,WAA3B,YAAyCc,EAAKb,YANxC,2CAAF,sDAUR8G,YAAY,mBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAO5E,EAAKgW,UACZ1G,YAAY,8BACZ7I,UAAQ,IAoCZ,cAAC,EAAD,CACIlD,UAAU,2BACVF,MAAM,OACNM,KAAK,OACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAO5E,EAAKG,KACZ0E,QAAS,CACL,CAAExB,MAAO,aAAcuB,MAAO,cAC9B,CAAEvB,MAAO,aAAcuB,MAAO,iBAItC,cAAC,EAAD,CACIrB,UAAU,2BACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAO5E,EAAKiW,UACZvV,KAAK,SAGT,cAAC,EAAD,CACI6C,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHlC,MAAO5E,EAAKkW,QACZxV,KAAK,OACLyL,IAAKtD,EAAMoN,UAAUrR,YCxGtBymB,GA/CG,WACd,IACc3oB,EACVyM,YAASjM,GADTX,OAAUG,UAEdU,YAASV,GAAWW,MAAM,aAE1B,IAAUioB,EAAe/Y,cAAnBzL,GACAwc,EAAgBnU,aAAS,GACzB0O,EAAa1O,YAAS,CAAE4O,WAAY,KAAMnF,MAAO,SAWvD,OATA/J,qBAAU,WACN,GAA2B,kBAAfyc,EAAyB,CACjC,IAAMhV,EAAM5T,EAAU1C,KAAKoJ,MACvB,SAACkN,GAAD,OAASA,EAAIxP,GAAGlC,SAAW0mB,KAE/BhV,GAAO5T,EAAUzC,QAAQC,OAAO0F,IAAI0Q,EAAIN,UAAUpR,UAEvD,CAAC0mB,IAGA,qCACI,cAAC,GAAD,CACI3nB,KAAK,mBACLE,QAAQ,kBACRkd,UAAW,CACP1d,MAAO,mBACPid,QAAS,WACLgD,EAAc1d,KAAI,OAI9B,cAAC,GAAD,CACI3F,QAASA,GACT4f,YAAand,EAAUzC,QACvBD,KAAM0C,EAAU1C,KAChB4d,QAASA,GACTC,WAAYA,EACZQ,KAAM,SAACxV,EAAOkZ,GAAR,OACF,cAAC,GAAD,CAAclZ,MAAOA,EAAOkZ,UAAWA,KAE3C1hB,WAAYqC,EAAUrC,aAE1B,cAAC,GAAD,CAAmBwiB,UAAWS,QAOpC1F,GAAU,CACZ,CACInP,MAAO,YACPwP,SAAU,YACVc,QAAS,gBAAGjY,EAAH,EAAGA,GAAIkP,EAAP,EAAOA,UAAWoI,EAAlB,EAAkBA,OAAQa,EAA1B,EAA0BA,WAA1B,OACL,wBACInb,QAAS,kBAAMmb,EAAWb,EAAS,KAAOtX,EAAGlC,QAC7CrB,UAAU,mEAFd,SAIKyS,EAAUxQ,UAIvB,CAAEiJ,MAAO,WAAYgP,KAAM,YAC3B,CAAEhP,MAAO,eAAgBgP,KAAM,eAAgBuB,aAAc,OAC7D,CACIvQ,MAAO,SACPwP,SAAU,SACVc,QAAS,YACL,OADqB,EAAbpW,OACOnD,OACX,IAAK,IACD,MAAO,OACX,IAAK,IACD,MAAO,SACX,QACI,MAAO,SAIvB,CAAEiJ,MAAO,SAAUgP,KAAM,UACzB,CAAEhP,MAAO,OAAQgP,KAAM,QACvB,CACIhP,MAAO,YACPyP,UAAU,EACVa,QAAS,YAGF,IAFiB9I,EAElB,EAFFA,UAAarR,MACKsR,EAChB,EADFA,QAAWtR,MAEX,OAAIqR,GAAaC,EAAe,GAAN,OAAUD,EAAV,eAA0BC,GACxC,MAGpB,CACIzH,MAAO,YACPyP,UAAU,EACVT,KAAM,YACNuB,aAAc,qBAElB,CAAEvQ,MAAO,eAAgBgP,KAAM,gBAC/B,CACIhP,MAAO,SACPyP,UAAU,EACVa,QAAS,gBAAGjY,EAAH,EAAGA,GAAIsX,EAAP,EAAOA,OAAQa,EAAf,EAAeA,WAAf,OACL,cAAC,GAAD,CACInY,GAAIA,EACJsX,OAAQA,EACRiD,OAAQpC,EACRkC,SAAQ,sBAAE,8BAAAvX,EAAA,0DAIW,IAHA4B,OAAOoP,QACpB,8CAFE,iEAMyBvE,GAAevP,EAAGtB,OAN3C,gBAMExF,EANF,EAMEA,KAERsM,GAAO,CACHlM,OATE,EAMQA,OAIVmM,QAAS,uBACTC,WAAY,0CACNE,gBAJH,WAIsB,OAAD,oGACpBxJ,EAAMX,OAAOG,UAAU1C,KAAK4F,KAAI,SAAC+T,GAC7B,OAAOA,EAAEjQ,QAAO,SAAC4M,GAAD,OAASA,EAAIxP,KAAO9G,EAAK8G,SAFzB,gDAZtB,gDAwBpB7G,GAAU,CACZ,CACIoD,MAAO,SACP3C,KAAM,SACN0f,GAAI,YACJ3C,KAAM,SACNnO,YAAa,mCAEjB,CACIjM,MAAO,OACP3C,KAAM,SACN0f,GAAI,OACJ3C,KAAM,OACN5Y,QAAS,CACL,CAAExB,MAAO,MAAOuB,MAAO,IACvB,CAAEvB,MAAO,aAAcuB,MAAO,cAC9B,CAAEvB,MAAO,aAAcuB,MAAO,gBAGtC,CACIvB,MAAO,SACP3C,KAAM,SACN0f,GAAI,SACJ3C,KAAM,SACN5Y,QAAS,CACL,CAAExB,MAAO,MAAOuB,MAAO,IACvB,CAAEvB,MAAO,WAAYuB,MAAO,WAC5B,CAAEvB,MAAO,UAAWuB,MAAO,cCtCxB2mB,GA/HM,SAAC,GAWf,IAAD,IAVFvrB,KACI8G,EASF,EATEA,GACAkR,EAQF,EAREA,KACArV,EAOF,EAPEA,SACA0V,EAMF,EANEA,gBACA/H,EAKF,EALEA,IACAvN,EAIF,EAJEA,SAIF,IAHEuV,gBAGF,MAHa,EAGb,EAFEP,EAEF,EAFEA,WAGJ,EAEI5I,YAASjM,GADTf,eAAkBwB,EADtB,EACsBA,KAAMkM,EAD5B,EAC4BA,OAAQC,EADpC,EACoCA,cAAepH,EADnD,EACmDA,MAAOqH,EAD1D,EAC0DA,QAE1D,OACI,qCACI,qBAAKxM,UAAU,kBAAf,SACI,yBACIO,QAAS0H,OAAOggB,MAChBjoB,UAAU,mGAFd,UAII,mBAAGA,UAAU,kCAJjB,aAQJ,sBAAKA,UAAU,2EAAf,UACI,0BAASA,UAAU,OAAnB,UACI,qBAAIA,UAAU,yCAAd,UACKI,EAAK6B,MADV,MACoBqK,EAAOrK,SAE3B,kCACI,gCACI,+BACI,+CACA,qCACA,+CAGR,gCACK7C,EAAS+D,KAAI,SAAC6S,GAAD,OACV,+BACI,6BAAKA,EAAQ5V,OACb,6BAAK4V,EAAQnB,MACb,+BAAKmB,EAAQxC,MAAQwC,EAAQnB,IAA7B,YAHKmB,EAAQ5V,iBASjC,0BAASJ,UAAU,OAAnB,UACI,oBAAIA,UAAU,mCAAd,2BAGA,gCACI,kCACI,+BACI,iDACA,+BAAK8U,EAAL,aAEJ,+BACI,0CACA,oCAAOtV,EAAP,aAEJ,+BACI,qCACA,oCAAOuN,EAAP,aAEU,IAAbgI,EACG,+BACI,0CACA,oCAAOA,EAAP,aAEJ,KACJ,+BACI,6BACI,oDAEJ,6BACI,mCACKD,EACGtV,EACAuN,EACAgI,EAAU,IAJlB,sBAYpB,oBAAG/U,UAAU,kCAAb,UACI,8BACI,gDACA,+BAAOuD,IACP,sBAAMvD,UAAU,OAAhB,iBACA,kDACA,+BAAOwU,EAAWpU,MAAQ,oBAC1B,sBAAMJ,UAAU,OAAhB,iBACA,4CACA,+BAAOyU,OAEX,8BACI,qDACA,+BAAOlI,EAActK,MAAMgF,KAAK,SAC/B9B,GACG,qCACI,uBACA,6CACA,+BAAOA,EAAMlD,WAIpBuK,GACG,qCACI,uBACA,+CACA,+BAAOA,EAAQvK,wBCjDhCimB,GA1DA,WACX,MAGItc,YAASjM,GAFC/B,EADd,EACIoB,OAAUpB,OACVyB,EAFJ,EAEIA,YAEJQ,YAASjC,GAAQkC,MAAM,UAEvB,IAAUqoB,EAAYnZ,cAAhBzL,GACA+W,EAAa1O,YAAS,CAAE4O,WAAY,KAAMnF,MAAO,SAQvD,OANA/J,qBAAU,WACD8c,MAAMD,IACPvqB,EAAOlB,QAAQC,OAAO0F,IAAI8lB,KAE/B,CAACA,IAGA,qCACI,cAAC,GAAD,CAAe/nB,KAAK,SAASE,QAAQ,iBACrC,cAAC,GAAD,CACI5D,QAASA,GACT4f,YAAa1e,EAAOlB,QACpBD,KAAMmB,EAAOnB,KACb4d,QAASA,GACTC,WAAYA,EACZxd,WAAYc,EAAOd,aAEvB,cAAC,GAAD,CACIwS,MAC+B,kBAA3BjQ,EAAYlC,KAAK8E,MACX,CAAE4U,MAAO,KACT,GAEVvR,MAAOjG,EAAYC,QACnBgB,QAAO,6BACwB,kBAA3BjB,EAAYlC,KAAK8E,MAA4B,UAAY,IAE7DiJ,MAAK,gBAC0B,kBAA3B7L,EAAYlC,KAAK8E,MACX,gBADN,qBAEoB5C,EAAY5C,KAAK8G,GAAGtB,QAbhD,SAgBgC,kBAA3B5C,EAAYlC,KAAK8E,MACd,qBACIjC,UAAU,UACVqS,IAAKhT,EAAY5C,KAAK4rB,iBAAiBpmB,MACvCqN,MAAO,CAAEwH,OAAQ,KACjBxE,IAAI,kBAGR,cAAC,GAAD,CAAc7V,KAAM4C,EAAY5C,KAAKwF,cASnDoY,GAAU,CACZ,CACInP,MAAO,WACPwP,SAAU,KACVc,QAAS,gBAAGjY,EAAH,EAAGA,GAAIlE,EAAP,EAAOA,YAAawL,EAApB,EAAoBA,KAApB,OACL,oBACIW,KAAI,WAAMjI,EAAGtB,OACb1B,QAAS,WACLlB,EAAY5C,KAAK4F,IACboc,KAAKC,MAAMD,KAAKE,UAAU9T,EAAKxJ,SAEnChC,EAAYlC,KAAKkF,IAAI,iBACrBhD,EAAYC,QAAQ+C,KAAI,IAE5BrC,UAAU,WATd,cAWMuD,EAAGtB,WAIjB,CAAEiJ,MAAO,OAAQgP,KAAM,QACvB,CACIhP,MAAO,cACPwP,SAAU,kBACVc,QAAS,YAAmD,IAAhD1G,EAA+C,EAA/CA,gBAAiB/H,EAA8B,EAA9BA,IAAKvN,EAAyB,EAAzBA,SAAUuV,EAAe,EAAfA,SACxC,MAAM,GAAN,OACID,EAAgBzT,MAChB0L,EAAI1L,MACJ0T,EAAS1T,MACT7B,EAAS6B,MAJb,UAQR,CACI6J,MAAO,SACPwP,SAAU,SACVc,QAAS,YAAqB,IAAlB3e,EAAiB,EAAjBA,OAAQ0G,EAAS,EAATA,GAChB,OACI,cAAC,EAAD,CACInD,KAAK,SACLjD,KAAK,SACLkE,MAAOxE,EACPkG,SAAQ,uCAAE,WAAON,GAAP,eAAA4D,EAAA,sEAEI8O,GACF5R,EAAGtB,MACHQ,EAAcpB,OAJhB,gBAMN0H,GAAO,CACHlM,OAPE,EACEA,OAOJmM,QAAS,2BACTC,WAAW,qCAAD,OAAuCxG,EAAc3C,MAArD,mBACVqJ,gBAJG,WAKCtM,EAAOwF,IAAII,EAAcpB,UAX3B,2CAAF,sDAeRC,QAAS,CACL,CAAExB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,UAAWuB,MAAO,WAC3B,CAAEvB,MAAO,YAAauB,MAAO,aAC7B,CAAEvB,MAAO,WAAYuB,MAAO,iBAMhD,CACI6J,MAAO,aACPwP,SAAU,kBACVc,QAAS,YAAmC,IAAD,IAA/BhH,WAAcjR,EAAiB,EAAjBA,GAAInD,EAAa,EAAbA,KAC1B,MAAiB,KAAbmD,EAAGtB,MAAqB,kBACQ,eAAhCtC,EAAMjB,WAAW9B,KAAKqF,MAA+B7B,EAAK6B,MACvD,cAAC,IAAD,CAAMjB,GAAE,iBAAYuC,EAAGtB,OAAvB,SAAiC7B,EAAK6B,UAGrD,CAAEiJ,MAAO,OAAQgP,KAAM,QACvB,CACIhP,MAAO,iBACPwP,SAAU,iBACVc,QAAS,YAAkD,IAA/Cnc,EAA8C,EAA9CA,YAA8C,IAAjCqV,QAAWC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,MACxC,OACI,qCACI,sBAAM5U,UAAU,0BAAhB,SACK2U,EAAO1S,QAEX2S,EAAM3S,OACH,yBACI9E,KAAK,SACL6C,UAAU,8IACVO,QAAS,WACLlB,EAAY5C,KAAK4F,IAAI,CACjBgmB,iBAAkBzT,EAAM3S,QAE5B5C,EAAYlC,KAAKkF,IAAI,iBACrBhD,EAAYC,QAAQ+C,KAAI,IARhC,UAWI,mBAAGrC,UAAU,oCAAuC,IAXxD,gBAmBpB,CACIkL,MAAO,SACPyP,UAAU,EACVa,QAAS,YAA4B,IAAzBnc,EAAwB,EAAxBA,YAAawL,EAAW,EAAXA,KACrB,OACI,cAAC,GAAD,CACItH,GAAIsH,EAAKtH,GACTwa,OAAQ,WACJ1e,EAAY5C,KAAK4F,IACboc,KAAKC,MAAMD,KAAKE,UAAU9T,EAAKxJ,SAEnChC,EAAYlC,KAAKkF,IAAI,iBACrBhD,EAAYC,QAAQ+C,KAAI,SAQ1C3F,GAAU,CACZ,CACIoD,MAAO,SACP3C,KAAM,SACN0f,GAAI,KACJ3C,KAAM,SACNnO,YAAa,8BAEjB,CACIjM,MAAO,OACP3C,KAAM,SACN0f,GAAI,OACJ3C,KAAM,OACN5Y,QAAS,CACL,CAAExB,MAAO,MAAOuB,MAAO,IACvB,CAAEvB,MAAO,QAASuB,MAAO,SACzB,CAAEvB,MAAO,SAAUuB,MAAO,YAGlC,CACIvB,MAAO,SACP3C,KAAM,SACN0f,GAAI,SACJ3C,KAAM,SACN5Y,QAAS,CACL,CAAExB,MAAO,MAAOuB,MAAO,IACvB,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,UAAWuB,MAAO,WAC3B,CAAEvB,MAAO,YAAauB,MAAO,aAC7B,CAAEvB,MAAO,WAAYuB,MAAO,eC5NlCinB,GAAY,CACdxoB,MAAO,SACPQ,QAAS,sDACTN,UACI,0EAEFuoB,GAAY,CAAEzoB,MAAO,WAAYQ,QAAS,uBAoKjCkoB,GAlKM,SAAC,GAGf,IAFHljB,EAEE,EAFFA,MAEE,IADFtF,iBACE,MADU,2CACV,EACIqR,EAAYzF,YAAS6S,KAAKC,MAAMD,KAAKE,UAAUrZ,EAAMjE,SAC3DxB,YAASwR,GAAWvR,MAAM,uBAE1B,IAAM2oB,EAAuB9lB,sBAAW,uCAAC,WAAOY,EAAI1G,GAAX,eAAAwJ,EAAA,sEACImI,GACrCjL,EACA1G,GAHiC,gBAKrCkM,GAAO,CACHlM,OANiC,EAC7BA,OAMJmM,QAAS,8BACTC,WAAW,wCAAD,OAA0CpM,EAA1C,mBACVsM,gBAJG,WAKC7D,EAAMzI,OAAOwF,IAAIxF,MAVY,2CAAD,wDAarC,IAEHyrB,GAAU/nB,QAAUkoB,EAAqBC,KACrC,KACApjB,EAAM/B,GAAGtB,MACT,YAGJsmB,GAAUhoB,QAAUkoB,EAAqBC,KACrC,KACApjB,EAAM/B,GAAGtB,MACT,UAGJ,IAAMqc,EAAc,GAEpB,OAAQhZ,EAAMzI,OAAOoF,OACjB,IAAK,SACDqc,EAAYpX,KAAKohB,IACjB,MAEJ,IAAK,WACDhK,EAAYpX,KAAKqhB,IACjB,MAEJ,QACIjK,EAAYpX,KAAKohB,GAAWC,IAGpC,OACI,eAAC,GAAD,CACIvoB,UAAWA,EACXse,YAAaA,EACbzd,SAAU,kBAAM,GAHpB,UAKI,cAAC,EAAD,CACIb,UAAU,2BACVF,MAAM,gBACNM,KAAK,OACLmD,GAAG,IACHlC,MAAOgQ,EAAUjR,KACjB2L,YAAY,wBACZlI,UAAQ,EACRX,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,2BACVF,MAAM,cACNM,KAAK,SACLmD,GAAG,IACHlC,MAAOgQ,EAAU/E,OACjBP,YAAY,sBACZ7I,UAAQ,IAGZ,cAAC,GAAD,CACIlD,UAAU,2BACVF,MAAM,iBACNM,KAAK,iBACLmD,GAAG,IACHlC,MAAOgQ,EAAU9E,cAAc,GAC/BrJ,UAAQ,EACRW,UAAQ,IAGZ,cAAC,GAAD,CACI7D,UAAU,2BACVF,MAAM,iBACNM,KAAK,iBACLmD,GAAG,IACHlC,MAAOgQ,EAAU9E,cAAc,GAC/BrJ,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,2BACVF,MAAM,QACNM,KAAK,QACLmD,GAAG,IACHpG,KAAK,QACLkE,MAAOgQ,EAAUlM,MACjB4G,YAAY,yBACZ7I,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHpG,KAAK,MACLkE,MAAOgQ,EAAU7E,QACjBT,YAAY,2BACZ7I,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,2BACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAOgQ,EAAU/L,MACjBhE,QAAS,CAAC,CAAExB,MAAO,WAAYuB,MAAO,aACtCwC,UAAQ,EACRX,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,2BACVF,MAAM,OACNM,KAAK,OACLmD,GAAG,IACHpG,KAAK,SACLmE,Q1ElHL,CACH,CAAExB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,QAASuB,MAAO,U0EgHjBA,MAAOgQ,EAAU9L,KACjBwG,YAAY,oBACZlI,UAAQ,EACRX,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHlC,MAAOgQ,EAAU7L,QACjBuG,YAAY,uBACZlI,UAAQ,EACRX,UAAQ,IAGZ,cAAC,GAAD,CACIlD,UAAU,2BACVwQ,YAAa,CAAE/D,IAAK4E,EAAU5E,IAAKC,IAAK2E,EAAU3E,KAClD+D,WAAS,QCzGVkY,GAnDI,WACf,MAGI/c,YAASjM,GAFClC,EADd,EACIuB,OAAUvB,WACV4B,EAFJ,EAEIA,YAEJQ,YAASpC,GAAYqC,MAAM,UAE3B,IAAUmT,EAAqBjE,cAAzBzL,GACA+W,EAAa1O,YAAS,CAAE4O,WAAY,KAAMnF,MAAO,SAWvD,OATA/J,qBAAU,WACN,IAAK8c,MAAMnV,GAAmB,CAC1B,IAAMrF,EAAWnQ,EAAWhB,KAAKoJ,MAC7B,SAAC+H,GAAD,OAAcA,EAASrK,GAAGlC,SAAW4R,KAEzCrF,GAAYnQ,EAAWf,QAAQC,OAAO0F,IAAIuL,EAASxN,KAAKiB,UAE7D,CAAC4R,IAGA,qCACI,cAAC,GAAD,CACI7S,KAAK,wBACLE,QAAQ,0BAEZ,cAAC,GAAD,CACI5D,QAASA,GACT4f,YAAa7e,EAAWf,QACxBD,KAAMgB,EAAWhB,KACjB4d,QAASA,GACTC,WAAYA,EACZxd,WAAYW,EAAWX,aAE3B,cAAC,GAAD,CACIwI,MAAOjG,EAAYC,QACnBgB,QAAQ,qBACR4K,MAAK,+BAHT,SAKgC,kBAA3B7L,EAAYlC,KAAK8E,OACd,cAAC,GAAD,CACIqD,MAAO7H,EAAWhB,KAAKoJ,MACnB,SAACgF,GAAD,OACIA,EAAKtH,GAAGlC,QAAUhC,EAAY5C,KAAK8G,GAAGlC,iBAWhEgZ,GAAU,CACZ,CACInP,MAAO,gBACPwP,SAAU,OACVc,QAAS,gBAAGjY,EAAH,EAAGA,GAAInD,EAAP,EAAOA,KAAMf,EAAb,EAAaA,YAAb,EAA0BwL,KAA1B,OACL,mBACIW,KAAI,WAAMjI,EAAGtB,OACb1B,QAAS,WACLlB,EAAY5C,KAAK4F,IAAI,CAAEkB,GAAIA,EAAGlC,QAC9BhC,EAAYlC,KAAKkF,IAAI,iBACrBhD,EAAYC,QAAQ+C,KAAI,IAE5BrC,UAAU,WAPd,SASKI,EAAK6B,UAIlB,CAAEiJ,MAAO,cAAegP,KAAM,SAAUuB,aAAc,eACtD,CACIvQ,MAAO,SACPwP,SAAU,SACVc,QAAS,YAAqB,IAAlBjY,EAAiB,EAAjBA,GAAI1G,EAAa,EAAbA,OACZ,OACI,cAAC,EAAD,CACIuD,KAAK,SACLjD,KAAK,SACLkE,MAAOxE,EACPkG,SAAQ,uCAAE,WAAON,GAAP,eAAA4D,EAAA,sEAEImI,GACFjL,EAAGtB,MACHQ,EAAcpB,OAJhB,gBAMN0H,GAAO,CACHlM,OAPE,EACEA,OAOJmM,QAAS,8BACTC,WAAW,wCAAD,OAA0CxG,EAAc3C,MAAxD,mBACVqJ,gBAJG,WAKCtM,EAAOwF,IAAII,EAAcpB,UAX3B,2CAAF,sDAeRC,QAAS,CACL,CAAExB,MAAO,SAAUuB,MAAO,UAC1B,CAAEvB,MAAO,UAAWuB,MAAO,WAC3B,CAAEvB,MAAO,WAAYuB,MAAO,iBAMhD,CACI6J,MAAO,WACPwP,SAAU,gBACVc,QAAS,YAAiC,IAAD,IAA7B5O,SAAYrJ,EAAiB,EAAjBA,GAAInD,EAAa,EAAbA,KACxB,OAAO,cAAC,IAAD,CAAMY,GAAE,iBAAYuC,EAAGtB,OAAvB,SAAiC7B,EAAK6B,UAGrD,CACIiJ,MAAO,gBACPyP,UAAU,EACVa,QAAS,YAAwB,IAArBjP,EAAoB,EAApBA,cACR,MAAkC,KAA3BA,EAAc,GAAGtK,MAClBsK,EAAc,GAAGtK,MACjBsK,EAActK,MAAMgF,KAAK,OAAO2hB,KAAK,SAGnD,CAAE1d,MAAO,eAAgBgP,KAAM,cAC/B,CACIhP,MAAO,SACPyP,UAAU,EACVa,QAAS,YAAgC,IAA7Bnc,EAA4B,EAA5BA,YAAakE,EAAe,EAAfA,GAAIsH,EAAW,EAAXA,KACzB,OACI,cAAC,GAAD,CACItH,GAAIsH,EAAKtH,GACTqa,SAAQ,sBAAE,8BAAAvX,EAAA,0DAIW,IAHA4B,OAAOoP,QACpB,yCAFE,iEAMyB9I,GAAehL,EAAGtB,OAN3C,gBAMExF,EANF,EAMEA,KAERsM,GAAO,CACHlM,OATE,EAMQA,OAIVmM,QAAS,uBACTC,WACI,0CACJE,gBALG,WAMCxJ,EAAMX,OAAOvB,WAAWhB,KAAK4F,KAAI,SAAC+T,GAC9B,OAAOA,EAAEjQ,QACL,SAACyH,GAAD,OAAcA,EAASrK,KAAO9G,EAAK8G,YAhB7C,2CAsBVwa,OAAQ,WACJ1e,EAAY5C,KAAK4F,IAAI,CAAEkB,GAAIA,EAAGlC,QAC9BhC,EAAYlC,KAAKkF,IAAI,iBACrBhD,EAAYC,QAAQ+C,KAAI,SAQ1C3F,GAAU,CACZ,CACIoD,MAAO,SACP3C,KAAM,SACN0f,GAAI,OACJ3C,KAAM,SACNnO,YAAa,oCCrBN8c,GA5JE,SAAC,GAIX,IAHHvjB,EAGE,EAHFA,MACAkZ,EAEE,EAFFA,UAEE,IADFxe,iBACE,MADU,oCACV,EACIqR,EAAYzF,YAAS6S,KAAKC,MAAMD,KAAKE,UAAUrZ,EAAMjE,SAG3D,OAFAxB,YAASwR,GAAWvR,MAAM,wBAGtB,eAAC,GAAD,CACIE,UAAWA,EACXa,SAAQ,sBAAE,4BAAAwF,EAAA,sEACmBc,EAAW7B,EAAMrD,OADpC,gBAEN8G,GAAO,CACHlM,OAHE,EACEA,OAGJmM,QAAS,+BACTC,WACI,kDACJE,gBALG,WAMC7D,EAAMjD,IAAIoc,KAAKC,MAAMD,KAAKE,UAAUtN,EAAUhQ,SAC9Cmd,GAAaA,OATf,2CAFd,UAgBI,cAAC,EAAD,CACIxe,UAAU,2BACVF,MAAM,aACNM,KAAK,aACLmD,GAAG,IACHlC,MAAOgQ,EAAUrM,WACjB+G,YAAY,qBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAOgQ,EAAUpM,UACjB8G,YAAY,oBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHlC,MAAOgQ,EAAUnM,SACjB6G,YAAY,mBACZ7I,UAAQ,EACRW,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,QACLoG,GAAG,IACHlC,MAAOgQ,EAAUlM,MACjB4G,YAAY,gBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,OACNM,KAAK,OACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAOgQ,EAAUzU,KACjB0E,QAAS,CACL,CAAExB,MAAO,QAASuB,MAAO,SACzB,CAAEvB,MAAO,iBAAkBuB,MAAO,kBAClC,CAAEvB,MAAO,aAAcuB,MAAO,cAC9B,CAAEvB,MAAO,aAAcuB,MAAO,cAC9B,CAAEvB,MAAO,OAAQuB,MAAO,SAE5B6B,UAAQ,IAGZ,cAAC,EAAD,CACIlD,UAAU,2BACVuD,GAAG,IACHzD,MAAM,SACNM,KAAK,SACLjD,KAAK,QACLkE,MAAOgQ,EAAUjM,OACjB9D,QAAS,CACL,CACIxB,MAAO,OACPuB,MAAO,KAEX,CACIvB,MAAO,SACPuB,MAAO,QAKnB,cAAC,GAAD,CACIrB,UAAU,2BACVuD,GAAG,IACHlC,MAAOgQ,EAAUhM,eAGrB,cAAC,EAAD,CACIrF,UAAU,2BACVF,MAAM,SACNM,KAAK,SACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAOgQ,EAAUxU,OACjByE,QAAS,CACL,CAAExB,MAAO,YAAauB,MAAO,UAC7B,CAAEvB,MAAO,gBAAiBuB,MAAO,cACjC,CAAEvB,MAAO,SAAUuB,MAAO,aAIlC,cAAC,EAAD,CACIrB,UAAU,2BACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAOgQ,EAAU/L,MACjBhE,QAAS,CAAC,CAAExB,MAAO,WAAYuB,MAAO,eAG1C,cAAC,EAAD,CACIrB,UAAU,2BACVF,MAAM,OACNM,KAAK,OACLmD,GAAG,KACHpG,KAAK,SACLmE,Q5E7GL,CACH,CAAExB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,QAASuB,MAAO,U4E2GjBA,MAAOgQ,EAAU9L,KACjBwG,YAAY,sBAGhB,cAAC,EAAD,CACI/L,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,KACHlC,MAAOgQ,EAAU7L,QACjBuG,YAAY,6BC3Ib+c,GAnBO,CAClBrsB,KAAM,CACFuI,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPqB,SAAU,GACVe,iBAAkB,GAClB3K,KAAM,OACNwI,OAAQ,GACRC,aAAc,GACdxI,OAAQ,aACRyI,MAAO,WACPC,KAAM,GACNC,QAAS,IAEbqZ,OAAQ,I,oBCKGkK,GAlBO,SAAC,GAAgC,IAA9B9c,EAA6B,EAA7BA,aAAiBnK,EAAY,kBAClD,OACI,cAAC,EAAD,aACIhC,MAAM,WACNM,KAAK,WACLmD,GAAG,WACHpG,KAAK,WACL4O,YAAY,eACZG,UAAU,IACVC,UAAU,KACV7J,QAAS2J,EACTpK,eAAa,EACbgC,UAAQ,GACJ/B,KC2KDknB,GAhLO,SAAC,GAAmB,IAAjB1J,EAAgB,EAAhBA,UACjBha,EAAQsG,YAAS,CACjBnP,KAAK,eAAMqsB,GAAcrsB,MACzBoiB,OAAO,eAAMiK,GAAcjK,UAEzBoK,EAAYrd,YAASjM,EAAMX,OAAOtB,MAAMjB,MACtCA,EAAiB6I,EAAjB7I,KAAiB6I,EAAXuZ,OAId,OAFAhf,YAASyF,GAAOxF,MAAM,mBAGlB,eAAC,GAAD,CACIoL,MAAM,eACN5F,MAAOga,EACPtf,UAAU,uDACVse,YAAa,CACT,CACIxe,MAAO,kBACPQ,QAAS,gBAGjBO,SAAQ,sBAAE,4BAAAwF,EAAA,sEACmBE,EAAQ9J,EAAKwF,OADhC,gBAEN8G,GAAO,CACHlM,OAHE,EACEA,OAGJoM,WAAY,sCACZE,gBAAgB,WAAD,4BAAE,8BAAA9C,EAAA,6DAEb5J,EAAK4F,IAAL,eAAcymB,GAAcrsB,OAFf,SAKwB2J,IALxB,gBAKC8iB,EALD,EAKLzsB,KACRwsB,EAAU5mB,IAAI6mB,GAGd5J,EAAUjd,KAAI,GATD,2CAAF,kDAAC,KALd,2CAVd,UA6BI,cAAC,EAAD,CACIrC,UAAU,gBACVF,MAAM,aACNM,KAAK,aACLmD,GAAG,IACHlC,MAAO5E,EAAKuI,WACZ+G,YAAY,qBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAO5E,EAAKwI,UACZ8G,YAAY,oBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHlC,MAAO5E,EAAKyI,SACZ6G,YAAY,mBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,QACLoG,GAAG,IACHlC,MAAO5E,EAAK0I,MACZ4G,YAAY,gBACZlI,UAAQ,IAGZ,cAAC,GAAD,CAAe7D,UAAU,gBAAgBqB,MAAO5E,EAAK+J,WAErD,cAAC,GAAD,CACI1G,MAAM,mBACNE,UAAU,2BACViM,aAAcxP,EAAK+J,SAASnF,MAC5BA,MAAO5E,EAAK8K,mBAGhB,cAAC,EAAD,CACIvH,UAAU,gBACVF,MAAM,OACNM,KAAK,OACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAO5E,EAAKG,KACZ0E,QAAS,CACL,CAAExB,MAAO,QAASuB,MAAO,SACzB,CAAEvB,MAAO,iBAAkBuB,MAAO,kBAClC,CAAEvB,MAAO,OAAQuB,MAAO,WAIhC,cAAC,EAAD,CACIrB,UAAU,gBACVuD,GAAG,IACHzD,MAAM,SACNM,KAAK,SACLjD,KAAK,QACLkE,MAAO5E,EAAK2I,OACZ9D,QAAS,CACL,CACIxB,MAAO,OACPuB,MAAO,KAEX,CACIvB,MAAO,SACPuB,MAAO,QAKnB,cAAC,GAAD,CACIrB,UAAU,gBACVuD,GAAG,IACHlC,MAAO5E,EAAK4I,eAGhB,cAAC,EAAD,CACIrF,UAAU,gBACVF,MAAM,SACNM,KAAK,SACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAO5E,EAAKI,OACZyE,QAAS,CACL,CAAExB,MAAO,YAAauB,MAAO,UAC7B,CAAEvB,MAAO,gBAAiBuB,MAAO,cACjC,CAAEvB,MAAO,SAAUuB,MAAO,aAIlC,cAAC,EAAD,CACIrB,UAAU,gBACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAO5E,EAAK6I,MACZhE,QAAS,CAAC,CAAExB,MAAO,WAAYuB,MAAO,eAG1C,cAAC,EAAD,CACIrB,UAAU,gBACVF,MAAM,OACNM,KAAK,OACLmD,GAAG,KACHlC,MAAO5E,EAAK8I,KACZpI,KAAK,SACLmE,Q/ErIL,CACH,CAAExB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,QAASuB,MAAO,U+EmIjB0K,YAAY,sBAGhB,cAAC,EAAD,CACI/L,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,KACHlC,MAAO5E,EAAK+I,QACZuG,YAAY,6BC5Hbod,GA7CD,WACV,IACczrB,EACVkO,YAASjM,GADTX,OAAUtB,MAEdmC,YAASnC,GAAOoC,MAAM,SAEtB,IAAUspB,EAAWpa,cAAfzL,GACAwc,EAAgBnU,aAAS,GACzB0O,EAAa1O,YAAS,CAAE4O,WAAY,KAAMnF,MAAO,SASvD,OAPA/J,qBAAU,WACN,GAAuB,kBAAX8d,EAAqB,CAC7B,IAAMtjB,EAAOpI,EAAMjB,KAAKoJ,MAAK,SAACC,GAAD,OAAUA,EAAKvC,GAAGlC,SAAW+nB,KAC1DtjB,GAAQpI,EAAMhB,QAAQC,OAAO0F,IAAIyD,EAAKd,WAAW3D,UAEtD,CAAC+nB,IAGA,qCACI,cAAC,GAAD,CACIhpB,KAAK,mBACLE,QAAQ,eACRkd,UAAW,CACP1d,MAAO,eACPid,QAAS,WACLgD,EAAc1d,KAAI,OAI9B,cAAC,GAAD,CACI3F,QAASA,GACT4f,YAAa5e,EAAMhB,QACnBD,KAAMiB,EAAMjB,KACZ4d,QAASA,GACTC,WAAYA,EACZQ,KAAM,SAACxV,EAAOkZ,GAAR,OACF,cAAC,GAAD,CAAUlZ,MAAOA,EAAOkZ,UAAWA,KAEvC1hB,WAAYY,EAAMZ,aAEtB,cAAC,GAAD,CAAewiB,UAAWS,QAOhC1F,GAAU,CACZ,CACInP,MAAO,YACPwP,SAAU,YACVc,QAAS,gBAAGjY,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,UAAW4V,EAA9B,EAA8BA,OAAQa,EAAtC,EAAsCA,WAAtC,OACL,wBACInb,QAAS,kBAAMmb,EAAWb,EAAS,KAAOtX,EAAGlC,QAC7CrB,UAAU,mEAFd,mBAIQgF,EAAW/C,MAJnB,YAI4BgD,EAAUhD,WAI9C,CAAEiJ,MAAO,WAAYgP,KAAM,YAC3B,CAAEhP,MAAO,QAASgP,KAAM,SACxB,CACIhP,MAAO,SACPwP,SAAU,SACVc,QAAS,YACL,MAAwB,MADH,EAAbpW,OACMnD,MAAgB,OAAS,WAG/C,CAAEiJ,MAAO,OAAQgP,KAAM,QACvB,CAAEhP,MAAO,SAAUgP,KAAM,UACzB,CACIhP,MAAO,YACPyP,UAAU,EACVT,KAAM,YACNuB,aAAc,qBAElB,CAAEvQ,MAAO,eAAgBgP,KAAM,gBAC/B,CACIhP,MAAO,SACPyP,UAAU,EACVa,QAAS,gBAAGjY,EAAH,EAAGA,GAAIsX,EAAP,EAAOA,OAAQa,EAAf,EAAeA,WAAf,OACL,cAAC,GAAD,CACInY,GAAIA,EACJsX,OAAQA,EACRiD,OAAQpC,EACRkC,SAAQ,sBAAE,8BAAAvX,EAAA,0DAIW,IAHA4B,OAAOoP,QACpB,0CAFE,iEAMyB/Q,EAAW/C,EAAGtB,OANvC,gBAMExF,EANF,EAMEA,KAERsM,GAAO,CACHlM,OATE,EAMQA,OAIVmM,QAAS,mBACTC,WAAY,sCACZE,gBAJG,WAKCxJ,EAAMX,OAAOtB,MAAMjB,KAAK4F,KAAI,SAAC+T,GACzB,OAAOA,EAAEjQ,QAAO,SAACL,GAAD,OAAUA,EAAKvC,KAAO9G,EAAK8G,YAdjD,gDAwBpB7G,GAAU,CACZ,CACIoD,MAAO,SACP3C,KAAM,SACN0f,GAAI,aACJ3C,KAAM,SACNnO,YAAa,+BAEjB,CACIjM,MAAO,OACP3C,KAAM,SACN0f,GAAI,OACJ3C,KAAM,OACNF,MAAM,EACN1Y,QAAS,CACL,CAAExB,MAAO,MAAOuB,MAAO,IACvB,CAAEvB,MAAO,QAASuB,MAAO,SACzB,CAAEvB,MAAO,iBAAkBuB,MAAO,kBAClC,CAAEvB,MAAO,aAAcuB,MAAO,cAC9B,CAAEvB,MAAO,aAAcuB,MAAO,cAC9B,CAAEvB,MAAO,OAAQuB,MAAO,UAGhC,CACIvB,MAAO,SACP3C,KAAM,SACN0f,GAAI,SACJ3C,KAAM,SACN5Y,QAAS,CACL,CAAExB,MAAO,MAAOuB,MAAO,IACvB,CAAEvB,MAAO,YAAauB,MAAO,UAC7B,CAAEvB,MAAO,gBAAiBuB,MAAO,cACjC,CAAEvB,MAAO,SAAUuB,MAAO,aCrEvBgoB,GA/EM,SAAC,GAMf,IALHrpB,EAKE,EALFA,UACAsV,EAIE,EAJFA,IACAC,EAGE,EAHFA,KAGE,IAFFzV,aAEE,MAFM,gBAEN,MADFM,YACE,MADK,gBACL,EAEarB,EACX6M,YAASjM,GADTb,QAAWC,aAQf,OALIA,EAAasC,QACbiU,EAAM,CAAEjU,MAAOtC,EAAakD,MAAM7B,MAClCmV,EAAO,CAAElU,MAAOtC,EAAakD,MAAMsT,OAInC,sBAAKvV,UAAWA,EAAhB,UACI,uBAAOwD,QAAQ,IAAIxD,UAAU,oCAA7B,SACKF,IAEL,sBAAKE,UAAU,OAAOsP,MAAO,CAAEwH,OAAQ,qBAAvC,UACI,qBACI9W,UAAU,gHACVsP,MAAO,CACH2O,gBAAgB,QAAD,OAAU3I,EAAIjU,MAAd,OAHvB,SAMmB,KAAdiU,EAAIjU,OAAgBtC,EAAasC,MAC9B,mBAAGrB,UAAU,+DAEb,KAGR,sBAAKA,UAAU,iBAAf,UACI,mBAAGA,UAAU,0EAAb,SACI,+BACI,oBAAIA,UAAU,oCAAd,mBAGA,oBAAIA,UAAU,eAAd,SACKsV,EAAIjU,MAAM0F,MAAM,KAAKuiB,QAE1B,uBACA,oBAAItpB,UAAU,kCAAd,mBAGA,qBAAIA,UAAU,eAAd,WACMuV,EAAKlU,MAAQ,KAAMyJ,QAAQ,GADjC,cAKR,sBAAK9K,UAAU,iBAAf,UACmB,KAAdsV,EAAIjU,OACD,cAAC,GAAD,CACIuc,SAAU,WACqB,KAAvB7e,EAAasC,OACbiU,EAAIjT,IAAI,IACRkT,EAAKlT,IAAI,KAETtD,EAAasD,IAAI,OAKjC,cAAC,EAAD,CACIkB,GAAG,IACHnD,KAAMA,EACNiB,MAAOtC,EACP5B,KAAK,OACLqE,WAAS,iBCsFtB+nB,GAxJK,SAAC,GAId,IAHHjkB,EAGE,EAHFA,MACAkZ,EAEE,EAFFA,UAEE,IADFxe,iBACE,MADU,mCACV,EACIqR,EAAYzF,YAAS6S,KAAKC,MAAMD,KAAKE,UAAUrZ,EAAMjE,SAG3D,OAFAxB,YAASwR,GAAWvR,MAAM,2BAGtB,eAAC,GAAD,CACIE,UAAWA,EACXa,SAAQ,sBAAE,4BAAAwF,EAAA,sE9D6FQ5J,E8D5FyB4U,EAAUhQ,M9D6FtD0E,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,M8D9FrB,gBAENkM,GAAO,CACHlM,OAHE,EACEA,OAGJmM,QAAS,kCACTC,WAAY,yCACNE,gBAJH,WAIsB,OAAD,8HACW+M,GAC3B7E,EAAU9N,GAAGlC,OAFG,gBACZxE,EADY,EACZA,OAAQJ,EADI,EACJA,KAGhBsM,GAAO,CACHlM,SACAmM,QAAS,6BACTC,WACI,gDACJE,gBALG,WAMC7D,EAAMjD,IACFoc,KAAKC,MAAMD,KAAKE,UAAUtN,EAAUhQ,SAExCiE,EAAMgO,MAAMgE,MAAM7a,GAClB+hB,OAdY,gDANtB,iC9D6FO,IAAC/hB,I8D7FR,OAFd,UA6BI,cAAC,GAAD,CACIuD,UAAU,wBACVsV,IAAKjE,EAAUiC,MAAMgC,IACrBC,KAAMlE,EAAUiC,MAAMiC,OAG1B,cAAC,EAAD,CACIvV,UAAU,2BACVF,MAAM,eACNM,KAAK,eACLmD,GAAG,IACHlC,MAAOgQ,EAAUjR,KACjB2L,YAAY,6BACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHlC,MAAOgQ,EAAUgC,QACjBtH,YAAY,oBAGhB,cAAC,EAAD,CACI/L,UAAU,gBACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAOgQ,EAAU3R,KACjBqM,YAAY,kBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,oBACNM,KAAK,cACLjD,KAAK,QACLkE,MAAOgQ,EAAUoE,iBACjBnU,QAAS,CACL,CACIxB,MAAO,MACPuB,OAAO,GAEX,CACIvB,MAAO,KACPuB,OAAO,MAKnB,cAAC,GAAD,CACIrB,UAAU,2BACVuD,GAAG,IACHlC,MAAOgQ,EAAUpU,SACjB4G,UAAQ,IAGZ,cAAC,GAAD,CACI7D,UAAU,2BACVuD,GAAG,IACHlC,MAAOgQ,EAAUpT,QACjB4F,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,aACNM,KAAK,aACLmD,GAAG,IACHlC,MAAOgQ,EAAUmE,aAGrB,cAAC,EAAD,CACIxV,UAAU,2BACVF,MAAM,sBACNM,KAAK,cACLmD,GAAG,IACHlC,MAAOgQ,EAAUqE,YACjBvY,KAAK,aAGT,cAAC,EAAD,CACI6C,UAAU,2BACVF,MAAM,qBACNM,KAAK,QACLmD,GAAG,IACHlC,MAAOgQ,EAAUsE,MACjBxY,KAAK,aAGT,cAAC,EAAD,CACI6C,UAAU,2BACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHlC,MAAOgQ,EAAUuE,SACjBzY,KAAK,aAGT,cAAC,EAAD,CACI6C,UAAU,2BACVF,MAAM,eACNM,KAAK,eACLmD,GAAG,KACHlC,MAAOgQ,EAAUwE,aACjB1Y,KAAK,iBC1INqsB,GAlBU,CACrB/sB,KAAM,CACF2D,KAAM,GACNiT,QAAS,GACT3T,KAAM,GACNzC,SAAU,GACVgB,QAAS,GACTqV,MAAO,CAAEgC,IAAK,GAAIC,KAAM,IACxBC,WAAY,GACZC,kBAAkB,EAClBC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,aAAc,IAElBgJ,OAAQ,ICkMG4K,GAjMU,SAAC,GAAmB,IAAjBnK,EAAgB,EAAhBA,UACpBha,EAAQuT,YAAa,CACrBgG,OAAO,eAAM2K,GAAiB3K,QAC9BpiB,KAAK,eAAM+sB,GAAiB/sB,QAEhC,EAKIoc,YAAalZ,GAJFZ,EADf,EACID,QAAWC,aAEWqgB,EAH1B,EAEIpgB,OACII,SAAY3C,KAGZA,EAAiB6I,EAAjB7I,KAAiB6I,EAAXuZ,OAGd,OAFAhf,YAASyF,GAAOxF,MAAM,sBAGlB,eAAC,GAAD,CACIoL,MAAM,kBACN5F,MAAOga,EACPP,QAAS,WACLhgB,EAAasD,IAAI,KAErBic,YAAa,CACT,CACIxe,MAAO,cACPQ,QAAS,gBAGjBN,UAAU,uDACVa,SAAQ,sBAAE,gCAAAwF,EAAA,sEACsC4P,GACxCxZ,EAAKwF,OAFH,gBACEpF,EADF,EACEA,OAAc6sB,EADhB,EACUjtB,KAGhBsM,GAAO,CACHlM,SACAoM,WAAY,4CACZE,gBAAgB,WAAD,4BAAE,oCAAA9C,EAAA,yDACc,KAAvBtH,EAAakD,MADJ,wBAGTxF,EAAK4F,IAAL,eAAcmnB,GAAiB/sB,OAG/B6iB,EAAUjd,KAAI,GANL,SAUCyT,KAVD,gBASK6T,EATL,EASDltB,KAER2iB,EAAa/c,IAAIsnB,GAXR,yCAcCzT,GAAmBwT,EAAYnmB,IAdhC,iBAaD1G,EAbC,EAaDA,OAAc+sB,EAbb,EAaOntB,KAGhBsM,GAAO,CACHlM,SACAmM,QAAS,6BACTC,WACI,gDACJE,gBALG,WAMCugB,EAAYpW,MAAQsW,EAGpBntB,EAAK4F,IAAL,eAAcmnB,GAAiB/sB,OAC/BsC,EAAasD,IAAI,IAGjBid,EAAUjd,KAAI,GAGd,sBAAC,8BAAAgE,EAAA,sEAEayP,KAFb,gBACiB6T,EADjB,EACWltB,KAER2iB,EAAa/c,IAAIsnB,GAHpB,0CAAD,MAhCC,4CAAF,kDAAC,KAPd,2CAbd,UAgEI,cAAC,GAAD,CACI3pB,UAAU,wBACVsV,IAAK7Y,EAAK6W,MAAMgC,IAChBC,KAAM9Y,EAAK6W,MAAMiC,OAGrB,cAAC,EAAD,CACIvV,UAAU,2BACVF,MAAM,eACNM,KAAK,eACLmD,GAAG,IACHlC,MAAO5E,EAAK2D,KACZ2L,YAAY,6BACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHlC,MAAO5E,EAAK4W,QACZtH,YAAY,oBAGhB,cAAC,EAAD,CACI/L,UAAU,gBACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAO5E,EAAKiD,KACZqM,YAAY,kBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,gBACVF,MAAM,oBACNM,KAAK,cACLjD,KAAK,QACLkE,MAAO5E,EAAKgZ,iBACZnU,QAAS,CACL,CACIxB,MAAO,MACPuB,OAAO,GAEX,CACIvB,MAAO,KACPuB,OAAO,MAKnB,cAAC,GAAD,CACIrB,UAAU,2BACVuD,GAAG,IACHlC,MAAO5E,EAAKQ,SACZ4G,UAAQ,IAGZ,cAAC,GAAD,CACI7D,UAAU,2BACVuD,GAAG,IACHlC,MAAO5E,EAAKwB,QACZ4F,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,aACNM,KAAK,aACLmD,GAAG,IACHlC,MAAO5E,EAAK+Y,aAGhB,cAAC,EAAD,CACIxV,UAAU,2BACVF,MAAM,sBACNM,KAAK,cACLmD,GAAG,IACHlC,MAAO5E,EAAKiZ,YACZvY,KAAK,aAGT,cAAC,EAAD,CACI6C,UAAU,2BACVF,MAAM,qBACNM,KAAK,QACLmD,GAAG,IACHlC,MAAO5E,EAAKkZ,MACZxY,KAAK,aAGT,cAAC,EAAD,CACI6C,UAAU,2BACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHlC,MAAO5E,EAAKmZ,SACZzY,KAAK,aAGT,cAAC,EAAD,CACI6C,UAAU,2BACVF,MAAM,eACNM,KAAK,eACLmD,GAAG,KACHlC,MAAO5E,EAAKoZ,aACZ1Y,KAAK,iBCtIN0sB,GAtDE,WACb,MAGIje,YAASjM,GAFCP,EADd,EACIJ,OAAUI,SACCL,EAFf,EAEID,QAAWC,aAEfc,YAAST,GAAUU,MAAM,WAEzB,IAAUmU,EAAcjF,cAAlBzL,GACAwc,EAAgBnU,aAAS,GACzB0O,EAAa1O,YAAS,CAAE4O,WAAY,KAAMnF,MAAO,SAWvD,OATA/J,qBAAU,WACN,GAA0B,kBAAd2I,EAAwB,CAChC,IAAM+B,EAAU5W,EAAS3C,KAAKoJ,MAC1B,SAACmQ,GAAD,OAAaA,EAAQzS,GAAGlC,SAAW4S,KAEvC+B,GAAW5W,EAAS1C,QAAQC,OAAO0F,IAAI2T,EAAQ5V,KAAKiB,UAEzD,CAAC4S,IAGA,qCACI,cAAC,GAAD,CACI7T,KAAK,mBACLE,QAAQ,eACRkd,UAAW,CACP1d,MAAO,kBACPid,QAAS,WACLgD,EAAc1d,KAAI,OAI9B,cAAC,GAAD,CACI3F,QAASA,GACT4f,YAAald,EAAS1C,QACtBD,KAAM2C,EAAS3C,KACf4d,QAASA,GACTC,WAAYA,EACZQ,KAAM,SAACxV,EAAOkZ,GAAR,OACF,cAAC,GAAD,CACIlZ,MAAOA,EACPkZ,UAAW,WACPA,IACAzf,EAAasD,IAAI,QAI7BvF,WAAYsC,EAAStC,aAEzB,cAAC,GAAD,CAAkBwiB,UAAWS,QAOnC1F,GAAU,CACZ,CACInP,MAAO,gBACPwP,SAAU,KACVc,QAAS,gBAAGpb,EAAH,EAAGA,KAAMkT,EAAT,EAASA,MAAO5T,EAAhB,EAAgBA,KAAM6D,EAAtB,EAAsBA,GAAIsX,EAA1B,EAA0BA,OAAQa,EAAlC,EAAkCA,WAAlC,OACL,cAAC,GAAD,CACItb,KAAMA,EAAKiB,MACXiS,MAAOA,EAAMgC,IAAIjU,MACjB3B,KAAMA,EAAK2B,MACXkC,GAAIA,EACJsX,OAAQA,EACRiD,OAAQpC,MAIpB,CAAExQ,MAAO,UAAWgP,KAAM,WAC1B,CAAEhP,MAAO,WAAYgP,KAAM,YAC3B,CAAEhP,MAAO,UAAWgP,KAAM,WAC1B,CACIhP,MAAO,aACPwP,SAAU,aACVc,QAAS,qBAAGhG,WAA4BnU,OAAS,YAErD,CACI6J,MAAO,oBACPwP,SAAU,mBACVc,QAAS,qBAAG/F,iBACSpU,MAAQ,MAAQ,OAEzC,CACI6J,MAAO,SACPyP,UAAU,EACVa,QAAS,gBAAGjY,EAAH,EAAGA,GAAIsX,EAAP,EAAOA,OAAQa,EAAf,EAAeA,WAAf,OACL,cAAC,GAAD,CACInY,GAAIA,EACJsX,OAAQA,EACRiD,OAAQ,SAAChd,GACL4a,EAAW5a,GACXnB,EAAMb,QAAQC,aAAasD,IAAI,KAEnCub,SAAQ,sBAAE,8BAAAvX,EAAA,0DAIW,IAHA4B,OAAOoP,QACpB,wCAFE,iEAMyBtB,GAAcxS,EAAGtB,OAN1C,gBAMExF,EANF,EAMEA,KAERsM,GAAO,CACHlM,OATE,EAMQA,OAIVmM,QAAS,sBACTC,WAAY,yCACZE,gBAJG,WAKCxJ,EAAMX,OAAOI,SAAS3C,KAAK4F,KAAI,SAAC+T,GAC5B,OAAOA,EAAEjQ,QACL,SAAC6P,GAAD,OAAaA,EAAQzS,KAAO9G,EAAK8G,YAf3C,gDA0BpB7G,GAAU,CACZ,CACIoD,MAAO,SACP3C,KAAM,SACN0f,GAAI,OACJ3C,KAAM,SACNnO,YAAa,kCAEjB,CACIjM,MAAO,WACP3C,KAAM,SACN0f,GAAI,WACJ3C,KAAM,WACN5Y,QAAQ,CAAE,CAAExB,MAAO,MAAOuB,MAAO,KAA1B,oBvCrJJ,CACH,CAAEkC,GAAI,EAAGzD,MAAO,aAAcuB,MAAO,cACrC,CAAEkC,GAAI,EAAGzD,MAAO,WAAYuB,MAAO,YACnC,CAAEkC,GAAI,EAAGzD,MAAO,oBAAqBuB,MAAO,qBAC5C,CAAEkC,GAAI,EAAGzD,MAAO,kBAAmBuB,MAAO,mBAC1C,CAAEkC,GAAI,EAAGzD,MAAO,iBAAkBuB,MAAO,kBACzC,CAAEkC,GAAI,EAAGzD,MAAO,cAAeuB,MAAO,kBuCgJtC2Y,MAAM,GAEV,CACIla,MAAO,UACP3C,KAAM,SACN0f,GAAI,UACJ3C,KAAM,UACN5Y,QAAQ,CAAE,CAAExB,MAAO,MAAOuB,MAAO,KAA1B,oBrC7JJ,CACH,CAAEkC,GAAI,EAAGzD,MAAO,OAAQuB,MAAO,QAC/B,CAAEkC,GAAI,EAAGzD,MAAO,YAAauB,MAAO,aACpC,CAAEkC,GAAI,EAAGzD,MAAO,MAAOuB,MAAO,OAC9B,CAAEkC,GAAI,EAAGzD,MAAO,SAAUuB,MAAO,UACjC,CAAEkC,GAAI,EAAGzD,MAAO,SAAUuB,MAAO,esCiC1ByoB,GArCC,SAAC,GAA8D,IAA5DhqB,EAA2D,EAA3DA,MAAOE,EAAoD,EAApDA,UAAWU,EAAyC,EAAzCA,SAAyC,IAA/BqpB,wBAA+B,MAAZ,MAAY,EAC1E,EAA8Bne,oBAAS,GAAvC,oBAAOtM,EAAP,KAAgB0qB,EAAhB,KAEMC,EAAgBtnB,uBAAY,WAC9BqnB,GAAY1qB,KACb,CAACA,IAEJ,OACI,0BACIU,UAAS,UACLV,EAAU,YAAc,SADnB,oBAEGU,GAHhB,UAKI,qBACIO,QAAS0pB,EACTjqB,UAAS,UACLV,EAAU,YAAc,UADnB,kHAFb,UAMKQ,EACD,mBACIE,UAAS,uBACLV,EAAU,KAAO,OADZ,+BAKhBA,GACG,qBACIU,UAAS,iDAA4C+pB,GADzD,SAGKrpB,QCtBRwpB,GAAmB,SAAC3mB,EAAIpG,EAAMV,GACvC,OACWsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,OAMlCstB,GAAyB,SAAC5mB,EAAI9G,GACvC,OAAOsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,OCW5ButB,GA5BI,SAAC,GAAyB,IAAvBtqB,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SACzB,EAA8BkL,oBAAS,GAAvC,oBAAOtM,EAAP,KAAgB0qB,EAAhB,KAEA,OACI,0BACIhqB,UAAS,gCACLV,EAAU,GAAK,+BAFvB,UAKI,qBACIiB,QAAS,kBAAMypB,GAAY1qB,IAC3BU,UAAU,kGAFd,UAIKF,EACD,uBAAME,UAAU,iEAAhB,UACI,mBAAGA,UAAU,iBADjB,aAGA,mBACIA,UAAS,uBACLV,EAAU,KAAO,OADZ,yBAKhBA,GAAWoB,MC2BT2pB,GA/CO,SAAC,GAAoC,IAAlC5tB,EAAiC,EAAjCA,KAAM6tB,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACnC,OACI,cAAC,GAAD,CAAYzqB,MAAM,WAAlB,SACI,uBACIe,SAAUypB,EACVtqB,UAAU,mDAFd,UAII,cAAC,EAAD,CACIF,MAAM,UACNM,KAAK,UACLmD,GAAG,UACHpG,KAAK,SACLkE,MAAO5E,EAAK6Q,QACZzJ,UAAQ,IAGZ,cAAC,EAAD,CACI/D,MAAM,kBACNM,KAAK,kBACLmD,GAAG,kBACHlC,MAAO5E,EAAK8Q,gBACZ1J,UAAQ,IAGZ,cAAC,EAAD,CACI/D,MAAM,YACNM,KAAK,YACLmD,GAAG,YACHlC,MAAO5E,EAAK+Q,UACZ3J,UAAQ,IAGZ,sBAAK7D,UAAU,mBAAf,UACI,cAAC,EAAD,CACIF,MAAM,aACNQ,QAAQ,wBACRN,UAAU,+CACV7C,KAAK,SACLoD,QAASgqB,IAEb,cAAC,EAAD,CAAYzqB,MAAM,kBCMvB0qB,GA9CI,SAAC,GAAoC,IAAlC/tB,EAAiC,EAAjCA,KAAM6tB,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAChC,OACI,cAAC,GAAD,CAAYzqB,MAAM,OAAlB,SACI,uBACIe,SAAUypB,EACVtqB,UAAU,mDAFd,UAII,cAAC,EAAD,CACIF,MAAM,aACNM,KAAK,kBACLmD,GAAG,kBACHpG,KAAK,SACLkE,MAAO5E,EAAKyQ,WACZrJ,UAAQ,IAGZ,cAAC,EAAD,CACI/D,MAAM,qBACNM,KAAK,oBACLmD,GAAG,oBACHlC,MAAO5E,EAAK0Q,mBACZtJ,UAAQ,IAGZ,cAAC,EAAD,CACI/D,MAAM,sBACNM,KAAK,sBACLmD,GAAG,sBACHlC,MAAO5E,EAAK2Q,iBACZvJ,UAAQ,IAEZ,sBAAK7D,UAAU,mBAAf,UACI,cAAC,EAAD,CACIF,MAAM,aACNQ,QAAQ,wBACRN,UAAU,+CACV7C,KAAK,SACLoD,QAASgqB,IAEb,cAAC,EAAD,CAAYzqB,MAAM,kBCyCvB2qB,GA9EO,SAAC,GAAgC,IAA9BtQ,EAA6B,EAA7BA,OAAQ1d,EAAqB,EAArBA,KACvBiuB,GAD4C,EAAfC,SAE8B,KAA7DluB,EAAgB,SAAX0d,EAAoB,aAAe,WAAW9Y,OACvD,EAA4BuK,mBAAS8e,GAArC,oBAAOnS,EAAP,KAAeqS,EAAf,KACMvU,EAAWwC,YAAa4F,KAAKC,MAAMD,KAAKE,UAAUliB,EAAK4E,SAEvDwpB,EAAU,uCAAG,WAAO/pB,GAAP,6BAAAuF,EAAA,6DAAUykB,EAAV,gCACfhqB,EAAEC,iBADa,SAEUmpB,GACrBS,EACAxQ,EACA9D,EAASpU,OALE,gBAOf8G,GAAO,CACHlM,OARW,EAEPA,OAOJmM,QAAS,oBACTC,WAAwB,0BACCkR,EADb2Q,EAAY,2EAGxB3hB,gBANG,WAOC1M,EAAK4F,IAAIoc,KAAKC,MAAMD,KAAKE,UAAUtI,EAAShV,SACxCypB,GAAcF,GAAU,MAfrB,2CAAH,sDAoBVG,EAAmB,SAACjqB,IAIH,IAHAmH,OAAOoP,QACtB,qDAGW,SAAX8C,GACA9D,EAASnJ,WAAW7K,IAAI,IACxBgU,EAASlJ,mBAAmB9K,IAAI,IAChCgU,EAASjJ,iBAAiB/K,IAAI,MAE9BgU,EAAS/I,QAAQjL,IAAI,IACrBgU,EAAS2U,gBAAgB3oB,IAAI,IAC7BgU,EAAS7I,UAAUnL,IAAI,KAE3BwoB,EAAW/pB,GAAG,KAGlB,OACI,mCACKyX,EACc,SAAX4B,EACI,cAAC,GAAD,CACI1d,KAAM4Z,EACNiU,OAAQO,EACRN,aAAcQ,IAGlB,cAAC,GAAD,CACItuB,KAAM4Z,EACNiU,OAAQO,EACRN,aAAcQ,IAItB,qBAAI/qB,UAAU,4EAAd,UACgB,SAAXma,EAAoB,OAAS,WADlC,KACgD,IAC5C,kDACA,wBACIhd,KAAK,SACLoD,QAAS,WACLqqB,GAAU,IAEd5qB,UAAU,2GALd,4BCSLirB,GAxEQ,SAAC,GAAuD,IAAD,IAApDxuB,KAAQ8G,EAA4C,EAA5CA,GAAIsJ,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,cAC9CuJ,EAAWwC,YAAa,CAC1BhM,iBAAkBA,EAAiBxL,MACnCyL,cAAeA,EAAczL,QAIjCiK,qBAAU,YACkC,IAApC+K,EAASxJ,iBAAiBxL,OAC1BgV,EAASvJ,cAAczK,IAAI,KAEhC,CAACgU,EAASxJ,iBAAiBxL,QAE9B,IAAMwpB,EAAU,uCAAG,WAAO/pB,GAAP,eAAAuF,EAAA,6DACfvF,EAAEC,iBADa,SAE4BwC,EAAGlC,MLhBhB5E,EKgBuB,CACjDoQ,iBAAkBwJ,EAASxJ,iBAAiBxL,MAC5CyL,cAAeuJ,EAASvJ,cAAczL,OLjBvC0E,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,MKapB,gBAOfkM,GAAO,CACHlM,OARW,EAEPA,OAOJmM,QAAS,8BACTC,WAAW,4BAAD,OACNoN,EAASxJ,iBAAiBxL,MAA1B,+BAC8BgV,EAASvJ,cAAczL,MADrD,QAEM,WAHA,kBAKV8H,gBARG,WASC0D,EAAiBxK,IAAIgU,EAASxJ,iBAAiBxL,OAC/CyL,EAAczK,IAAIgU,EAASvJ,cAAczL,UAjBlC,iCLdU,IAAK5E,IKcf,OAAH,sDAsBhB,OACI,uBAAMoE,SAAUgqB,EAAY7qB,UAAU,wBAAtC,UACI,cAAC,EAAD,CACIA,UAAU,gBACVuD,GAAG,mBACHzD,MAAM,8BACNM,KAAK,mBACLjD,KAAK,QACLkE,MAAOgV,EAASxJ,iBAChBnL,cAAY,EACZJ,QAAS,CACL,CACIxB,MAAO,uBACPuB,OAAO,GAEX,CACIvB,MAAO,KACPuB,OAAO,MAInB,cAAC,EAAD,CACIvB,MAAM,sBACNM,KAAK,gBACLmD,GAAG,gBACHpG,KAAK,SACL+F,UAAWmT,EAASxJ,iBAAiBxL,MACrCA,MAAOgV,EAASvJ,gBAGpB,qBAAK9M,UAAU,aAAf,SACI,cAAC,EAAD,CAAYF,MAAM,eCsDnBorB,GAtHiB,SAAC,GAAc,IAAZzuB,EAAW,EAAXA,KACzB4Z,EAAWwC,YAAa4F,KAAKC,MAAMD,KAAKE,UAAUliB,EAAK4E,SAC7D,OACI,uBACIR,SAAQ,uCAAE,WAAOC,GAAP,eAAAuF,EAAA,6DACNvF,EAAEC,iBADI,SAEmBopB,GAAuB1tB,EAAK8G,GAAGlC,MAAO,CAC3DjB,KAAMiW,EAASjW,KAAKiB,MACpBiL,OAAQ+J,EAAS/J,OAAOjL,MACxBkL,cAAe8J,EAAS9J,cAAcpJ,KAClC,SAACqH,GAAD,OAASA,EAAInJ,SAEjBmL,QAAS6J,EAAS7J,QAAQnL,MAC1BiE,MAAO+Q,EAAS/Q,MAAMjE,MACtBkE,KAAM8Q,EAAS9Q,KAAKlE,MACpBmE,QAAS6Q,EAAS7Q,QAAQnE,QAXxB,gBAaN0H,GAAO,CACHlM,OAdE,EAEEA,OAaJmM,QAAS,oBACTC,WACI,sDACJE,gBALG,WAMC1M,EAAK4F,IAAIoc,KAAKC,MAAMD,KAAKE,UAAUtI,EAAShV,YAnB9C,2CAAF,sDADZ,UAyBI,sBAAKrB,UAAU,kCAAf,UACI,cAAC,EAAD,CACIA,UAAU,2BACVF,MAAM,gBACNM,KAAK,gBACLmD,GAAG,IACHlC,MAAOgV,EAASjW,KAChByD,UAAQ,IAEZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,cACNM,KAAK,cACLmD,GAAG,IACHlC,MAAOgV,EAAS/J,OAChBzI,UAAQ,IAEZ,cAAC,GAAD,CACI7D,UAAU,2BACVF,MAAM,iBACNM,KAAK,iBACLmD,GAAG,IACHlC,MAAOgV,EAAS9J,cAAc,GAC9B1I,UAAQ,IAEZ,cAAC,GAAD,CACI7D,UAAU,2BACVF,MAAM,iBACNM,KAAK,iBACLmD,GAAG,IACHlC,MAAOgV,EAAS9J,cAAc,KAElC,cAAC,EAAD,CACIvM,UAAU,2BACVF,MAAM,iBACNM,KAAK,QACLjD,KAAK,QACLoG,GAAG,IACHlC,MAAOgV,EAASlR,MAChB4G,YAAY,kBAEhB,cAAC,EAAD,CACI/L,UAAU,2BACVF,MAAM,mBACNM,KAAK,UACLjD,KAAK,MACLoG,GAAG,IACHlC,MAAOgV,EAAS7J,QAChBT,YAAY,kCAEhB,cAAC,EAAD,CACI/L,UAAU,gBACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAOgV,EAAS/Q,MAChBhE,QAAS,CAAC,CAAExB,MAAO,WAAYuB,MAAO,eAE1C,cAAC,EAAD,CACIrB,UAAU,gBACVF,MAAM,OACNM,KAAK,OACLmD,GAAG,KACHpG,KAAK,SACLmE,Q7FhET,CACH,CAAExB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,QAASuB,MAAO,U6F8DbA,MAAOgV,EAAS9Q,KAChBwG,YAAY,sBAEhB,cAAC,EAAD,CACI/L,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,KACHlC,MAAOgV,EAAS7Q,QAChBuG,YAAY,yBAEhB,cAAC,GAAD,CACIjM,MAAM,sBACNE,UAAU,2BACVwQ,YAAa,CAAE/D,IAAK4J,EAAS5J,IAAKC,IAAK2J,EAAS3J,UAGxD,qBAAK1M,UAAU,kBAAf,SACI,cAAC,EAAD,CAAYF,MAAM,uBCdnBqrB,GA7FU,WACrB,IAAQvsB,EAAmBgN,YAASjM,GAA5Bf,eACFwsB,EAAYxf,YAAShN,EAAemO,IAAI1L,OAC9C,OACI,qCACI,cAAC,GAAD,CAAejB,KAAK,oBAAoBE,QAAQ,gBAChD,sBAAKN,UAAU,uEAAf,UACI,cAAC,GAAD,CACIF,MAAM,uBACNE,UAAU,aACV+pB,iBAAiB,kBAHrB,SAKI,cAAC,GAAD,CAAyBttB,KAAMmC,MAGnC,kCACI,eAAC,GAAD,CACIkB,MAAM,sBACNiqB,iBAAiB,kBAFrB,UAII,eAAC,EAAD,CAAM/pB,UAAU,eAAhB,UACI,2CADJ,yHAKA,cAAC,GAAD,CACI2qB,SAAU/rB,EAAe2E,GAAGlC,MAC5B8Y,OAAO,OACP1d,KAAMmC,EAAeoO,gBAAgBC,OAEzC,cAAC,GAAD,CACI0d,SAAU/rB,EAAe2E,GAAGlC,MAC5B8Y,OAAO,WACP1d,KAAMmC,EAAeoO,gBAAgBK,cAI7C,eAAC,GAAD,CAASvN,MAAM,aAAaE,UAAU,mBAAtC,UACI,eAAC,EAAD,CAAMA,UAAU,gBAAhB,UACI,2CADJ,4EAIA,uBACIa,SAAQ,uCAAE,WAAOC,GAAP,eAAAuF,EAAA,6DACNvF,EAAEC,iBADI,SPvDLtE,OOyDwB4uB,EPxD9CtlB,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,MOsDL,gBAGNkM,GAAO,CACHlM,OAJE,EAEEA,OAGJmM,QAAS,4BACTC,WACI,4CACJE,gBALG,WAMCvK,EAAemO,IAAI1K,KACd+oB,EAAU/pB,UAVjB,iCPvDV,IAAK5E,IOuDK,OAAF,sDAeRuD,UAAU,WAhBd,UAkBI,cAAC,EAAD,CACIF,MAAM,mBACNM,KAAK,MACLmD,GAAG,eACHlC,MAAO+pB,EACPjuB,KAAK,SACLyL,IAAI,MAER,qBAAK5I,UAAU,kBAAf,SACI,cAAC,EAAD,CAAYF,MAAM,iBAK9B,eAAC,GAAD,CACIA,MAAM,kBACNE,UAAU,mBAFd,UAII,eAAC,EAAD,CAAMA,UAAU,gBAAhB,UACI,2CADJ,iNAOA,cAAC,GAAD,CAAgBvD,KAAMmC,iBC1FxCR,GAAe,CACjBktB,YAAa,GACbC,gBAAiB,GACjBC,YAAa,IA6DFC,GA1DY,WACvB,IAAQ/sB,EAAema,YAAalZ,GAA5BjB,WACF2X,EAAWwC,YAAa,eAAKza,KAEnC,OACI,eAAC,GAAD,CACI4B,UAAU,eACVa,SAAQ,sBAAE,4BAAAwF,EAAA,sEAEF3H,EAAW6E,GAAGlC,MhGmCC5E,EgGlCf4Z,EAAShV,MhGmCzBqqB,QAAQC,IAAIlvB,GACLsJ,QAAQC,QAAQ,CAAEvJ,OAAMI,OAAQ,MgGvCrB,gBAKNkM,GAAO,CACHlM,OANE,EACEA,OAMJmM,QAAS,uBACTC,WAAY,+CACZE,gBAJG,WAKCkN,EAAShU,IAAT,eACOjE,QAXT,iChGqCQ,IAAK3B,IgGrCb,OAgBV6hB,YAAa,CACT,CACIxe,MAAO,kBACPQ,QAAS,wBArBrB,UAyBI,cAAC,GAAD,CACIN,UAAU,gBACVqB,MAAOgV,EAASiV,YAChBvf,YAAY,8BAGhB,cAAC,GAAD,CACI/L,UAAU,gBACVF,MAAM,mBACNM,KAAK,mBACLmD,GAAG,mBACHlC,MAAOgV,EAASkV,gBAChBtf,aAAcoK,EAASiV,YAAYjqB,MACnC0K,YAAY,sCAGhB,cAAC,GAAD,CACI/L,UAAU,gBACVF,MAAM,eACNM,KAAK,eACLmD,GAAG,eACHlC,MAAOgV,EAASmV,YAChBzf,YAAY,kCC6Db6f,GAxHiB,SAAC,GAAqB,IAAbtmB,EAAY,EAAlB7I,KACzB4U,EAAYzF,YAAS6S,KAAKC,MAAMD,KAAKE,UAAUrZ,EAAMjE,SAG3D,OAFAxB,YAASwR,GAAWvR,MAAM,mCAGtB,eAAC,GAAD,CACIE,UAAU,yBACVa,SAAQ,sBAAE,4BAAAwF,EAAA,sEACmBc,EAAW7B,EAAMrD,OADpC,gBAEN8G,GAAO,CACHlM,OAHE,EACEA,OAGJmM,QAAS,kCACTC,WACI,2DACJE,gBALG,WAMC7D,EAAMjD,IAAIoc,KAAKC,MAAMD,KAAKE,UAAUtN,EAAUhQ,YARhD,2CAFd,UAeI,cAAC,EAAD,CACIrB,UAAU,2BACVF,MAAM,aACNM,KAAK,aACLmD,GAAG,IACHlC,MAAOgQ,EAAUrM,WACjB+G,YAAY,qBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,YACNM,KAAK,YACLmD,GAAG,IACHlC,MAAOgQ,EAAUpM,UACjB8G,YAAY,oBACZlI,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,WACNM,KAAK,WACLmD,GAAG,IACHlC,MAAOgQ,EAAUnM,SACjB6G,YAAY,mBACZ7I,UAAQ,EACRW,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,QACLoG,GAAG,IACHlC,MAAOgQ,EAAUlM,MACjB4G,YAAY,gBACZlI,UAAQ,IAGZ,cAAC,GAAD,CACI7D,UAAU,2BACVuD,GAAG,IACHlC,MAAOgQ,EAAUhM,eAGrB,cAAC,EAAD,CACIrF,UAAU,2BACVuD,GAAG,IACHzD,MAAM,SACNM,KAAK,SACLjD,KAAK,QACLkE,MAAOgQ,EAAUjM,OACjB9D,QAAS,CACL,CACIxB,MAAO,OACPuB,MAAO,KAEX,CACIvB,MAAO,SACPuB,MAAO,QAKnB,cAAC,EAAD,CACIrB,UAAU,2BACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAOgQ,EAAU/L,MACjBhE,QAAS,CAAC,CAAExB,MAAO,WAAYuB,MAAO,eAG1C,cAAC,EAAD,CACIrB,UAAU,2BACVF,MAAM,OACNM,KAAK,OACLmD,GAAG,KACHlC,MAAOgQ,EAAU9L,KACjBpI,KAAK,SACLmE,QhG1EL,CACH,CAAExB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,QAASuB,MAAO,UgGwEjB0K,YAAY,sBAGhB,cAAC,EAAD,CACI/L,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,KACHlC,MAAOgQ,EAAU7L,QACjBuG,YAAY,6BCvFb8f,GA3BS,WACpB,IAAQntB,EAAema,YAAalZ,GAA5BjB,WACR,OACI,qCACI,cAAC,GAAD,CAAe0B,KAAK,mBAAmBE,QAAQ,oBAC/C,sBAAKN,UAAU,uEAAf,UACI,cAAC,GAAD,CACIF,MAAM,uBACNE,UAAU,aACV+pB,iBAAiB,2BAHrB,SAKI,cAAC,GAAD,CAAyBttB,KAAMiC,MAGnC,gCACI,cAAC,GAAD,CACIoB,MAAM,uBACNiqB,iBAAiB,2BAFrB,SAII,cAAC,GAAD,e,SCyElB+B,GAAa,SAAC,GAA0B,IAAxBlmB,EAAuB,EAAvBA,OAAQsJ,EAAe,EAAfA,SACpB6c,GAAanmB,EAAO8N,MAAMzR,MAAQ,EACxC,OACI,oBAAIjC,UAAU,2BAAd,SACI,yBACIO,QAASwrB,GAAa7c,EACtBlP,UAAS,qCACL+rB,EACM,oBACA,uDALd,UAQI,+BAAOnmB,EAAOxF,KAAK6B,QACnB,oBAAGjC,UAAU,0CAAb,UACI,+BAAO4F,EAAOlG,KAAKuC,QACnB,sBACIjC,UAAS,2CACL+rB,EAAY,aAAe,YAFnC,SAKKA,EAAY,WAAa,0BAQnCC,GA3HQ,SAAC,GAMjB,IAAD,MALFlsB,aAKE,MALM,kBAKN,MAJFiM,mBAIE,MAJY,GAIZ,MAHF/L,iBAGE,MAHU,GAGV,EAFFZ,EAEE,EAFFA,SACAiC,EACE,EADFA,MAEA,EAA8BuK,oBAAS,GAAvC,oBAAOrC,EAAP,KAAgB0iB,EAAhB,KACM1M,EAAgB1G,YAAalZ,EAAMX,OAAOE,UAAUzC,MAC1D,EAAkCmP,mBAAS,IAA3C,oBAAOsgB,EAAP,KAAkBC,EAAlB,KAEA,OACI,sBAAKnsB,UAAS,iDAA4CA,GAA1D,UACI,uBAAOwD,QAAS1D,EAAOE,UAAU,OAAjC,SACKF,IAEL,0BACIyD,GAAIzD,EACJE,UAAU,4FACV7C,KAAK,SACL4O,YAAaA,GAJjB,sBAKS,UALT,8BAMiB,OANjB,uBAOW1K,EAAMY,OAPjB,0BAQa,WACLgqB,GAAW,MATnB,2BAWc,YAAiB,IAAd9pB,EAAa,EAAbA,OACTd,EAAMgB,IAAIF,EAAOd,OACjB8qB,EACI5M,EAAcpZ,QAAO,SAAC0E,GAClB,OAKe,IAJXA,EAAKzK,KACA6B,MACAtF,OACG,IAAImgB,OAAJ,UAAc3a,EAAOd,OAAS,UAKlD4qB,GAAW,MAxBnB,IA2BA,mBAAGjsB,UAAU,oFACI,KAAhBqB,EAAMY,OACH,qBAAKjC,UAAU,6FAAf,SACKuJ,EACG,cAAC,GAAD,CACIzJ,MAAM,YACNE,UAAU,uBAEdksB,EAAU7vB,OACV,6BACK6vB,EAAU/oB,KAAI,SAACyC,GAAD,OACX,cAAC,GAAD,CACIA,OAAQA,EACRsJ,SAAU,WACN9P,EAASiD,KAAI,SAAC+pB,GACV,IAAIC,GAAe,EAWnB,OAVAD,EAAQzc,SAAQ,SAAC9E,IAERA,EAAKtH,MACLqC,EAAOrC,GAAGtB,QAEP4I,EAAK6I,MAAQ7I,EAAKgK,KAClBhK,EAAKgK,MACTwX,GAAe,MAGhBA,EACDD,EADa,4BAIFxmB,EAAO3D,OAJL,IAKL4S,IAAK,KALA,oBAONuX,OAGjB/qB,EAAMgB,IAAI,YAM1B,sBAAMrC,UAAU,wBAAhB,mCChCTssB,GArDW,SAAC,GAAwC,IAAtChtB,EAAqC,EAArCA,QAASitB,EAA4B,EAA5BA,YAAa/sB,EAAe,EAAfA,SAC/C,EAAyBqZ,YAAa,CAClCpZ,OAAQD,EAASC,OAAOwC,MACxBvC,KAAMF,EAASE,KAAKuC,QAFhBxC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,KAIhB,OACI,eAAC,GAAD,CACIwL,MAAM,kBACN5K,QAAQ,iBACRgP,MAAO,CAAEkd,SAAU,MAAO3V,MAAO,KACjCvR,MAAOhG,EACPgf,YAAa,CACT,CACIxe,MAAO,iBACPQ,QAAS,KAGjBN,UAAU,2CACVa,SAAU,WACNrB,EAAS6C,IAAI,CACT5C,OAAQA,EAAOwC,MACfvC,KAAMA,EAAKuC,QAEf3C,EAAQ+C,KAAI,IAjBpB,UAoBI,cAAC,EAAD,CACIrC,UAAU,aACVF,MAAM,kBACNM,KAAK,kBACLmD,GAAG,kBACHpG,KAAK,SACLkE,MAAO5B,EACPoJ,IAAoB,MAAfnJ,EAAKuC,MAAgB,IAAMsqB,EAChC3jB,IAAI,MAGR,cAAC,EAAD,CACI5I,UAAU,aACVF,MAAM,OACNM,KAAK,gBACLmD,GAAG,gBACHpG,KAAK,SACLkE,MAAO3B,EACP4B,QAAS,CACL,CAAExB,MAAO,MAAOuB,MAAO,OACvB,CAAEvB,MAAO,IAAKuB,MAAO,YCgH1BorB,GAzJM,SAAC,GAAiC,IAA/BrtB,EAA8B,EAA9BA,SAAUI,EAAoB,EAApBA,SAAUuN,EAAU,EAAVA,IAClC2f,EAAe7T,YAAa,CAC9BvZ,SAAS,EACT7C,KAAM,KAEJkwB,EAAsB9T,aAAa,GACjCna,EAAema,YAAalZ,GAA5BjB,WAEJkuB,EAAa,EACbC,EAAc,EAElBztB,EAASuQ,SAAQ,SAAC9E,GACd+hB,IAAe/hB,EAAKgK,IAAI5S,MACxB4qB,GAAehiB,EAAKgK,IAAI5S,MAAQ4I,EAAK2I,MAAMvR,SAIvB,IAApB7C,EAAS/C,QAA0C,IAA1BmD,EAASC,OAAOwC,OACzCzC,EAASC,OAAO4C,IAAI,GAExB,IAAIyqB,EAAqB,EACrBC,EAAQ,EACRC,EAAuB,EAe3B,MAb4B,MAAxBxtB,EAASE,KAAKuC,OACd6qB,GAAsBttB,EAASC,OAAOwC,MACtC+qB,EAAwBH,EAAcrtB,EAASC,OAAOwC,MAAS,IAC/D8qB,EAAQF,EAAcG,EAAuBjgB,EAAI9K,QAEjD6qB,EAAsBttB,EAASC,OAAOwC,MAAQ4qB,EAAe,KAAO,EACpEG,GAAwBxtB,EAASC,OAAOwC,MACxC8qB,EAAQF,EAAcG,EAAuBjgB,EAAI9K,OAIjD+qB,EAAuBH,GAAartB,EAASC,OAAO4C,IAAIwqB,GAGxD,qCACI,qBAAI7sB,UAAU,gFAAd,UACI,mBAAGA,UAAU,iDACb,oDAEJ,sBAAKA,UAAU,0CAAf,UACI,oBAAGA,UAAU,4BAAb,UACI,kDAAqB4sB,EAArB,OACA,iCAAOC,EAAP,aAEJ,oBAAG7sB,UAAU,4BAAb,UACI,8CACe8sB,EAAmBhiB,QAAQ,GAD1C,KAEI,wBACII,MAAM,wBACNlL,UAAU,yFACVO,QAAS,WACLosB,EAAoBtqB,KAAI,SAIpC,sCAAS2qB,EAAT,aAEJ,oBAAGhtB,UAAU,0CAAb,UACI,uCACA,sCAAS+M,EAAI9K,MAAb,aAEJ,oBAAGjC,UAAU,2FAAb,UACI,yCACA,uBAAMA,UAAU,eAAhB,UAAgC+sB,EAAhC,gBAGR,qBAAK/sB,UAAU,gCAAf,SACyB,IAApBZ,EAAS/C,QACN,qCACI,cAAC,EAAD,CACI2D,UAAU,4DACVF,MAAM,oBACNQ,QAAQ,iBACRC,QAAO,sBAAE,8BAAA8F,EAAA,sEAC0B4O,GAAS,CACpC9X,KAAM,QACNN,OAAQ,WACR2X,WAAY,CACRjR,GAAI7E,EAAW6E,GAAGtB,MAClB7B,KAAK,GAAD,OAAK1B,EAAWsG,WAAW/C,MAA3B,YAAoCvD,EAAWuG,UAAUhD,QAEjEwS,MAAM,IAAIxU,MAAO4G,SACjBzH,SAAUA,EAAS+D,KACf,gBAAGI,EAAH,EAAGA,GAAIiQ,EAAP,EAAOA,MAAOqB,EAAd,EAAcA,IAAKzU,EAAnB,EAAmBA,KAAnB,MAA+B,CAC3BmD,GAAIA,EAAGtB,MACP7B,KAAMA,EAAK6B,MACXuR,MAAOA,EAAMvR,MACb4S,IAAKA,EAAI5S,UAGjB6S,gBAAiB+X,EACjBrtB,SAAUwtB,EACVjgB,IAAKA,EAAI9K,QAnBR,gBACGxF,EADH,EACGA,KAqBRsM,GAAO,CACHlM,OAvBC,EACSA,OAuBVmM,QAAS,sBACTC,WACI,uCACJE,gBALG,WAMCujB,EAAajwB,KAAK4F,IAAI5F,GACtBiwB,EAAaptB,QAAQ+C,KAAI,GAGzB,sBAAC,8BAAAgE,EAAA,sEAEa2O,KAFb,gBACiBiY,EADjB,EACWxwB,KAERkD,EAAMX,OAAOpB,OAAOnB,KAAK4F,IACrB4qB,GAJP,0CAAD,MAhCH,6CA4Cb,cAAC,EAAD,CACIjtB,UAAU,2CACVF,MAAM,mBACNQ,QAAQ,wBACRC,QAAS,WACLnB,EAASiD,IAAI,YAOjC,cAAC,GAAD,CACIiD,MAAOonB,EAAaptB,QACpBgB,QAAQ,sBACR4K,MAAK,gBACL6T,QAAS,WACL3f,EAASiD,IAAI,KALrB,SAQI,cAAC,GAAD,CAAc5F,KAAMiwB,EAAajwB,KAAKwF,UAG1C,cAAC,GAAD,CACI3C,QAASqtB,EACTJ,YAAaM,EACbrtB,SAAUA,QCxEpB6a,GAAU,CACZ,CACInP,MAAO,wBACPwP,SAAU,KACVc,QAAS,gBAAGpb,EAAH,EAAGA,KAAMkT,EAAT,EAASA,MAAO5T,EAAhB,EAAgBA,KAAM6D,EAAtB,EAAsBA,GAAtB,EAA0BsX,OAA1B,EAAkCa,WAAlC,OACL,cAAC,GAAD,CACItb,KAAMA,EAAKiB,MACXiS,MAAOA,EAAMjS,MACb3B,KAAMA,EAAK2B,MACXkC,GAAIA,MAIhB,CAAE2H,MAAO,QAASgP,KAAM,SACxB,CAAEhP,MAAO,QAASgP,KAAM,SACxB,CAAEhP,MAAO,WAAYgP,KAAM,YAC3B,CAAEhP,MAAO,cAAegP,KAAM,eAC9B,CACIhP,MAAO,MACP2L,MAAO,GACP2E,QAAS,YAAmC,IAAhCjY,EAA+B,EAA/BA,GAAIsR,EAA2B,EAA3BA,IAAenB,GAAY,EAAtBC,SAAsB,EAAZD,OAE3B,OADAgY,QAAQwB,IAAI,QAAS3pB,EAAGtB,OAEpB,cAAC,EAAD,CACIsB,GAAIA,EAAGtB,MACP7B,KAAI,cAASmD,EAAGtB,OAChB9E,KAAK,SACLkE,MAAOwT,EACPhM,IAAK6K,EAAMzR,MACX2G,IAAI,QAKpB,CACIsC,MAAO,WACPsQ,QAAS,YAAqB,IAAlBhI,EAAiB,EAAjBA,MAAOqB,EAAU,EAAVA,IACf,OAAO,mCAASrB,EAAMvR,MAAQ4S,EAAI5S,MAA3B,YAGf,CACIiJ,MAAO,GACPsQ,QAAS,gBAAGjY,EAAH,EAAGA,GAAH,OACL,cAAC,GAAD,CACIqa,SAAU,kBACNje,EAAMJ,IAAIH,SAASiD,KAAI,SAAC+T,GACpB,OAAOA,EAAEjQ,QAAO,SAAC0E,GAAD,OAAUA,EAAKtH,KAAOA,EAAGlC,kBAQlD8rB,GA/HK,WAChB,IAAMC,EAAcvU,YAAa,IACjC,EAA+BA,YAAalZ,EAAMJ,KAA1CC,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,SACZgU,EAAiByF,YAAalZ,EAAMX,OAAOE,UAAUzC,MACnDsQ,EAAQ8L,YAAalZ,EAAMf,gBAA3BmO,IA8BR,OA5BAzB,qBAAU,WACN,IAAIkU,EAAmB,GACvBvX,OAAOwX,WAAa,YAAuB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAC5B,GAAgB,KAAZD,EAAgB,CAChB,IAAM1J,EAAU5C,EAAevN,MAC3B,qBAAGwN,QAAsBpR,QAAUud,KAEnCxJ,GACA5W,EAASiD,KAAI,SAAC+pB,GACV,IAAIC,GAAe,EAOnB,OANAD,EAAQzc,SAAQ,SAAC9E,IACRA,EAAKtH,MAAQyS,EAAQzS,GAAGlC,QACrBwJ,EAAK6I,MAAQ7I,EAAKgK,KAAKhK,EAAKgK,MAChCwX,GAAe,MAGhBA,EACDD,EADa,4BAEPpW,EAAQ/T,OAFD,IAEQ4S,IAAK,KAFb,oBAEqBuX,OAGhD5M,EAAmB,QAEnBA,GAAoBG,KAG7B,IAGC,qCACI,cAAC,GAAD,CACIvf,KAAK,gBACLE,QAAQ,yBAEZ,sBAAKN,UAAU,yBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,4CAAf,UACI,cAAC,GAAD,CACIA,UAAU,gBACVF,MAAM,kBACNiM,YAAY,iCACZ3M,SAAUA,EACViC,MAAO+rB,IAEX,eAAC,EAAD,WACI,2CADJ,eACuC,IACnC,mBAAGptB,UAAU,mBAFjB,4DAMJ,qBAAKA,UAAU,OAAf,SACI,cAAC,GAAD,CAAWvD,KAAM2C,EAAUib,QAASA,UAI5C,yBAASra,UAAU,aAAnB,SACI,cAAC,GAAD,CACIZ,SAAUA,EACVI,SAAUA,EACVuN,IAAKA,aC5DdsgB,GAjBW,CACtB5wB,KAAM,CACF8G,GAAI,GACJnD,KAAM,GACNkM,OAAQ,GACRC,cAAe,CAAC,GAAI,IACpBpH,MAAO,GACPqH,QAAS,GACTlH,MAAO,WACPC,KAAM,GACNC,QAAS,GACTiH,IAAK,QACLC,IAAK,SAETmS,OAAQ,ICgPGyO,GA5OW,SAAC,GAA8B,IAA5BhO,EAA2B,EAA3BA,UAAWjO,EAAgB,EAAhBA,UAChC/L,EAAQsG,YAAS,CACjBnP,KAAK,eAAM4wB,GAAkB5wB,MAC7BoiB,OAAO,eAAMwO,GAAkBxO,UAEnC,EAAyDjT,YAASjM,GAAxC4tB,EAA1B,EAAQ5uB,iBAAkCD,EAA1C,EAA0CA,WACpCjC,EAAiB6I,EAAjB7I,KAAiB6I,EAAXuZ,OACZhf,YAASyF,GAAOxF,MAAM,uBACtB,IAAM0tB,EAAYnc,GAAkC,YAArBA,EAAUxU,OACnC4wB,EAAkB7hB,aAAS,GA+BjC,OA7BAN,qBAAU,WACN7O,EAAK4F,IACDgP,EACMoN,KAAKC,MAAMD,KAAKE,UAAUtN,IADvB,2BAGIgc,GAAkB5wB,MAHtB,IAIC4P,YAAa5P,EAAK4P,YAAYpK,MAC9B7B,KAAM3D,EAAK2D,KAAK6B,MAChBuK,QAAS/P,EAAK+P,QAAQvK,MACtBkD,MAAO1I,EAAK0I,MAAMlD,MAClBsK,cAAe,CAAC,GAAI,SAGnC,CAAC8E,IAEJ/F,qBAAU,WACN,sBAAC,8BAAAjF,EAAA,0DACiC,IAA1BonB,EAAgBpsB,MADvB,0EAGiDgN,GACtC1O,EAAMjB,WAAW6E,GAAGtB,OAJ/B,gBAGqByrB,EAHrB,EAGejxB,KAGR6I,EAAM7I,KAAK6a,MAAMoW,GANxB,kDAQOD,EAAgBprB,KAAI,GAR3B,yDAAD,KAWD,CAACorB,EAAgBpsB,QAGhB,eAAC,GAAD,CACI6J,MAAM,0BACN5F,MAAOga,EACPtf,UAAU,wDACVse,YACIjN,GAAkC,YAArBA,EAAUxU,OACjB,GACA,CACI,CACIiD,MAAOuR,EACD,gCACA,sBACN/Q,QAAS+Q,EACH,cACA,gBAIxBxQ,SAAQ,sBAAE,8BAAAwF,EAAA,6DACAsnB,EAAWtc,GAAkC,aAArBA,EAAUxU,OADlC,SAGoB8wB,EACpBlgB,GAAqBhR,EAAKwF,OAC1BwrB,EAAgBpsB,MAChB0M,GAAYtR,EAAKwF,MAAO,CACpBsB,GAAI7E,EAAW6E,GAAGtB,MAClB7B,KAAK,GAAD,OAAK1B,EAAWsG,WAAW/C,MAA3B,YAAoCvD,EAAWuG,UAAUhD,SAEjEiM,GAAkBzR,EAAKwF,OAVvB,gBAYN8G,GAAO,CACHlM,OAbE,EAGEA,OAWJoM,WAAY0kB,EACN,yDACA,mDACNxkB,gBAAgB,WAAD,4BAAE,8BAAA9C,EAAA,6DAEb5J,EAAK4F,IAAL,2BACOgrB,GAAkB5wB,MADzB,IAEI4P,YAAa5P,EAAK4P,YAAYpK,MAC9B7B,KAAM3D,EAAK2D,KAAK6B,MAChBuK,QAAS/P,EAAK+P,QAAQvK,MACtBkD,MAAO1I,EAAK0I,MAAMlD,MAClBsK,cAAe,CAAC,GAAI,QAGM,IAA1BkhB,EAAgBpsB,OAChBosB,EAAgBprB,KAAI,GAZX,SAiBH8L,GACFxO,EAAMjB,WAAW6E,GAAGtB,OAlBf,gBAgBC2rB,EAhBD,EAgBLnxB,KAIR8wB,EAAelrB,IAAIurB,GAGnBtO,EAAUjd,KAAI,GAvBD,2CAAF,kDAAC,KAjBd,2CAlBd,UA+DKgP,GACG,cAAC,EAAD,CAAMrR,UAAU,gBAAhB,SAC0B,aAArBqR,EAAUxU,OACP,qCACI,2CADJ,sOAQA,qCACI,2CADJ,mJAUZ,cAAC,EAAD,CACImD,UAAU,2BACVF,MAAM,gBACNM,KAAK,OACLmD,GAAG,IACHlC,MAAO5E,EAAK2D,KACZ2L,YAAY,wBACZ7I,UAAoC,IAA1BuqB,EAAgBpsB,MAC1BwC,UAAQ,IAGZ,cAAC,EAAD,CACI7D,UAAU,2BACVF,MAAM,cACNM,KAAK,SACLmD,GAAG,IACHlC,MAAO5E,EAAK6P,OACZP,YAAY,sBACZlI,UAAoC,IAA1B4pB,EAAgBpsB,MAC1B6B,SAAUsqB,IAGd,cAAC,GAAD,CACIxtB,UAAU,2BACVF,MAAM,iBACNM,KAAK,iBACLmD,GAAG,IACHlC,MAAO5E,EAAK8P,cAAc,GAC1BrJ,SAAUsqB,EACV3pB,UAAQ,IAGZ,cAAC,GAAD,CACI7D,UAAU,2BACVF,MAAM,iBACNM,KAAK,iBACLmD,GAAG,IACHlC,MAAO5E,EAAK8P,cAAc,GAC1BrJ,SAAUsqB,IAGd,cAAC,EAAD,CACIxtB,UAAU,2BACVF,MAAM,QACNM,KAAK,QACLmD,GAAG,IACHpG,KAAK,QACLkE,MAAO5E,EAAK0I,MACZ4G,YAAY,yBACZ7I,SAAUsqB,IAGd,cAAC,EAAD,CACIxtB,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHpG,KAAK,MACLkE,MAAO5E,EAAK+P,QACZT,YAAY,2BACZ7I,SAAUsqB,IAGd,cAAC,EAAD,CACIxtB,UAAU,2BACVF,MAAM,QACNM,KAAK,QACLjD,KAAK,SACLoG,GAAG,IACHlC,MAAO5E,EAAK6I,MACZhE,QAAS,CAAC,CAAExB,MAAO,WAAYuB,MAAO,aACtCwC,UAAQ,EACRX,SAAUsqB,IAGd,cAAC,EAAD,CACIxtB,UAAU,2BACVF,MAAM,OACNM,KAAK,OACLmD,GAAG,IACHpG,KAAK,SACLmE,QvG1LL,CACH,CAAExB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,WAAYuB,MAAO,YAC5B,CAAEvB,MAAO,QAASuB,MAAO,UuGwLjBA,MAAO5E,EAAK8I,KACZwG,YAAY,oBACZlI,UAAQ,EACRX,SAAUsqB,IAGd,cAAC,EAAD,CACIxtB,UAAU,2BACVF,MAAM,UACNM,KAAK,UACLmD,GAAG,IACHlC,MAAO5E,EAAK+I,QACZuG,YAAY,uBACZlI,UAAQ,EACRX,SAAUsqB,IAGd,cAAC,GAAD,CACIxtB,UAAU,4BACVwQ,YAAa,CAAE/D,IAAKhQ,EAAKgQ,IAAKC,IAAKjQ,EAAKiQ,KACxC+D,UAAWY,GAAkC,YAArBA,EAAUxU,OAClC6T,SACIW,GAAkC,YAArBA,EAAUxU,YAAuBmF,EAAY,QCvKxE6rB,GAAwB,SAAC,GAAiB,IAAfttB,EAAc,EAAdA,QAC7B,OACI,yBACIA,QAASA,EACT2K,MAAM,0BACNlL,UAAU,iIAHd,UAKI,mBAAGA,UAAU,6FACb,wBAAQA,UAAU,qDAAlB,yCAON8tB,GAAe,SAAC,GAAiD,IAAD,IAA9CrxB,KAAQI,EAAsC,EAAtCA,OAAQuD,EAA8B,EAA9BA,KAAMkM,EAAwB,EAAxBA,OAAU/L,EAAc,EAAdA,QAC9CwtB,EACS,YAAXlxB,EACM,WACW,aAAXA,EACA,MACA,UAEV,OACI,yBACI0D,QAASA,EACTP,UAAS,0EAAqE+tB,EAArE,0EAFb,UAII,sBACI/tB,UAAS,uEAAkE+tB,EAAlE,iFAAsJA,GADnK,SAGKlxB,IAEL,mBACImD,UAAS,sFAAiF+tB,KAE9F,wBAAQ/tB,UAAU,wBAAlB,SAA2CI,IAC3C,sBAAMJ,UAAU,+CAAhB,SACKsM,QAMF0hB,GApHM,SAAC,GAAiB,IAAf5iB,EAAc,EAAdA,QACdzM,EAAmBiN,YAASjM,EAAMhB,kBAClCC,EAAiBgN,YAASjM,EAAMf,gBAChC2K,EAAUqC,aAAS,GACnBqiB,EAAmBriB,aAAS,GAC5BsiB,EAA0BtiB,iBAAS5J,GAGzCpD,EAAe2E,GAAGyV,QAAUpa,EAAeyD,IAAI,IAE/C,IAAM8rB,EAA0B,SAACC,GAC7B,OAAQA,EAAuBvxB,QAC3B,IAAK,SACD+B,EAAeyD,IACXoc,KAAKC,MAAMD,KAAKE,UAAUyP,KAE9BhjB,EAAQlE,KAAK,KACb,MAEJ,IAAK,WACL,IAAK,UACDgnB,EAAwB7rB,IACpBoc,KAAKC,MAAMD,KAAKE,UAAUyP,KAE9BH,EAAiB5rB,KAAI,KAejC,OAVAiJ,qBAAU,WACN,sBAAC,8BAAAjF,EAAA,sEAC0C8H,GACnCxO,EAAMjB,WAAW6E,GAAGtB,OAF3B,gBACiBsrB,EADjB,EACW9wB,KAGRkC,EAAiB0D,IAAIkrB,GACrBhkB,EAAQlH,KAAI,GALf,0CAAD,KAOD,IAEIkH,EAAQlI,MACX,cAAC,GAAD,IAEA,qCACI,cAAC,GAAD,CACIjB,KAAK,kBACLE,QAAQ,0BAEZ,sBAAKN,UAAU,yBAAf,UACKrB,EAAiBwE,KAAI,SAACvE,EAAgBwE,GAAjB,OAClB,cAAC,GAAD,CAEI3G,KAAMmC,EAAeqD,MACrB1B,QAAS,kBACL4tB,EAAwBvvB,EAAeqD,SAHtCrD,EAAe2E,GAAGtB,UAO/B,cAAC,GAAD,CACI1B,QAAS,WACL2tB,EAAwB7rB,SAAIL,GAC5BisB,EAAiB5rB,KAAI,SAIjC,cAAC,GAAD,CACIid,UAAW2O,EACX5c,UAAW6c,EAAwBjsB,YC6DpCosB,OAvHf,WACI,MAAqDziB,YAASjM,GAAtDjB,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,eAAgBP,EAApC,EAAoCA,aAC9Bob,EAAW/a,EAAW9B,KAAKqF,MAC3ByX,OAAuD1X,IAA5BpD,EAAe2E,GAAGlC,MAwGnD,OACI,sBACIrB,UAAS,UACL3B,EAAagD,MAAQ,QAAU,QAD1B,qDAGTiO,MAAO,CAAE8C,UAAW,uBAJxB,SAvGJ,WACI,OAAQqH,GACJ,IAAK,iBACD,IAAKC,EACD,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CACInH,KAAK,oBACLC,UAAWqZ,KAEf,cAAC,IAAD,CACItZ,KAAK,iBACLC,UAAWwb,KAEf,cAAC,IAAD,CAAUM,KAAK,IAAIttB,GAAG,sBAKtC,IAAK,aACD,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuR,KAAK,IAAI6G,OAAK,EAAC5G,UAAWiU,KACnB,mBAAbhN,GACG,cAAC,IAAD,CACIlH,KAAK,iBACLC,UAAWwb,KAGnB,cAAC,IAAD,CACIzb,KAAM,CAAC,cAAe,WACtBC,UAAW0V,KAEf,cAAC,IAAD,CAAO3V,KAAK,OAAOC,UAAW2a,KAC9B,cAAC,IAAD,CACI5a,KAAM,CAAC,aAAc,UACrBC,UAAWsV,KAEf,cAAC,IAAD,CACIvV,KAAM,CAAC,iBAAkB,cACzBC,UAAWsN,KAED,mBAAbrG,GACG,cAAC,IAAD,CACIlH,KAAK,qBACLC,UAAW2Y,KAGnB,cAAC,IAAD,CACI5Y,KAAK,oBACLC,UAAWqZ,KAEf,cAAC,IAAD,CAAU7qB,GAAG,SAIzB,IAAK,aACD,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIuR,KAAM,CAAC,cAAe,WACtBC,UAAW0V,KAEf,cAAC,IAAD,CACI3V,KAAM,CAAC,iBAAkB,cACzBC,UAAWsN,KAEf,cAAC,IAAD,CACIvN,KAAK,oBACLC,UAAWqZ,KAEf,cAAC,IAAD,CAAOtZ,KAAK,IAAIC,UAAW2a,KAC3B,cAAC,IAAD,CAAUnsB,GAAG,SAIzB,IAAK,QACD,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuR,KAAK,IAAI6G,OAAK,EAAC5G,UAAWiU,KACjC,cAAC,IAAD,CACIlU,KAAM,CAAC,gBAAiB,aACxBC,UAAWqX,KAEf,cAAC,IAAD,CACItX,KAAM,CAAC,aAAc,UACrBC,UAAW2W,KAEf,cAAC,IAAD,CACI5W,KAAM,CAAC,kBAAmB,eAC1BC,UAAWmW,KAEf,cAAC,IAAD,CACIpW,KAAK,oBACLC,UAAWqZ,KAEf,cAAC,IAAD,CAAU7qB,GAAG,UAaxButB,MCjCEC,GA9EM,WACjB,MACI3V,YAAalZ,GADTX,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,cAAeH,EAA/B,EAA+BA,WAAYE,EAA3C,EAA2CA,eAE3C,EAA8BgN,oBAAS,GAAvC,oBAAOrC,EAAP,KAAgB0iB,EAAhB,KAgEA,OA9DA3gB,qBAAU,WACF1M,EAAe2E,GAAGyV,OAClB,sBAAC,8BAAA3S,EAAA,sEAEOzH,EAAe2E,GAAGlC,MxFwC3B0E,QAAQC,QAAQ,CACnBvJ,KAAMoC,GAAcsH,QAChB,SAACoO,GAAD,MAC0B,iBAAtBA,EAAapX,MACS,eAAtBoX,EAAapX,UwF9ChB,gBACiBsxB,EADjB,EACWhyB,KAGRoC,EAAcwD,IAAIosB,GAJrB,0CAAD,GAOA5vB,EAAcwD,IAAI,MAEvB,CAACzD,EAAe2E,GAAGyV,SAEtB1N,qBAAU,WACN,IACI,sBAAC,kCAAAjF,EAAA,yDAEoB,WADXoT,EAAW/a,EAAW9B,KAAKqF,OADpC,iCAG6B8D,QAAQ2oB,IAAI,CxFgB3C3oB,QAAQC,QAAQ,CACnBvJ,KAAMoC,GAAcsH,QAChB,SAACoO,GAAD,MAC0B,iBAAtBA,EAAapX,MACS,eAAtBoX,EAAapX,UwFlBLiJ,IrGwPbL,QAAQC,QAAQ,CAAEvJ,KAAMgB,KqGtPXqY,OAPX,OAGa6Y,EAHb,OAUO9vB,EAAcwD,IAAIssB,EAAQ,GAAGlyB,MAC7BuC,EAAOtB,MAAMjB,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MACjCuC,EAAOvB,WAAWhB,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MACtCuC,EAAOI,SAAS3C,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MAb3C,2BAeoB,mBAAbgd,GACa,eAAbA,EAhBP,kCAkB6B1T,QAAQ2oB,IAAI,CAC9Bta,KACAxB,KACAoC,KACAc,OAtBX,QAkBa6Y,EAlBb,OAyBO3vB,EAAOE,UAAUzC,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MACrCuC,EAAOG,UAAU1C,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MACrCuC,EAAOpB,OAAOnB,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MAClCuC,EAAOI,SAAS3C,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MA5B3C,yCA8B6BsJ,QAAQ2oB,IAAI,CAC9Bta,KACAY,KACAc,OAjCX,QA8Ba6Y,EA9Bb,OAoCO3vB,EAAOE,UAAUzC,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MACrCuC,EAAOpB,OAAOnB,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MAClCuC,EAAOI,SAAS3C,KAAK4F,IAAIssB,EAAQ,GAAGlyB,MAtC3C,QAwCGwL,OAAOsD,YAAW,kBAAM0gB,GAAW,KAAQ,KAxC9C,2CAAD,GA0CF,MAAO2C,GACLtlB,IAAMuF,MAAM,yCAEjB,IAEItF,EACH,cAAC,GAAD,IAEA,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QChEGslB,OArBf,WACI,IAAQnwB,EAAema,YAAalZ,GAA5BjB,WAER,OACI,qCACI,cAAC,IAAD,CACIiS,SAAS,aACThH,UAAW,IACXmlB,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEf1wB,EAAW6E,GAAGyV,OAAS,cAAC,GAAD,IAAmB,cAAC,GAAD,QCdvDqW,IAAS5lB,OACL,cAAC,IAAM6lB,WAAP,UACI,cAAC,IAAD,UACI,cAAC,GAAD,QAGRtO,SAASC,eAAe,U","file":"static/js/main.37435aee.chunk.js","sourcesContent":["export default {\r\n    pagination: {\r\n        itemsPerPage: 5,\r\n        length: 4,\r\n        itemsPerPageOptions: [5, 10, 20, 30, 40, 50, 100],\r\n        currentPage: 1,\r\n    },\r\n};\r\n","import configs from \"../configs\";\r\n\r\nconst employeesState = {\r\n    data: [],\r\n    filters: {\r\n        search: \"\",\r\n        role: \"\",\r\n        status: \"\",\r\n    },\r\n    pagination: { ...configs.pagination },\r\n};\r\n\r\nexport default employeesState;\r\n","import configs from \"../configs\";\r\n\r\nconst inventoryState = {\r\n    data: [],\r\n    filters: {\r\n        search: \"\",\r\n        category: \"\",\r\n        status: \"\",\r\n    },\r\n    pagination: { ...configs.pagination },\r\n};\r\n\r\nexport default inventoryState;\r\n","import configs from \"../configs\";\r\n\r\nconst ordersState = {\r\n    data: [],\r\n    filters: {\r\n        search: \"\",\r\n        type: \"\",\r\n        status: \"\",\r\n    },\r\n    pagination: { ...configs.pagination },\r\n};\r\n\r\nexport default ordersState;\r\n","const overviewStatisticState = {\r\n    views: {\r\n        counter: 0,\r\n        previous_counter: 0,\r\n    },\r\n    online_orders: {\r\n        counter: 0,\r\n        previous_counter: 0,\r\n    },\r\n    pharmacies: {\r\n        counter: 0,\r\n    },\r\n    users: {\r\n        counter: 0,\r\n    },\r\n    sales: {\r\n        counter: 0,\r\n        previous_counter: 0,\r\n    },\r\n    orders: {\r\n        counter: 0,\r\n        previous_counter: 0,\r\n    },\r\n    profits: {\r\n        counter: 0,\r\n        previous_counter: 0,\r\n    },\r\n    sold_products: {\r\n        counter: 0,\r\n        previous_counter: 0,\r\n    },\r\n};\r\n\r\nexport default overviewStatisticState;\r\n","import configs from \"../configs\";\r\n\r\nconst pharmaciesState = {\r\n    data: [],\r\n    filters: {\r\n        search: \"\",\r\n    },\r\n    pagination: { ...configs.pagination },\r\n};\r\n\r\nexport default pharmaciesState;\r\n","import configs from \"../configs\";\r\n\r\nconst productsState = {\r\n    data: [],\r\n    filters: {\r\n        search: \"\",\r\n        category: \"\",\r\n        company: \"\",\r\n    },\r\n    pagination: { ...configs.pagination },\r\n};\r\n\r\nexport default productsState;\r\n","import configs from \"../configs\";\r\n\r\nconst productsStatisticsState = {\r\n    data: [],\r\n    filters: {\r\n        search: \"\",\r\n    },\r\n    pagination: { ...configs.pagination },\r\n};\r\n\r\nexport default productsStatisticsState;\r\n","import configs from \"../configs\";\r\n\r\nconst usersState = {\r\n    data: [],\r\n    filters: {\r\n        search: \"\",\r\n        role: \"\",\r\n        status: \"\",\r\n    },\r\n    pagination: { ...configs.pagination },\r\n};\r\n\r\nexport default usersState;\r\n","import { createState, DevTools } from \"@hookstate/core\";\r\nimport employeesState from \"./states/employeesState\";\r\nimport inventoryState from \"./states/inventoryState\";\r\nimport ordersState from \"./states/ordersState\";\r\nimport overviewStatisticState from \"./states/overviewStatisticState\";\r\nimport pharmaciesState from \"./states/pharmaciesState\";\r\nimport productsState from \"./states/productsState\";\r\nimport productsStatisticsState from \"./states/productsStatisticsState\";\r\nimport usersState from \"./states/usersState\";\r\n\r\nconst defaultState = {\r\n    collapseMenu: localStorage.getItem(\"collapse_menu\") === \"true\",\r\n    statistics: {\r\n        overview: { ...overviewStatisticState },\r\n    },\r\n    loggedUser: {},\r\n    pharmacyBranches: [],\r\n    pharmacyBranch: {},\r\n    notifications: [],\r\n    uploads: {\r\n        productPhoto: \"\",\r\n    },\r\n    tables: {\r\n        productsStatistics: productsStatisticsState,\r\n        inventory: inventoryState,\r\n        employees: employeesState,\r\n        orders: ordersState,\r\n        pharmacies: pharmaciesState,\r\n        users: usersState,\r\n        products: productsState,\r\n    },\r\n    popupWindow: {\r\n        display: false,\r\n        type: \"\",\r\n        data: {},\r\n    },\r\n    pos: {\r\n        products: [],\r\n        discount: { amount: 0, unit: \"SDG\" },\r\n    },\r\n};\r\n\r\nlet store = createState({ ...defaultState });\r\n\r\nexport const resetStore = () => {\r\n    store.merge({ ...defaultState });\r\n};\r\n\r\nDevTools(store).label(\"Store\");\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\" mt-10\">\r\n            <p className=\"text-smd text-center bg-white border-t py-2 text-gray-600\">\r\n                &copy; {new Date().getFullYear()} Pharma. All rights reserved.\r\n            </p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst AuthSectionHeader = ({ name }) => {\r\n    return (\r\n        <h2 className=\"text-center font-semibold text-xl mb-10\">\r\n            <span className=\"inline-block pb-2 border-b-2 border-gray-300 border-dashed\">\r\n                {name}\r\n            </span>\r\n        </h2>\r\n    );\r\n};\r\n\r\nexport default AuthSectionHeader;\r\n","import React from \"react\";\r\n\r\nconst FormButton = ({\r\n    label = \"Save Changes\",\r\n    faClass = \"fas fa-save\",\r\n    className = \"bg-primary hover:bg-secondary text-white shadow-md rounded text-smd\",\r\n    type = \"submit\",\r\n    onClick,\r\n    iconAfter = false,\r\n}) => {\r\n    return (\r\n        <button\r\n            type={type}\r\n            onClick={onClick}\r\n            className={`py-2 px-3 font-semibold mr-4 last:mr-0 group ${className}`}\r\n        >\r\n            {iconAfter ? (\r\n                <>\r\n                    {label}\r\n                    <i className={`${faClass} text-bright ml-1.5`}></i>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <i className={`${faClass} text-bright mr-1.5`}></i> {label}\r\n                </>\r\n            )}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default FormButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormButton from \"./FormButton\";\r\n\r\nconst AuthForm = ({\r\n    children,\r\n    submitBtn,\r\n    footerLink,\r\n    onSubmit,\r\n    className = \"flex flex-col gap-y-6\",\r\n}) => {\r\n    return (\r\n        <div className=\"bg-white rounded shadow-lg p-5 text-sm animate__animated animate__faster animate__backInUp\">\r\n            <form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    onSubmit();\r\n                }}\r\n            >\r\n                <div className={className}>{children}</div>\r\n                <FormButton\r\n                    label={submitBtn.label}\r\n                    faClass={submitBtn.faClass}\r\n                    iconAfter\r\n                    className={`${\r\n                        submitBtn.className || \"w-full\"\r\n                    } mt-6 rounded-sm shadow-md py-2.5 text-sm bg-primary text-white hover:bg-secondary`}\r\n                />\r\n            </form>\r\n            {footerLink && (\r\n                <div className=\"border-t-2 bg-gray-100 py-3 -mx-5 -mb-5 mt-6 rounded-b text-center\">\r\n                    <Link\r\n                        to={footerLink.link}\r\n                        className=\"text-gray-500 font-medium text-xs\"\r\n                    >\r\n                        {footerLink.content}\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\n\r\nconst Note = ({ children, className }) => {\r\n    return (\r\n        <div\r\n            className={`px-3 py-2 text-gray-600 bg-gray border-dashed border border-gray-300 rounded ${className}`}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import React, { useCallback } from \"react\";\r\nimport Select from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nfunction FormField({\r\n    className,\r\n    label,\r\n    type = \"text\",\r\n    value,\r\n    options = [],\r\n    taggable = false,\r\n    inputOnly = false,\r\n    inputClassName = \"\",\r\n    booleanValue = false,\r\n    inputWrapper = false,\r\n    contentAfter,\r\n    escapePattern,\r\n    ...props\r\n}) {\r\n    const currentValue = value !== undefined ? value.get() : \"\";\r\n\r\n    const onInputChange = ({ target }) => {\r\n        if (booleanValue) {\r\n            switch (target.value.toLowerCase()) {\r\n                case \"no\":\r\n                case \"false\":\r\n                case \"0\":\r\n                    value.set(false);\r\n                    break;\r\n                default:\r\n                    value.set(true);\r\n            }\r\n        } else {\r\n            value.set(target.value);\r\n        }\r\n    };\r\n\r\n    if (escapePattern && props.pattern) {\r\n        props.pattern = props.pattern.replace(/[$^.]/, \"\\\\$&\");\r\n    }\r\n\r\n    const onSelectChange = (selectedValue) => {\r\n        value.set(selectedValue.value);\r\n    };\r\n\r\n    const renderInput = useCallback(() => {\r\n        switch (type) {\r\n            case \"select\":\r\n                return (\r\n                    <Select\r\n                        styles={styleObject}\r\n                        className={\r\n                            inputClassName\r\n                                ? inputClassName\r\n                                : \"border border-gray-300 bg-white rounded-sm py-1 px-2 shadow\"\r\n                        }\r\n                        classNamePrefix=\"react-select\"\r\n                        value={{\r\n                            label: currentValue,\r\n                            value: currentValue,\r\n                        }}\r\n                        options={options}\r\n                        onChange={onSelectChange}\r\n                        isSearchable={true}\r\n                        isDisabled={props.disabled}\r\n                        {...props}\r\n                    />\r\n                );\r\n\r\n            case \"radio\":\r\n                return (\r\n                    <div className=\"my-auto\">\r\n                        {options.map(({ label, value }, i) => (\r\n                            <div\r\n                                key={i}\r\n                                className=\"inline-block mr-4 last:mr-0\"\r\n                            >\r\n                                <input\r\n                                    className=\"mr-1 align-middle\"\r\n                                    type=\"radio\"\r\n                                    value={value}\r\n                                    onChange={onInputChange}\r\n                                    checked={\r\n                                        currentValue.toString() ===\r\n                                        value.toString()\r\n                                    }\r\n                                    {...props}\r\n                                    id={`${label}_${i}`}\r\n                                />\r\n                                <label htmlFor={`${label}_${i}`}>{label}</label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                );\r\n\r\n            case \"textarea\":\r\n                return (\r\n                    <textarea\r\n                        className=\"border w-full h-25 border-gray-300 rounded-sm py-1 px-2 shadow\"\r\n                        value={currentValue}\r\n                        onChange={onInputChange}\r\n                    />\r\n                );\r\n\r\n            case \"file\":\r\n                return (\r\n                    <>\r\n                        <label\r\n                            htmlFor={props.id}\r\n                            className=\"inline-block cursor-pointer bg-primary text-white text-xxs rounded-sm shadow-md font-semibold px-2 py-1.5 hover:bg-secondary\"\r\n                        >\r\n                            <i className=\"fas fa-upload text-bright mr-1\"></i>{\" \"}\r\n                            {props.btnLabel || \"Upload\"}\r\n                        </label>\r\n                        <input\r\n                            className=\"hidden\"\r\n                            type={type}\r\n                            value=\"\"\r\n                            onChange={({ target }) => {\r\n                                value.set(target.files[0]);\r\n                            }}\r\n                            {...props}\r\n                        />\r\n                    </>\r\n                );\r\n\r\n            default:\r\n                if (taggable) {\r\n                    return (\r\n                        <CreatableSelect\r\n                            styles={styleObject}\r\n                            className=\"border w-full border-gray-300 bg-white rounded-sm py-1 px-2 shadow\"\r\n                            classNamePrefix=\"react-select\"\r\n                            value={{\r\n                                label: currentValue,\r\n                                value: currentValue,\r\n                            }}\r\n                            options={options}\r\n                            onChange={onSelectChange}\r\n                            onInputChange={(newValue, actionMeta) => {\r\n                                if (actionMeta === \"input-change\") {\r\n                                    value.set(newValue);\r\n                                }\r\n                            }}\r\n                            isSearchable={true}\r\n                            isDisabled={props.disabled}\r\n                            {...props}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <input\r\n                        className={\r\n                            inputClassName ||\r\n                            `border w-full border-gray-300 rounded-sm py-1 px-2 shadow`\r\n                        }\r\n                        type={type}\r\n                        value={currentValue}\r\n                        onChange={onInputChange}\r\n                        {...props}\r\n                    />\r\n                );\r\n        }\r\n    }, [props, options, taggable, type]);\r\n\r\n    if (inputOnly) return renderInput();\r\n    return (\r\n        <div className={className}>\r\n            <label\r\n                htmlFor={props.id}\r\n                className=\"mb-2 block font-medium capitalize\"\r\n            >\r\n                {label}\r\n                {props.required ? (\r\n                    <span className=\"text-red ml-0.5\">*</span>\r\n                ) : undefined}\r\n            </label>\r\n            {inputWrapper ? (\r\n                <div className=\"relative\">\r\n                    {renderInput()} {contentAfter}\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {renderInput()} {contentAfter}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormField;\r\n\r\nconst styleObject = {\r\n    control: (provided) => ({\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    }),\r\n    valueContainer: (provided) => ({\r\n        ...provided,\r\n        padding: \"0\",\r\n    }),\r\n    indicatorsContainer: () => ({}),\r\n    input: (provided) => ({\r\n        ...provided,\r\n        padding: \"0\",\r\n        margin: \"0\",\r\n    }),\r\n    singleValue: (provided) => ({\r\n        ...provided,\r\n        margin: \"0\",\r\n    }),\r\n    menu: (provided) => ({\r\n        ...provided,\r\n        left: 0,\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst AuthFormField = ({ icon, ...props }) => {\r\n    return (\r\n        <FormField\r\n            inputClassName={`bg-gray-100 border p-2 w-full rounded-sm shadow ${\r\n                icon ? \"pr-6\" : \"\"\r\n            }`}\r\n            inputWrapper={!!icon}\r\n            contentAfter={\r\n                icon && (\r\n                    <i\r\n                        className={`${icon} absolute top-1/2 transform -translate-y-1/2 right-3.5 text-xs text-gray-300`}\r\n                    ></i>\r\n                )\r\n            }\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AuthFormField;\r\n","import axios from \"axios\";\r\n\r\nconst http = {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./http\";\r\n\r\nexport let users = [\r\n    {\r\n        id: 1,\r\n        first_name: \"Mustafa\",\r\n        last_name: \"Salah\",\r\n        username: \"mustafa\",\r\n        email: \"mustafasalah99@gmail.com\",\r\n        role: \"admin\",\r\n        gender: \"m\",\r\n        phone_number: \"+249965474730\",\r\n        state: \"khartoum\",\r\n        city: \"omdurman\",\r\n        address: \"althwra, alhara 59\",\r\n        status: \"active\",\r\n        last_seen: \"online\",\r\n        joining_date: \"12-10-2019\",\r\n    },\r\n    {\r\n        id: 2,\r\n        username: \"mustafasalah\",\r\n        email: \"mustafasalah99@gmail.com\",\r\n        first_name: \"Mustafa\",\r\n        last_name: \"Salah\",\r\n        gender: \"m\",\r\n        phone_number: \"+249121297015\",\r\n        role: \"pharmacy owner\",\r\n        state: \"khartoum\",\r\n        city: \"omdurman\",\r\n        address: \"Al thwrah, al harah 59, al shingety street\",\r\n        status: \"active\",\r\n        last_seen: \"5 hours ago\",\r\n        joining_date: \"27-02-2020\",\r\n    },\r\n    {\r\n        id: 3,\r\n        first_name: \"Ali\",\r\n        last_name: \"Osman\",\r\n        username: \"ali\",\r\n        email: \"aliosman99@gmail.com\",\r\n        role: \"pharmacy owner\",\r\n        gender: \"m\",\r\n        phone_number: \"+249965479987\",\r\n        state: \"khartoum\",\r\n        city: \"khartoum\",\r\n        address: \"alriyad, almshtal street\",\r\n        status: \"active\",\r\n        last_seen: \"2 hours ago\",\r\n        joining_date: \"22-12-2019\",\r\n    },\r\n    {\r\n        id: 4,\r\n        first_name: \"Mona\",\r\n        last_name: \"Hassan\",\r\n        username: \"mona\",\r\n        email: \"mona_hassssan@hotmail.com\",\r\n        role: \"pharmacist\",\r\n        gender: \"f\",\r\n        phone_number: \"\",\r\n        state: \"khartoum\",\r\n        city: \"\",\r\n        address: \"\",\r\n        status: \"active\",\r\n        last_seen: \"1 day ago\",\r\n        joining_date: \"01-01-2021\",\r\n    },\r\n    {\r\n        id: 5,\r\n        first_name: \"Ahmed\",\r\n        last_name: \"Mohamed\",\r\n        username: \"ahmed\",\r\n        email: \"ahmed_mohamed@hotmail.com\",\r\n        role: \"user\",\r\n        gender: \"f\",\r\n        phone_number: \"+249965949423\",\r\n        state: \"khartoum\",\r\n        city: \"\",\r\n        address: \"\",\r\n        status: \"active\",\r\n        last_seen: \"1 day ago\",\r\n        joining_date: \"02-02-2021\",\r\n    },\r\n    {\r\n        id: 6,\r\n        first_name: \"Hassan\",\r\n        last_name: \"Salah\",\r\n        username: \"hassan\",\r\n        email: \"hassssan1993@gmail.com\",\r\n        role: \"supervisor\",\r\n        gender: \"m\",\r\n        phone_number: \"+24990483829\",\r\n        state: \"khartoum\",\r\n        city: \"\",\r\n        address: \"\",\r\n        status: \"active\",\r\n        last_seen: \"2 hours ago\",\r\n        joining_date: \"24-04-2021\",\r\n    },\r\n];\r\n\r\nexport const getUserByUsername = (username) => {\r\n    const result = users.find((user) => user.username === username);\r\n    return Promise.resolve({ data: result, status: 200 });\r\n};\r\n\r\nexport const getUsersByRole = (role) => {\r\n    const avaiableUsers = users.filter((user) => user.role === role);\r\n    return Promise.resolve({ data: avaiableUsers, status: 200 });\r\n};\r\n\r\nexport const getUsers = async () => {\r\n    return await Promise.resolve({ data: users, status: 200 });\r\n};\r\n\r\nexport const deleteUser = (id) => {\r\n    users = users.filter((user) => user.id !== id);\r\n    return Promise.resolve({ data: { id }, status: 200 });\r\n};\r\n\r\nexport const setUser = async ({\r\n    first_name,\r\n    last_name,\r\n    username,\r\n    password,\r\n    email,\r\n    role,\r\n    gender,\r\n    phone_number,\r\n    status,\r\n    state,\r\n    city,\r\n    address,\r\n}) => {\r\n    const data = {\r\n        first_name,\r\n        last_name,\r\n        username,\r\n        email,\r\n        role,\r\n        gender,\r\n        phone_number,\r\n        status,\r\n        state,\r\n        city,\r\n        address,\r\n    };\r\n\r\n    const newUser = {\r\n        id: users.length + Math.round(Math.random() * 100),\r\n        joining_date: new Date()\r\n            .toJSON()\r\n            .slice(0, 10)\r\n            .split(\"-\")\r\n            .reverse()\r\n            .join(\"-\"),\r\n        last_seen: \"\",\r\n        ...data,\r\n    };\r\n\r\n    users.push(newUser);\r\n\r\n    return await Promise.resolve({ data: newUser, status: 200 });\r\n    // return await http.post(\"https://jsonplaceholder.typicode.com/posts\", data);\r\n};\r\n\r\nexport const updateUser = async ({\r\n    id,\r\n    first_name,\r\n    last_name,\r\n    username,\r\n    email,\r\n    role,\r\n    gender,\r\n    phone_number,\r\n    status,\r\n    state,\r\n    city,\r\n    address,\r\n}) => {\r\n    const data = {\r\n        first_name,\r\n        last_name,\r\n        username,\r\n        email,\r\n        role,\r\n        gender,\r\n        phone_number,\r\n        status,\r\n        state,\r\n        city,\r\n        address,\r\n    };\r\n\r\n    return await Promise.resolve({ status: 200 });\r\n    // return await http.put(\r\n    //     `https://jsonplaceholder.typicode.com/posts/${id}`,\r\n    //     data\r\n    // );\r\n};\r\n","import http from \"./http\";\r\nimport { users } from \"./users\";\r\n\r\nexport const login = (username, password) => {\r\n    const loggedUser = users.find((user) => user.username === username);\r\n\r\n    if (!loggedUser) return Promise.resolve({ status: 403 });\r\n\r\n    return Promise.resolve({\r\n        data: loggedUser,\r\n        status: 200,\r\n    });\r\n};\r\n\r\nexport const signup = async (userData) => {\r\n    delete userData.password;\r\n    delete userData.confirm_password;\r\n\r\n    const newUser = {\r\n        id: users.length + 1,\r\n        ...userData,\r\n        state: \"\",\r\n        city: \"\",\r\n        address: \"\",\r\n        status: \"non-active\",\r\n        joining_date: new Date()\r\n            .toJSON()\r\n            .slice(0, 10)\r\n            .split(\"-\")\r\n            .reverse()\r\n            .join(\"-\"),\r\n    };\r\n\r\n    users.push(newUser);\r\n\r\n    return Promise.resolve({ data: newUser, status: 200 });\r\n};\r\n\r\nexport const verifyToken = (token) => {\r\n    const validTokens = [\"token1\", \"token2\", \"token3\"];\r\n\r\n    return Promise.resolve({\r\n        status: validTokens.includes(token) ? 200 : 404,\r\n    });\r\n};\r\n\r\nexport const resetPassword = (token, newPassword) => {\r\n    return Promise.resolve({\r\n        status: 401,\r\n    });\r\n};\r\n\r\nexport const forgetPassword = (email) => {\r\n    const forgettenUser = users.find((user) => user.email === email);\r\n\r\n    if (!forgettenUser) return Promise.resolve({ state: 401 });\r\n    return Promise.resolve({ status: 200 });\r\n};\r\n\r\nexport const changePassword = (id, data) => {\r\n    console.dir(data);\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createCustomEqual } from \"fast-equals\";\r\nimport { isLatLngLiteral } from \"@googlemaps/typescript-guards\";\r\n\r\nconst deepCompareEqualsForMaps = createCustomEqual((deepEqual) => (a, b) => {\r\n    if (\r\n        isLatLngLiteral(a) ||\r\n        a instanceof window.google.maps.LatLng ||\r\n        isLatLngLiteral(b) ||\r\n        b instanceof window.google.maps.LatLng\r\n    ) {\r\n        return new window.google.maps.LatLng(a).equals(\r\n            new window.google.maps.LatLng(b)\r\n        );\r\n    }\r\n\r\n    // TODO extend to other types\r\n\r\n    // use fast-equals for other objects\r\n    return deepEqual(a, b);\r\n});\r\n\r\nfunction useDeepCompareMemoize(value) {\r\n    const ref = React.useRef();\r\n\r\n    if (!deepCompareEqualsForMaps(value, ref.current)) {\r\n        ref.current = value;\r\n    }\r\n\r\n    return ref.current;\r\n}\r\n\r\nexport function useDeepCompareEffectForMaps(callback, dependencies) {\r\n    React.useEffect(callback, dependencies.map(useDeepCompareMemoize));\r\n}\r\n\r\nexport const getCityOptions = () => {\r\n    return [\r\n        { label: \"Khartoum\", value: \"khartoum\" },\r\n        { label: \"Omdurman\", value: \"omdurman\" },\r\n        { label: \"Bhary\", value: \"bhary\" },\r\n    ];\r\n};\r\n\r\nexport const handleUploadProgress = (uploadMsg) => {\r\n    let toastId = React.createRef();\r\n    return {\r\n        toastId,\r\n        onUploadProgress: (p) => {\r\n            const progress = p.loaded / p.total;\r\n\r\n            // check if we already displayed a toast\r\n            if (toastId.current === null) {\r\n                toastId.current = toast(uploadMsg || \"Upload in Progress\", {\r\n                    progress: progress,\r\n                });\r\n            } else {\r\n                toast.update(toastId.current, {\r\n                    progress: progress,\r\n                });\r\n            }\r\n        },\r\n    };\r\n};\r\n\r\nexport function range(min, max) {\r\n    const nums = [];\r\n    for (let i = min; i <= max; i++) {\r\n        nums.push(i);\r\n    }\r\n    return nums;\r\n}\r\n\r\nexport function notify({\r\n    status,\r\n    waitMsg = \"Please Wait...\",\r\n    successMsg,\r\n    errorMsg = \"Network Error!\",\r\n    successCallback,\r\n    errorCallback,\r\n}) {\r\n    if (status >= 200 && status < 300) {\r\n        const toastId = successMsg && toast.loading(waitMsg);\r\n        if (successMsg) {\r\n            toast.update(toastId, {\r\n                render: successMsg,\r\n                type: \"success\",\r\n                isLoading: false,\r\n                autoClose: 5000,\r\n            });\r\n        }\r\n        // optional success callback for extra processing\r\n        typeof successCallback === \"function\" && successCallback();\r\n    } else {\r\n        const toastId = toast.loading(waitMsg);\r\n        toast.update(toastId, {\r\n            render: errorMsg,\r\n            type: \"error\",\r\n            isLoading: false,\r\n            autoClose: 5000,\r\n        });\r\n        // optional error callback for extra processing\r\n        typeof errorCallback === \"function\" && errorCallback();\r\n    }\r\n}\r\n\r\nfunction getMonthDays(month) {\r\n    let days = [];\r\n    for (let i = 0; i < 31; i++) {\r\n        if (month === 2 && i === 28) break;\r\n        else if (\r\n            ((month % 2 === 0 && month < 7) ||\r\n                (month % 2 !== 0 && month > 8)) &&\r\n            i === 30\r\n        ) {\r\n            break;\r\n        }\r\n        days.push(i + 1 + \"\");\r\n    }\r\n    return days;\r\n}\r\n\r\nconst getWeekDays = (\r\n    week = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"]\r\n) => {\r\n    const day = new Date().getDay();\r\n    const currentWeekDays = week.slice(0, day + 1);\r\n\r\n    currentWeekDays.unshift(...week.slice(day + 1));\r\n\r\n    return currentWeekDays;\r\n};\r\n\r\nexport const getStatisticalLabels = (time) => {\r\n    switch (time) {\r\n        case \"day\":\r\n            return [\r\n                \"00\",\r\n                \"01\",\r\n                \"02\",\r\n                \"03\",\r\n                \"04\",\r\n                \"05\",\r\n                \"06\",\r\n                \"07\",\r\n                \"08\",\r\n                \"09\",\r\n                \"10\",\r\n                \"11\",\r\n                \"12\",\r\n                \"13\",\r\n                \"14\",\r\n                \"15\",\r\n                \"16\",\r\n                \"17\",\r\n                \"18\",\r\n                \"19\",\r\n                \"20\",\r\n                \"21\",\r\n                \"22\",\r\n                \"23\",\r\n            ];\r\n        case \"week\":\r\n            return getWeekDays();\r\n\r\n        case \"month\":\r\n            return getMonthDays();\r\n\r\n        case \"year\":\r\n            return [\r\n                \"Jan\",\r\n                \"Feb\",\r\n                \"Mar\",\r\n                \"Apr\",\r\n                \"May\",\r\n                \"Jun\",\r\n                \"Jul\",\r\n                \"Aug\",\r\n                \"Sep\",\r\n                \"Oct\",\r\n                \"Nov\",\r\n                \"Dec\",\r\n            ];\r\n    }\r\n};\r\n\r\nexport function getMonthLength(month) {\r\n    if (month === 2) return 28;\r\n    else if ((month % 2 === 0 && month <= 7) || (month % 2 !== 0 && month >= 8))\r\n        return 30;\r\n    else return 31;\r\n}\r\n\r\nexport function nFormatter(num, digits = 1) {\r\n    const lookup = [\r\n        { value: 1, symbol: \"\" },\r\n        { value: 1e3, symbol: \"K\" },\r\n        { value: 1e6, symbol: \"M\" },\r\n        { value: 1e9, symbol: \"G\" },\r\n        { value: 1e12, symbol: \"T\" },\r\n        { value: 1e15, symbol: \"P\" },\r\n        { value: 1e18, symbol: \"E\" },\r\n    ];\r\n    const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    var item = lookup\r\n        .slice()\r\n        .reverse()\r\n        .find(function (item) {\r\n            return num >= item.value;\r\n        });\r\n    return item\r\n        ? (num / item.value).toFixed(digits).replace(rx, \"$1\") + item.symbol\r\n        : \"0\";\r\n}\r\n\r\nexport function paginateData(pagination, data) {\r\n    const { currentPage, itemsPerPage } = pagination.get();\r\n    const start = (currentPage - 1) * itemsPerPage;\r\n    const end = start + +itemsPerPage;\r\n    return data.slice(start, end);\r\n}\r\n\r\nexport function filterData(filters, filtersData, data) {\r\n    return data.filter((row) => {\r\n        return filters.every((filter) => {\r\n            const filterData = filtersData[filter.prop].get();\r\n            if (filterData === \"\") return true;\r\n\r\n            let rowData = row[filter.by].get();\r\n\r\n            switch (filter.type) {\r\n                case \"search\":\r\n                    return (\r\n                        rowData\r\n                            .toString()\r\n                            .search(new RegExp(`.*${filterData}.*`, \"i\")) !== -1\r\n                    );\r\n\r\n                default:\r\n                    if (filter.handler) {\r\n                        return filter.handler(filterData, rowData);\r\n                    }\r\n                    return filterData === rowData;\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction getNestedProperty(props, obj) {\r\n    props = props.split(\".\");\r\n    for (const prop of props) {\r\n        obj = obj[prop];\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function sortData({ columnName, order }, data) {\r\n    columnName = columnName.get();\r\n    order = order.get();\r\n    data.sort((a, b) => {\r\n        const columnA = getNestedProperty(columnName, a).value;\r\n        const columnB = getNestedProperty(columnName, b).value;\r\n        if (order === \"desc\") {\r\n            return columnA >= columnB ? -1 : 1;\r\n        }\r\n        return columnA <= columnB ? -1 : 1;\r\n    });\r\n    return data;\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst SuccessPage = ({ title, children, redirect }) => {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        window.setTimeout(() => {\r\n            history.push(redirect.link);\r\n        }, 5000);\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"animate__animated animate__fadeIn\">\r\n            <h2 className=\"text-2xl text-center font-bold mt-20 mb-5 capitalize\">\r\n                <i className=\"text-shadow fas fa-check-circle text-green mr-1\"></i>{\" \"}\r\n                {title}\r\n            </h2>\r\n            <p className=\"text-gray-500 text-center text-xl\">{children}</p>\r\n            {redirect && (\r\n                <p className=\"bg-white rounded shadow-md p-5 mt-10 text-center\">\r\n                    You will be redirected within 5 seconds to{\" \"}\r\n                    <a href={redirect.link}>{redirect.pageName}</a>.\r\n                </p>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SuccessPage;\r\n","import React from \"react\";\r\nimport { useState } from \"@hookstate/core\";\r\nimport AuthSectionHeader from \"../common/AuthSectionHeader\";\r\nimport AuthForm from \"../forms/AuthForm\";\r\nimport Note from \"../common/Note\";\r\nimport AuthFormField from \"../forms/AuthFormField\";\r\nimport { forgetPassword } from \"../../services/auth\";\r\nimport { notify } from \"../../utility\";\r\nimport SuccessPage from \"../common/SuccessPage\";\r\n\r\nconst ForgetPassword = () => {\r\n    const forgetForm = useState({\r\n        email: \"\",\r\n        confirm_email: \"\",\r\n    });\r\n\r\n    const showSuccessPage = useState(false);\r\n\r\n    return (\r\n        <div\r\n            className={`mt-10 mx-auto ${\r\n                showSuccessPage.value ? \"max-w-xl\" : \"w-96\"\r\n            }`}\r\n        >\r\n            {showSuccessPage.value ? (\r\n                <SuccessPage\r\n                    title=\"we send password reset link into your email inbox, go check it out!\"\r\n                    redirect={{ link: \"/login\", pageName: \"Login Page\" }}\r\n                ></SuccessPage>\r\n            ) : (\r\n                <>\r\n                    <AuthSectionHeader name=\"Forget My Password\" />\r\n                    <AuthForm\r\n                        submitBtn={{\r\n                            label: \"Send Reset Link\",\r\n                            faClass: \"fas fa-paper-plane\",\r\n                        }}\r\n                        footerLink={{\r\n                            link: \"/sign-up\",\r\n                            content: \"Don't have an account? Signup now\",\r\n                        }}\r\n                        onSubmit={async () => {\r\n                            const { status } = await forgetPassword(\r\n                                forgetForm.email.get()\r\n                            );\r\n\r\n                            notify({\r\n                                status,\r\n                                successMsg:\r\n                                    \"We send password reset link to your email, go and check it out!\",\r\n                                successCallback() {\r\n                                    showSuccessPage.set(true);\r\n                                },\r\n                                errorMsg:\r\n                                    \"There is no account registerated with this email!\",\r\n                            });\r\n                        }}\r\n                    >\r\n                        <Note className=\"text-smd\">\r\n                            <strong>Note:</strong> You will receive reset link\r\n                            in your email inbox to reset your password to new\r\n                            one.\r\n                        </Note>\r\n                        <AuthFormField\r\n                            name=\"email\"\r\n                            label=\"email\"\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            value={forgetForm.email}\r\n                            placeholder=\"e.g. example@example.com\"\r\n                            icon=\"fas fa-at\"\r\n                            required\r\n                        />\r\n\r\n                        <AuthFormField\r\n                            name=\"confirm_email\"\r\n                            label=\"confirm email\"\r\n                            id=\"confirm_email\"\r\n                            type=\"email\"\r\n                            value={forgetForm.confirm_email}\r\n                            placeholder=\"e.g. example@example.com\"\r\n                            pattern={forgetForm.email.value}\r\n                            icon=\"fas fa-check-double\"\r\n                            escapePattern\r\n                            required\r\n                        />\r\n                    </AuthForm>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","import React from \"react\";\r\nimport AuthFormField from \"../forms/AuthFormField\";\r\n\r\nconst PasswordAuthField = ({ value, confirmation, ...props }) => {\r\n    return (\r\n        <AuthFormField\r\n            name=\"password\"\r\n            label=\"password\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={value}\r\n            placeholder=\"************\"\r\n            icon={confirmation ? `fas fa-check-double` : `fas fa-unlock-alt`}\r\n            minLength=\"6\"\r\n            maxLength=\"20\"\r\n            pattern={confirmation}\r\n            escapePattern\r\n            required\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PasswordAuthField;\r\n","import React from \"react\";\r\nimport AuthFormField from \"./AuthFormField\";\r\n\r\nconst UsernameAuthField = ({ value, ...props }) => {\r\n    return (\r\n        <AuthFormField\r\n            name=\"username\"\r\n            label=\"username\"\r\n            id=\"username\"\r\n            value={value}\r\n            placeholder=\"e.g. Ahmed\"\r\n            icon=\"fas fa-user\"\r\n            minLength=\"2\"\r\n            maxLength=\"20\"\r\n            pattern=\"\\w+\"\r\n            required\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default UsernameAuthField;\r\n","import store from \"../state\";\r\nimport http from \"./http\";\r\n\r\nexport let pharmacies = [\r\n    {\r\n        id: 1,\r\n        name: \"CVS Pharmacy\",\r\n        pharmacy_id: 1,\r\n        branch: \"Omdurman Branch\",\r\n        phone_numbers: [\"+249965474730\", \"+249184757530\"],\r\n        email: \"cvs-pharma@cvs-pharma.com\",\r\n        website: \"http://www.cvs-pharma.com\",\r\n        state: \"khartoum\",\r\n        city: \"omdurman\",\r\n        address: \"Alwadi Street, near alrowda hospital\",\r\n        lat: 12.4034,\r\n        lng: 42.4493,\r\n        created_at: \"24-09-2021 12:34:03 PM\",\r\n        status: \"active\",\r\n        owned_by: {\r\n            id: 2,\r\n            name: \"Mustafa Salah\",\r\n        },\r\n        support_delivery: false,\r\n        delivery_cost: 0,\r\n        vat: 0,\r\n        payment_options: {\r\n            mbok: {\r\n                account_no: \"5678293\",\r\n                account_owner_name: \"Mustafa Salah Mustafa\",\r\n                bank_branch_name: \"sabren\",\r\n            },\r\n            atm_card: {\r\n                card_no: \"\",\r\n                card_owner_name: \"\",\r\n                bank_name: \"\",\r\n            },\r\n        },\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"CVS Pharmacy\",\r\n        pharmacy_id: 1,\r\n        branch: \"Khartoum Branch\",\r\n        phone_numbers: [\"+249965474722\", \"+249184757223\"],\r\n        email: \"cvs-pharma@cvs-pharma.com\",\r\n        website: \"http://www.cvs-pharma.com\",\r\n        state: \"khartoum\",\r\n        city: \"khartoum\",\r\n        address: \"Al khartoum 2, near Ozone\",\r\n        lat: 11.7474,\r\n        lng: 33.4794,\r\n        created_at: \"03-08-2021 22:04:02 PM\",\r\n        status: \"pending\",\r\n        owned_by: {\r\n            id: 2,\r\n            name: \"Mustafa Salah\",\r\n        },\r\n        support_delivery: false,\r\n        delivery_cost: 0,\r\n        vat: 0,\r\n        payment_options: {\r\n            mbok: {\r\n                account_no: \"\",\r\n                account_owner_name: \"\",\r\n                bank_branch_name: \"\",\r\n            },\r\n            atm_card: {\r\n                card_no: \"\",\r\n                card_owner_name: \"\",\r\n                bank_name: \"\",\r\n            },\r\n        },\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"CVS Pharmacy\",\r\n        pharmacy_id: 1,\r\n        branch: \"Bhary Branch\",\r\n        phone_numbers: [\"+249965474441\", \"+249184757990\"],\r\n        email: \"cvs-pharma@cvs-pharma.com\",\r\n        website: \"http://www.cvs-pharma.com\",\r\n        state: \"khartoum\",\r\n        city: \"bhary\",\r\n        address: \"Al moasasha\",\r\n        lat: 51.784,\r\n        lng: 23.444,\r\n        created_at: \"01-08-2021 02:33:42 PM\",\r\n        status: \"rejected\",\r\n        owned_by: {\r\n            id: 2,\r\n            name: \"Mustafa Salah\",\r\n        },\r\n        support_delivery: false,\r\n        delivery_cost: 0,\r\n        vat: 0,\r\n        payment_options: {\r\n            mbok: {\r\n                account_no: \"\",\r\n                account_owner_name: \"\",\r\n                bank_branch_name: \"\",\r\n            },\r\n            atm_card: {\r\n                card_no: \"\",\r\n                card_owner_name: \"\",\r\n                bank_name: \"\",\r\n            },\r\n        },\r\n    },\r\n];\r\n\r\nexport const updatePharmacyBranch = ({\r\n    id,\r\n    branch,\r\n    phone_numbers,\r\n    email,\r\n    website,\r\n    state,\r\n    city,\r\n    address,\r\n    lat,\r\n    lng,\r\n}) => {\r\n    const editedPharmacyBranch = {\r\n        branch,\r\n        phone_numbers,\r\n        email,\r\n        website,\r\n        state,\r\n        city,\r\n        address,\r\n        lat: +lat,\r\n        lng: +lng,\r\n        status: \"pending\",\r\n    };\r\n    let selectedPharmacy = pharmacies.find((pharmacy) => pharmacy.id === id);\r\n    if (selectedPharmacy) {\r\n        selectedPharmacy = Object.assign(\r\n            selectedPharmacy,\r\n            editedPharmacyBranch\r\n        );\r\n    }\r\n    return Promise.resolve({ data: selectedPharmacy, status: 200 });\r\n};\r\n\r\nexport const setPharmacy = (\r\n    {\r\n        name,\r\n        branch,\r\n        phone_numbers,\r\n        email,\r\n        website,\r\n        state,\r\n        city,\r\n        address,\r\n        lat,\r\n        lng,\r\n    },\r\n    owner\r\n) => {\r\n    const newPharmacyBranch = {\r\n        id: pharmacies.length + 1,\r\n        name,\r\n        pharmacy_id: pharmacies.length + Math.round(Math.random() * 100),\r\n        branch,\r\n        phone_numbers: [...phone_numbers],\r\n        email,\r\n        website,\r\n        state,\r\n        city,\r\n        address,\r\n        lat: +lat,\r\n        lng: +lng,\r\n        created_at: new Date().toJSON(),\r\n        status: \"pending\",\r\n        owned_by: {\r\n            id: owner.id,\r\n            name: owner.name,\r\n        },\r\n        support_delivery: false,\r\n        delivery_cost: 0,\r\n        vat: 0,\r\n        payment_options: {\r\n            mbok: {\r\n                account_no: \"\",\r\n                account_owner_name: \"\",\r\n                bank_branch_name: \"\",\r\n            },\r\n            atm_card: {\r\n                card_no: \"\",\r\n                card_owner_name: \"\",\r\n                bank_name: \"\",\r\n            },\r\n        },\r\n    };\r\n\r\n    pharmacies.push(newPharmacyBranch);\r\n\r\n    return Promise.resolve({\r\n        data: newPharmacyBranch,\r\n        status: 200,\r\n    });\r\n};\r\n\r\nexport const setPharmacyBranch = ({\r\n    pharmacy_id,\r\n    name, // will not be send to http endpoint\r\n    branch,\r\n    phone_numbers,\r\n    email,\r\n    website,\r\n    state,\r\n    city,\r\n    address,\r\n    lat,\r\n    lng,\r\n}) => {\r\n    const newPharmacyBranch = {\r\n        id: pharmacies.length + Math.round(Math.random() * 100),\r\n        name,\r\n        pharmacy_id,\r\n        branch,\r\n        phone_numbers: [...phone_numbers],\r\n        email,\r\n        website,\r\n        state,\r\n        city,\r\n        address,\r\n        lat: +lat,\r\n        lng: +lng,\r\n        created_at: new Date().toJSON(),\r\n        status: \"pending\",\r\n        owned_by: {\r\n            id: store.loggedUser.id.get(),\r\n            name: `${store.loggedUser.first_name.get()} ${store.loggedUser.last_name.get()}`,\r\n        },\r\n        support_delivery: false,\r\n        delivery_cost: 0,\r\n        vat: 0,\r\n        payment_options: {\r\n            mbok: {\r\n                account_no: \"\",\r\n                account_owner_name: \"\",\r\n                bank_branch_name: \"\",\r\n            },\r\n            atm_card: {\r\n                card_no: \"\",\r\n                card_owner_name: \"\",\r\n                bank_name: \"\",\r\n            },\r\n        },\r\n    };\r\n\r\n    pharmacies.push(newPharmacyBranch);\r\n\r\n    return Promise.resolve({\r\n        data: newPharmacyBranch,\r\n        status: 200,\r\n    });\r\n};\r\n\r\nexport const getPharmaciesByOwner = (ownerId) => {\r\n    return Promise.resolve({\r\n        data: pharmacies.filter((pharmacy) => pharmacy.owned_by.id === ownerId),\r\n        status: 200,\r\n    });\r\n};\r\n\r\nexport const getPharmacyBranchByEmployee = (userId) => {\r\n    // return Promise.reject({ status: 404 });\r\n\r\n    return Promise.resolve({\r\n        data: pharmacies[0],\r\n        status: 200,\r\n    });\r\n};\r\n\r\nexport const getPharmacyBasicInfo = (ownerId) => {\r\n    const pharmacy = pharmacies.find(\r\n        (pharmacy) => pharmacy.owned_by.id === +ownerId\r\n    );\r\n    if (pharmacy === undefined) return Promise.reject({ status: 404 });\r\n\r\n    const { pharmacy_id, name, email, website } = pharmacy;\r\n\r\n    return Promise.resolve({\r\n        data: { pharmacy_id, name, email, website },\r\n        status: 200,\r\n    });\r\n};\r\n\r\nexport const getPharmacies = () => {\r\n    return Promise.resolve({ data: pharmacies });\r\n};\r\n\r\nexport const deletePharmacy = (id) => {\r\n    pharmacies = pharmacies.filter((pharmacy) => pharmacy.id !== id);\r\n    return Promise.resolve({ data: { id }, status: 200 });\r\n};\r\n\r\nexport const updatePharmacyStatus = async (id, status) => {\r\n    return await Promise.resolve({ data: { status }, status: 200 });\r\n};\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { login } from \"../../services/auth\";\r\nimport { notify } from \"../../utility\";\r\nimport AuthSectionHeader from \"../common/AuthSectionHeader\";\r\nimport AuthForm from \"../forms/AuthForm\";\r\nimport store from \"../../state\";\r\nimport PasswordAuthField from \"../common/PasswordAuthField\";\r\nimport UsernameAuthField from \"../forms/UsernameAuthField\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getPharmacyBranchByEmployee } from \"../../services/pharmacies\";\r\n\r\nconst Login = () => {\r\n    const { loggedUser, pharmacyBranch } = useState(store);\r\n    const loginForm = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const assignPharmacyBranch = async ({ id }) => {\r\n        try {\r\n            const { data: pharmacyBranchData } =\r\n                await getPharmacyBranchByEmployee(id);\r\n            pharmacyBranch.set(pharmacyBranchData);\r\n            return true;\r\n        } catch (ex) {\r\n            toast.error(\r\n                \"There is no pharmacy branch assigned to this employee!\"\r\n            );\r\n        }\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-10 w-96 mx-auto\">\r\n            <AuthSectionHeader name=\"Login\" />\r\n            <AuthForm\r\n                submitBtn={{\r\n                    label: \"Login\",\r\n                    faClass: \"fas fa-sign-in-alt\",\r\n                }}\r\n                footerLink={{\r\n                    link: \"/sign-up\",\r\n                    content: \"Don't have an account? Signup now\",\r\n                }}\r\n                onSubmit={async () => {\r\n                    const { username, password } = loginForm.get();\r\n                    const { data, status } = await login(username, password);\r\n\r\n                    if (status === 200) {\r\n                        if (\r\n                            data.role === \"supervisor\" ||\r\n                            data.role === \"pharmacist\"\r\n                        ) {\r\n                            if ((await assignPharmacyBranch(data)) === false)\r\n                                return;\r\n                        } else if (data.role === \"user\") {\r\n                            return toast.error(\r\n                                \"You don't have permission to access.\"\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    notify({\r\n                        status,\r\n                        waitMsg: \"Logging you in...\",\r\n                        successMsg: data ? (\r\n                            <>\r\n                                Welcome Back{\" \"}\r\n                                <strong className=\"font-semibold\">\r\n                                    {data.first_name} {data.last_name}!\r\n                                </strong>\r\n                            </>\r\n                        ) : (\r\n                            \"\"\r\n                        ),\r\n                        async successCallback() {\r\n                            // Set loggedUser state\r\n                            loggedUser.set(data);\r\n\r\n                            // redirect to home page\r\n                            history.replace(\"/\");\r\n                        },\r\n                        errorMsg:\r\n                            \"The username or the password is incorrect, please try again\",\r\n                        errorCallback() {\r\n                            loginForm.password.set(\"\");\r\n                        },\r\n                    });\r\n                }}\r\n            >\r\n                <UsernameAuthField value={loginForm.username} />\r\n                <PasswordAuthField value={loginForm.password} />\r\n\r\n                <Link to=\"/forget-password\" className=\"text-xs italic -mt-2.5\">\r\n                    Forgetten password?\r\n                </Link>\r\n            </AuthForm>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"@hookstate/core\";\r\nimport AuthSectionHeader from \"../common/AuthSectionHeader\";\r\nimport AuthForm from \"../forms/AuthForm\";\r\nimport PasswordAuthField from \"../common/PasswordAuthField\";\r\nimport { resetPassword, verifyToken } from \"../../services/auth\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { notify } from \"../../utility\";\r\nimport SuccessPage from \"../common/SuccessPage\";\r\n\r\nconst ResetPassword = () => {\r\n    const resetPasswordForm = useState({\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n    });\r\n\r\n    const showSuccessPage = useState(false);\r\n    const { token } = useParams();\r\n    const history = useHistory();\r\n\r\n    // Token Verification\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { status } = await verifyToken(token);\r\n            // if token is invalid redirect user into forget password page\r\n            if (status !== 200) history.replace(\"/forget-password\");\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className={`mt-10 mx-auto ${\r\n                showSuccessPage.value ? \"max-w-xl\" : \"w-96\"\r\n            }`}\r\n        >\r\n            {showSuccessPage.value ? (\r\n                <SuccessPage\r\n                    title=\"your password has been reset successfully!\"\r\n                    redirect={{ link: \"/login\", pageName: \"Login Page\" }}\r\n                ></SuccessPage>\r\n            ) : (\r\n                <>\r\n                    <AuthSectionHeader name=\"Reset My Password\" />\r\n                    <AuthForm\r\n                        submitBtn={{\r\n                            label: \"Reset My Password\",\r\n                            faClass: \"fas fa-redo\",\r\n                        }}\r\n                        footerLink={{\r\n                            link: \"/sign-up\",\r\n                            content: \"Don't have an account? Signup now\",\r\n                        }}\r\n                        onSubmit={async () => {\r\n                            const { status } = await resetPassword(\r\n                                token,\r\n                                resetPasswordForm.password.get()\r\n                            );\r\n                            notify({\r\n                                status,\r\n                                successCallback() {\r\n                                    showSuccessPage.set(true);\r\n                                },\r\n                                errorMsg:\r\n                                    \"This link to reset password is invalid! you will be redirected to forget password page.\",\r\n                                errorCallback() {\r\n                                    window.setTimeout(\r\n                                        () =>\r\n                                            history.replace(\"/forget-password\"),\r\n                                        5000\r\n                                    );\r\n                                },\r\n                            });\r\n                        }}\r\n                    >\r\n                        <PasswordAuthField\r\n                            label=\"new password\"\r\n                            value={resetPasswordForm.password}\r\n                        />\r\n\r\n                        <PasswordAuthField\r\n                            name=\"confirm_password\"\r\n                            label=\"confirm new password\"\r\n                            id=\"confirm_password\"\r\n                            value={resetPasswordForm.confirm_password}\r\n                            confirmation={resetPasswordForm.password.value}\r\n                        />\r\n                    </AuthForm>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\r\n\r\nconst SignupChoice = ({ label, icon, title, onSelect }) => {\r\n    return (\r\n        <button\r\n            className=\"group animate__animated animate__faster animate__zoomIn\"\r\n            title={title}\r\n            onClick={onSelect}\r\n        >\r\n            <span className=\"text-shadow block bg-white text-primary group-hover:text-white group-hover:bg-primary shadow-md rounded py-10 text-center w-36\">\r\n                <i className={`${icon} text-5xl transition-none`}></i>\r\n            </span>\r\n            <strong className=\"text-shadow mt-3 font-semibold inline-block group-hover:text-primary\">\r\n                {label}\r\n            </strong>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SignupChoice;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Wrapper } from \"@googlemaps/react-wrapper\";\r\nimport { useDeepCompareEffectForMaps } from \"../utility\";\r\n\r\nconst GoogleMap = ({\r\n    label = \"Location\",\r\n    className,\r\n    required = true,\r\n    coordinates,\r\n    immutable = false,\r\n    initZoom = 10,\r\n}) => {\r\n    const position = {\r\n        lat: coordinates.lat.get(),\r\n        lng: coordinates.lng.get(),\r\n    };\r\n\r\n    const [zoom, setZoom] = useState(initZoom);\r\n\r\n    const markHandler = ({ latLng }) => {\r\n        coordinates.lat.set(latLng.lat);\r\n        coordinates.lng.set(latLng.lng);\r\n    };\r\n\r\n    const idleHandler = (m) => {\r\n        setZoom(m.getZoom());\r\n    };\r\n\r\n    return (\r\n        <div className={className}>\r\n            <label className=\"mb-2 block font-medium capitalize\">\r\n                {label}\r\n                {required ? (\r\n                    <span className=\"text-red ml-0.5\">*</span>\r\n                ) : undefined}\r\n            </label>\r\n\r\n            <Wrapper\r\n                apiKey=\"AIzaSyBAnn3NbbCpXNdOS313q5Ic2oOfP-69pus\"\r\n                render={(status) => (\r\n                    <h1>\r\n                        {status === \"FAILURE\"\r\n                            ? \"No Internet Connection!\"\r\n                            : status}\r\n                    </h1>\r\n                )}\r\n            >\r\n                <Map\r\n                    center={position}\r\n                    zoom={zoom}\r\n                    onClick={immutable || markHandler}\r\n                    onIdle={idleHandler}\r\n                >\r\n                    <Marker position={position} />\r\n                </Map>\r\n            </Wrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Map = ({ children, style, onClick, onIdle, onDrag, ...options }) => {\r\n    const ref = useRef(null);\r\n    const [map, setMap] = useState();\r\n\r\n    useEffect(() => {\r\n        if (ref.current && !map) {\r\n            setMap(new window.google.maps.Map(ref.current, options));\r\n        }\r\n    }, [ref, map]);\r\n\r\n    // because React does not do deep comparisons, a custom hook is used\r\n    // see discussion in https://github.com/googlemaps/js-samples/issues/946\r\n    useDeepCompareEffectForMaps(() => {\r\n        if (map) {\r\n            map.setOptions(options);\r\n        }\r\n    }, [map, options]);\r\n\r\n    useEffect(() => {\r\n        if (map) {\r\n            [\"click\", \"idle\"].forEach((eventName) =>\r\n                window.google.maps.event.clearListeners(map, eventName)\r\n            );\r\n\r\n            onClick && map.addListener(\"click\", onClick);\r\n            onIdle && map.addListener(\"idle\", () => onIdle(map));\r\n        }\r\n    }, [map, onClick, onIdle, onDrag]);\r\n\r\n    return (\r\n        <>\r\n            <div ref={ref} className=\"w-full h-80 shadow-md rounded\" />\r\n            {React.Children.map(children, (child) => {\r\n                if (React.isValidElement(child)) {\r\n                    // set the map prop on the child component\r\n                    return React.cloneElement(child, { map });\r\n                }\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nconst Marker = (options) => {\r\n    const [marker, setMarker] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!marker) {\r\n            setMarker(new window.google.maps.Marker());\r\n        }\r\n\r\n        // remove marker from map on unmount\r\n        return () => {\r\n            if (marker) {\r\n                marker.setMap(null);\r\n            }\r\n        };\r\n    }, [marker]);\r\n\r\n    useEffect(() => {\r\n        if (marker) {\r\n            marker.setOptions(options);\r\n        }\r\n    }, [marker, options]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default GoogleMap;\r\n","import React from \"react\";\r\nimport AuthFormField from \"../forms/AuthFormField\";\r\n\r\nconst PhoneNumberAuthField = (props) => {\r\n    return (\r\n        <AuthFormField\r\n            label=\"phone number\"\r\n            name=\"phone_number\"\r\n            type=\"tel\"\r\n            maxLength=\"13\"\r\n            pattern=\"\\+?249[19]\\d{8}\"\r\n            placeholder=\"e.g. +2499XXXXXXXX\"\r\n            icon=\"fas fa-phone\"\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PhoneNumberAuthField;\r\n","import React from \"react\";\r\nimport { getCityOptions } from \"../../utility\";\r\nimport GoogleMap from \"../GoogleMap\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport AuthFormField from \"./AuthFormField\";\r\nimport PhoneNumberAuthField from \"./PhoneNumberAuthField\";\r\n\r\nconst PharmacyRegisterationForm = ({ formState, onSubmit }) => {\r\n    return (\r\n        <AuthForm\r\n            submitBtn={{\r\n                label: \"Submit Pharmacy Information\",\r\n                faClass: \"fas fa-paper-plane\",\r\n                className: \"w-72 mx-auto-important block\",\r\n            }}\r\n            footerLink={{\r\n                link: \"/login\",\r\n                content: \"Do you have an account? Login now\",\r\n            }}\r\n            className=\"grid grid-cols-2 gap-6\"\r\n            onSubmit={onSubmit}\r\n        >\r\n            <AuthFormField\r\n                name=\"pharmacy_name\"\r\n                label=\"pharmacy name\"\r\n                id=\"pharmacy_name\"\r\n                value={formState.name}\r\n                placeholder=\"e.g. CVS Pharmacy\"\r\n                minLength=\"2\"\r\n                required\r\n            />\r\n            <AuthFormField\r\n                name=\"branch_name\"\r\n                label=\"branch name\"\r\n                id=\"branch_name\"\r\n                value={formState.branch}\r\n                placeholder=\"e.g. Khartoum Branch\"\r\n            />\r\n            <PhoneNumberAuthField\r\n                name=\"phone_number_1\"\r\n                label=\"phone number 1\"\r\n                id=\"phone_number_1\"\r\n                value={formState.phone_numbers[0]}\r\n                required\r\n            />\r\n            <PhoneNumberAuthField\r\n                name=\"phone_number_2\"\r\n                label=\"phone number 2\"\r\n                id=\"phone_number_2\"\r\n                value={formState.phone_numbers[1]}\r\n            />\r\n            <AuthFormField\r\n                name=\"pharmacy_email\"\r\n                label=\"pharmacy email\"\r\n                id=\"pharmacy_email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                placeholder=\"e.g. examle@example.com\"\r\n                icon=\"fas fa-envelope\"\r\n            />\r\n            <AuthFormField\r\n                name=\"pharmacy_website\"\r\n                label=\"pharmacy website\"\r\n                id=\"pharmacy_website\"\r\n                value={formState.website}\r\n                type=\"url\"\r\n                placeholder=\"e.g. www.example.com\"\r\n                icon=\"fas fa-globe\"\r\n            />\r\n            <AuthFormField\r\n                label=\"state\"\r\n                name=\"state\"\r\n                type=\"select\"\r\n                id=\"state\"\r\n                value={formState.state}\r\n                options={[{ label: \"Khartoum\", value: \"khartoum\" }]}\r\n                required\r\n            />\r\n            <AuthFormField\r\n                name=\"city\"\r\n                label=\"city\"\r\n                id=\"city\"\r\n                value={formState.city}\r\n                type=\"select\"\r\n                options={getCityOptions()}\r\n                placeholder=\"city name here...\"\r\n                required\r\n            />\r\n            <AuthFormField\r\n                className=\"col-span-2\"\r\n                label=\"address\"\r\n                name=\"address\"\r\n                id=\"address\"\r\n                value={formState.address}\r\n                placeholder=\"address line here...\"\r\n                required\r\n            />\r\n            <GoogleMap\r\n                className=\"col-span-2\"\r\n                coordinates={{ lat: formState.lat, lng: formState.lng }}\r\n                initZoom={9}\r\n            />\r\n        </AuthForm>\r\n    );\r\n};\r\n\r\nexport default PharmacyRegisterationForm;\r\n","import React from \"react\";\r\nimport PasswordAuthField from \"../common/PasswordAuthField\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport AuthFormField from \"./AuthFormField\";\r\nimport PhoneNumberAuthField from \"./PhoneNumberAuthField\";\r\nimport UsernameAuthField from \"./UsernameAuthField\";\r\n\r\nconst SignupForm = ({ formState, onSubmit }) => {\r\n    return (\r\n        <AuthForm\r\n            submitBtn={{\r\n                label: \"Create Account\",\r\n                faClass: \"fas fa-user-plus\",\r\n                className: \"w-72 mx-auto-important block\",\r\n            }}\r\n            footerLink={{\r\n                link: \"/login\",\r\n                content: \"Do you have an account? Login now\",\r\n            }}\r\n            className=\"grid grid-cols-2 gap-6\"\r\n            onSubmit={onSubmit}\r\n        >\r\n            <AuthFormField\r\n                name=\"first_name\"\r\n                label=\"first name\"\r\n                id=\"firstname\"\r\n                value={formState.first_name}\r\n                placeholder=\"e.g. Mustafa\"\r\n                minLength=\"2\"\r\n                maxLength=\"20\"\r\n                pattern=\"[^\\d\\s]+\"\r\n                required\r\n            />\r\n\r\n            <AuthFormField\r\n                name=\"last_name\"\r\n                label=\"last name\"\r\n                id=\"lastname\"\r\n                value={formState.last_name}\r\n                placeholder=\"e.g. Salah\"\r\n                minLength=\"2\"\r\n                maxLength=\"20\"\r\n                pattern=\"[^\\d\\s]+\"\r\n                required\r\n            />\r\n\r\n            <UsernameAuthField value={formState.username} required />\r\n\r\n            <AuthFormField\r\n                name=\"email\"\r\n                label=\"email\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                placeholder=\"e.g. examle@example.com\"\r\n                icon=\"fas fa-envelope\"\r\n                required\r\n            />\r\n\r\n            <PasswordAuthField value={formState.password} required />\r\n\r\n            <PasswordAuthField\r\n                name=\"confirm_password\"\r\n                label=\"confirm password\"\r\n                id=\"confirm_password\"\r\n                value={formState.confirm_password}\r\n                confirmation={formState.password.value}\r\n                icon=\"fas fa-check-double\"\r\n                required\r\n            />\r\n\r\n            <PhoneNumberAuthField\r\n                id=\"phone_number\"\r\n                value={formState.phone_number}\r\n                required\r\n            />\r\n\r\n            <AuthFormField\r\n                name=\"gender\"\r\n                label=\"gender\"\r\n                id=\"gender\"\r\n                type=\"radio\"\r\n                value={formState.gender}\r\n                options={[\r\n                    {\r\n                        label: \"Male\",\r\n                        value: \"m\",\r\n                    },\r\n                    {\r\n                        label: \"Female\",\r\n                        value: \"f\",\r\n                    },\r\n                ]}\r\n            />\r\n        </AuthForm>\r\n    );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\n\r\nconst StepsProgress = ({ steps, currentStep }) => {\r\n    return (\r\n        <div className=\"my-10 animate__animated animate__faster animate__backInDown\">\r\n            <div className=\"flex items-center mb-3 px-8\">\r\n                {steps.map((title, i) => {\r\n                    const no = i + 1;\r\n                    if (steps.length - 1 !== i) {\r\n                        return (\r\n                            <>\r\n                                <span\r\n                                    className={`${\r\n                                        currentStep.value === 2 && no === 1\r\n                                            ? \"cursor-pointer\"\r\n                                            : \"\"\r\n                                    } select-none shadow w-10 h-10 inline-block rounded-full text-white text-xl text-center font-semibold leading-10 ${\r\n                                        no <= currentStep.value\r\n                                            ? \"bg-primary\"\r\n                                            : \"bg-bright\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                        if (\r\n                                            currentStep.value === 2 &&\r\n                                            no === 1\r\n                                        ) {\r\n                                            currentStep.set(1);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {no}\r\n                                </span>\r\n                                <span\r\n                                    className={`select-none h-2 flex-grow shadow ${\r\n                                        no < currentStep.value\r\n                                            ? \"bg-primary\"\r\n                                            : \"bg-gray-200\"\r\n                                    }`}\r\n                                ></span>\r\n                            </>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <span\r\n                            className={`text-shadow select-none shadow w-10 h-10 inline-block rounded-full text-white text-xl text-center font-semibold leading-10 ${\r\n                                no <= currentStep.value\r\n                                    ? \"bg-primary\"\r\n                                    : \"bg-bright\"\r\n                            }`}\r\n                        >\r\n                            {no}\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"flex items-center justify-around\">\r\n                {steps.map((title, i) => {\r\n                    const no = i + 1;\r\n                    return (\r\n                        <span\r\n                            className={`capitalize font-semibold w-1/${\r\n                                steps.length\r\n                            } text-smd ${\r\n                                no <= currentStep.value ? \"\" : \"text-gray-500\"\r\n                            } ${\r\n                                no > 1 && no < steps.length\r\n                                    ? \"text-center\"\r\n                                    : no === steps.length\r\n                                    ? \"text-right\"\r\n                                    : \"\"\r\n                            }`}\r\n                        >\r\n                            {title}\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StepsProgress;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { signup } from \"../../services/auth\";\r\nimport { setPharmacy } from \"../../services/pharmacies\";\r\nimport { notify } from \"../../utility\";\r\nimport AuthSectionHeader from \"../common/AuthSectionHeader\";\r\nimport SignupChoice from \"../common/SignupChoice\";\r\nimport SuccessPage from \"../common/SuccessPage\";\r\nimport PharmacyRegisterationForm from \"../forms/PharmacyRegisterationForm\";\r\nimport SignupForm from \"../forms/SignupForm\";\r\nimport StepsProgress from \"../StepsProgress\";\r\n\r\nconst Signup = () => {\r\n    const signupProgress = useState({\r\n        type: \"\",\r\n        step: 1,\r\n    });\r\n\r\n    const signupForm = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n        email: \"\",\r\n        phone_number: \"\",\r\n        gender: \"\",\r\n    });\r\n\r\n    const pharmacyRegisterationForm = useState({\r\n        name: \"\",\r\n        branch: \"\",\r\n        phone_numbers: [\"\", \"\"],\r\n        email: \"\",\r\n        website: \"\",\r\n        state: \"khartoum\",\r\n        city: \"\",\r\n        address: \"\",\r\n        lat: 15.4838,\r\n        lng: 32.5339,\r\n    });\r\n\r\n    let createdUser = useRef();\r\n\r\n    const renderStep = useCallback(() => {\r\n        const { type, step } = signupProgress;\r\n        if (type.get() === \"\" && step.get() > 1) step.set(1);\r\n\r\n        switch (step.value) {\r\n            case 1:\r\n                return (\r\n                    <div className=\"flex justify-center gap-x-10 mb-10\">\r\n                        <SignupChoice\r\n                            label=\"Customer\"\r\n                            icon=\"fas fa-hospital-user\"\r\n                            title=\"Sign up as normal user\"\r\n                            onSelect={() => {\r\n                                type.set(\"user\");\r\n                                step.set(2);\r\n                            }}\r\n                        />\r\n                        <SignupChoice\r\n                            label=\"Pharmacy Owner\"\r\n                            icon=\"fas fa-clinic-medical\"\r\n                            title=\"Sign up as pharmacy owner\"\r\n                            onSelect={() => {\r\n                                type.set(\"pharmacy owner\");\r\n                                step.set(2);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            case 2:\r\n                return (\r\n                    <SignupForm\r\n                        formState={signupForm}\r\n                        haveNextBtn={type.value === \"pharmacy owner\"}\r\n                        onSubmit={async () => {\r\n                            const { data, status } = await signup({\r\n                                role: type.value,\r\n                                ...signupForm.get(),\r\n                            });\r\n\r\n                            notify({\r\n                                status,\r\n                                successMsg:\r\n                                    type.value === \"pharmacy owner\"\r\n                                        ? \"Your account has been created successfully!\"\r\n                                        : \"\",\r\n                                successCallback() {\r\n                                    if (type.value === \"pharmacy owner\") {\r\n                                        createdUser.current = {\r\n                                            id: data.id,\r\n                                            name: `${data.first_name} ${data.last_name}`,\r\n                                        };\r\n                                        step.set(3);\r\n                                    } else {\r\n                                        step.set(4);\r\n                                    }\r\n                                },\r\n                            });\r\n                        }}\r\n                    />\r\n                );\r\n\r\n            case 3:\r\n                return (\r\n                    <PharmacyRegisterationForm\r\n                        formState={pharmacyRegisterationForm}\r\n                        onSubmit={async () => {\r\n                            const { data, status } = await setPharmacy(\r\n                                pharmacyRegisterationForm.get(),\r\n                                createdUser.current\r\n                            );\r\n\r\n                            notify({\r\n                                status,\r\n                                successCallback() {\r\n                                    step.set(4);\r\n                                },\r\n                            });\r\n                        }}\r\n                    />\r\n                );\r\n\r\n            case 4:\r\n                return (\r\n                    <SuccessPage\r\n                        title=\"Your are Signed up Successfully!\"\r\n                        redirect={{ link: \"/login\", pageName: \"Login Page\" }}\r\n                    >\r\n                        You will be receiving an activation link into your email\r\n                        to activate your account.\r\n                    </SuccessPage>\r\n                );\r\n        }\r\n    }, [signupProgress.value]);\r\n\r\n    return (\r\n        <div className=\"mt-10 max-w-xl mx-auto\">\r\n            {signupProgress.step.value !== 4 && (\r\n                <AuthSectionHeader name=\"Signup\" />\r\n            )}\r\n            {signupProgress.type.value !== \"\" &&\r\n                signupProgress.step.value > 1 && (\r\n                    <StepsProgress\r\n                        steps={\r\n                            signupProgress.type.value === \"user\"\r\n                                ? [\r\n                                      \"select account type\",\r\n                                      \"fill account info\",\r\n                                      \"sign up done!\",\r\n                                  ]\r\n                                : [\r\n                                      \"select account type\",\r\n                                      \"fill account info\",\r\n                                      \"fill pharmacy info\",\r\n                                      \"sign up done!\",\r\n                                  ]\r\n                        }\r\n                        currentStep={signupProgress.step}\r\n                    />\r\n                )}\r\n            {renderStep()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport ForgetPassword from \"./pages/ForgetPassword\";\r\nimport Login from \"./pages/Login\";\r\nimport ResetPassword from \"./pages/ResetPassword\";\r\nimport Signup from \"./pages/Signup\";\r\n\r\nconst Authentication = () => {\r\n    return (\r\n        <>\r\n            {/* <TopBar withLogo /> */}\r\n            <main\r\n                className=\"border border-trans\"\r\n                style={{ minHeight: \"calc(100vh - 77px)\" }}\r\n            >\r\n                <div className=\"w-56 mx-auto mt-10\">\r\n                    <Link to=\"/\">\r\n                        <img\r\n                            src=\"/assets/images/logo-2.svg\"\r\n                            alt=\"Pharma Logo\"\r\n                        />\r\n                    </Link>\r\n                </div>\r\n\r\n                <Switch>\r\n                    <Route path=\"/forget-password\" component={ForgetPassword} />\r\n                    <Route\r\n                        path=\"/reset-password/:token\"\r\n                        component={ResetPassword}\r\n                    />\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/sign-up\" component={Signup} />\r\n                    <Redirect to=\"/login\" />\r\n                </Switch>\r\n            </main>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Authentication;\r\n","import http from \"./http\";\r\n\r\nlet employees = [\r\n    {\r\n        id: 1,\r\n        full_name: \"Mustafa Salah\",\r\n        username: \"mustafa_salah\",\r\n        phone_number: \"+249965474730\",\r\n        gender: \"m\",\r\n        status: \"approve\",\r\n        role: \"pharmacy owner\",\r\n        work_from: \"\",\r\n        work_to: \"\",\r\n        last_seen: \"4 hours ago\",\r\n        joining_date: \"12-10-2019\",\r\n    },\r\n    {\r\n        id: 2,\r\n        full_name: \"Ali Osman Adel\",\r\n        username: \"ali_osman\",\r\n        phone_number: \"+249125474650\",\r\n        gender: \"m\",\r\n        status: \"approve\",\r\n        role: \"supervisor\",\r\n        work_from: \"15:00\",\r\n        work_to: \"21:00\",\r\n        last_seen: \"online\",\r\n        joining_date: \"10-02-2020\",\r\n    },\r\n    {\r\n        id: 3,\r\n        full_name: \"Sarah Mohamed\",\r\n        username: \"sarah99\",\r\n        phone_number: \"+249121297730\",\r\n        gender: \"f\",\r\n        status: \"approve\",\r\n        role: \"pharmacist\",\r\n        work_from: \"07:00\",\r\n        work_to: \"15:00\",\r\n        last_seen: \"18 hours ago\",\r\n        joining_date: \"22-05-2020\",\r\n    },\r\n];\r\n\r\nexport const getEmployees = (pharmacy_branch_id) => {\r\n    return Promise.resolve({ data: employees, status: 200 });\r\n};\r\n\r\nexport const deleteEmployee = async (id) => {\r\n    employees = employees.filter((emp) => emp.id !== id);\r\n    return Promise.resolve({ data: { id }, status: 200 });\r\n};\r\n\r\nexport const setEmployee = ({\r\n    full_name, // will not be send\r\n    username, // will not be send\r\n    phone_number, // will not be send\r\n    gender, // will not be send\r\n    role,\r\n    work_from,\r\n    work_to,\r\n}) => {\r\n    const data = {\r\n        pharmacyBranchId: 1,\r\n        full_name,\r\n        username,\r\n        phone_number,\r\n        gender,\r\n        role,\r\n        work_from,\r\n        work_to,\r\n    };\r\n\r\n    const newEmployee = {\r\n        id: employees.length + Math.round(Math.random() * 100),\r\n        joining_date: new Date()\r\n            .toJSON()\r\n            .slice(0, 10)\r\n            .split(\"-\")\r\n            .reverse()\r\n            .join(\"-\"),\r\n        last_seen: \"\",\r\n        status: \"pending\",\r\n        ...data,\r\n    };\r\n\r\n    employees.push(newEmployee);\r\n\r\n    return Promise.resolve({\r\n        data: newEmployee,\r\n        status: 200,\r\n    });\r\n};\r\n\r\nexport const updateEmployee = ({\r\n    id,\r\n    full_name, // will not be send\r\n    username, // will not be send\r\n    phone_number, // will not be send\r\n    gender, // will not be send\r\n    last_seen, // will not be send\r\n    joining_date, // will not be send\r\n    role,\r\n    work_from,\r\n    work_to,\r\n}) => {\r\n    const data = {\r\n        id,\r\n        full_name,\r\n        username,\r\n        phone_number,\r\n        gender,\r\n        role,\r\n        work_from,\r\n        work_to,\r\n        joining_date,\r\n        last_seen,\r\n    };\r\n\r\n    return Promise.resolve({ data: data, status: 200 });\r\n};\r\n","import http from \"./http\";\r\n\r\nexport let inventoryItems = [\r\n    {\r\n        id: 1,\r\n        name: \"Diarrhoea. Relief - Loperamide Capsules\",\r\n        barcode: \"1237980133840942\",\r\n        unit: \"6 Capsules\",\r\n        category: \"antibiotics\",\r\n        company: \"Diarrhoea\",\r\n        photo: \"/assets/images/5.jpg\",\r\n        cost: 1000,\r\n        price: 1200,\r\n        supplier: \"AbdAlaziz Medical\",\r\n        stock: 255,\r\n        reserved: 3,\r\n        arrival_date: \"2021-09-12\",\r\n        expire_date: \"2021-12-12\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Ovex Family Pack Tablets\",\r\n        barcode: \"358982077023700\",\r\n        unit: \"4x 100mg Tablets\",\r\n        category: \"antibiotics\",\r\n        company: \"Ovex\",\r\n        photo: \"/assets/images/3.jpg\",\r\n        cost: 1200,\r\n        price: 1400,\r\n        supplier: \"Abo Alra\",\r\n        stock: 95,\r\n        reserved: 1,\r\n        arrival_date: \"2021-12-22\",\r\n        expire_date: \"2022-05-22\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"ORS Rehydration Salts Lemon\",\r\n        barcode: \"2783904982340234\",\r\n        unit: \"12 Tablets\",\r\n        category: \"antibiotics\",\r\n        company: \"ORS\",\r\n        photo: \"/assets/images/2.jpg\",\r\n        cost: 300,\r\n        price: 450,\r\n        supplier: \"Abo Alra\",\r\n        stock: 34,\r\n        reserved: 0,\r\n        arrival_date: \"2021-11-12\",\r\n        expire_date: \"2022-04-12\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Flarin Ibuprofen 200mg Capsules\",\r\n        barcode: \"89348395759942\",\r\n        unit: \"12 Soft Capsules\",\r\n        category: \"antianxiety drugs\",\r\n        company: \"Flarin\",\r\n        photo: \"/assets/images/1.jpg\",\r\n        cost: 1000,\r\n        price: 1150,\r\n        supplier: \"AbdAlaziz Medical\",\r\n        stock: 0,\r\n        reserved: 0,\r\n        arrival_date: \"2021-09-02\",\r\n        expire_date: \"2021-12-02\",\r\n        online_order: false,\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Anadin Extra Caplets\",\r\n        barcode: \"78498475784922\",\r\n        unit: \"6 Capsules\",\r\n        category: \"antibacterials\",\r\n        company: \"Anadin\",\r\n        photo: \"/assets/images/4.jpg\",\r\n        cost: 600,\r\n        price: 800,\r\n        supplier: \"Pharma Medical\",\r\n        stock: 200,\r\n        reserved: 0,\r\n        arrival_date: \"2021-06-29\",\r\n        expire_date: \"2021-12-29\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Diarrhoea. Relief - Loperamide Capsules\",\r\n        barcode: \"1237980133840942\",\r\n        unit: \"6 Capsules\",\r\n        category: \"antibiotics\",\r\n        company: \"Diarrhoea\",\r\n        photo: \"/assets/images/5.jpg\",\r\n        cost: 1000,\r\n        price: 1200,\r\n        supplier: \"AbdAlaziz Medical\",\r\n        stock: 255,\r\n        reserved: 3,\r\n        arrival_date: \"2021-09-12\",\r\n        expire_date: \"2021-12-12\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Ovex Family Pack Tablets\",\r\n        barcode: \"1237d3434340942\",\r\n        unit: \"4x 100mg Tablets\",\r\n        category: \"antibiotics\",\r\n        company: \"Ovex\",\r\n        photo: \"/assets/images/3.jpg\",\r\n        cost: 1200,\r\n        price: 1400,\r\n        supplier: \"Abo Alra\",\r\n        stock: 95,\r\n        reserved: 1,\r\n        arrival_date: \"2021-12-22\",\r\n        expire_date: \"2022-05-22\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"ORS Rehydration Salts Lemon\",\r\n        barcode: \"2783904982340234\",\r\n        unit: \"12 Tablets\",\r\n        category: \"antibiotics\",\r\n        company: \"ORS\",\r\n        photo: \"/assets/images/2.jpg\",\r\n        cost: 300,\r\n        price: 450,\r\n        supplier: \"Abo Alra\",\r\n        stock: 34,\r\n        reserved: 0,\r\n        arrival_date: \"2021-11-12\",\r\n        expire_date: \"2022-04-12\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Flarin Ibuprofen 200mg Capsules\",\r\n        barcode: \"89348395759942\",\r\n        unit: \"12 Soft Capsules\",\r\n        category: \"antianxiety drugs\",\r\n        company: \"Flarin\",\r\n        photo: \"/assets/images/1.jpg\",\r\n        cost: 1000,\r\n        price: 1150,\r\n        supplier: \"AbdAlaziz Medical\",\r\n        stock: 0,\r\n        reserved: 0,\r\n        arrival_date: \"2021-09-02\",\r\n        expire_date: \"2021-12-02\",\r\n        online_order: false,\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Anadin Extra Caplets\",\r\n        barcode: \"78498475784922\",\r\n        unit: \"6 Capsules\",\r\n        category: \"antibacterials\",\r\n        company: \"Anadin\",\r\n        photo: \"/assets/images/4.jpg\",\r\n        cost: 600,\r\n        price: 800,\r\n        supplier: \"Pharma Medical\",\r\n        stock: 200,\r\n        reserved: 0,\r\n        arrival_date: \"2021-06-29\",\r\n        expire_date: \"2021-12-29\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Diarrhoea. Relief - Loperamide Capsules\",\r\n        barcode: \"1237980133840942\",\r\n        unit: \"6 Capsules\",\r\n        category: \"antibiotics\",\r\n        company: \"Diarrhoea\",\r\n        photo: \"/assets/images/5.jpg\",\r\n        cost: 1000,\r\n        price: 1200,\r\n        supplier: \"AbdAlaziz Medical\",\r\n        stock: 255,\r\n        reserved: 3,\r\n        arrival_date: \"2021-09-12\",\r\n        expire_date: \"2021-12-12\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Ovex Family Pack Tablets\",\r\n        barcode: \"582st32\",\r\n        unit: \"4x 100mg Tablets\",\r\n        category: \"antibiotics\",\r\n        company: \"Ovex\",\r\n        photo: \"/assets/images/3.jpg\",\r\n        cost: 1200,\r\n        price: 1400,\r\n        supplier: \"Abo Alra\",\r\n        stock: 95,\r\n        reserved: 1,\r\n        arrival_date: \"2021-12-22\",\r\n        expire_date: \"2022-05-22\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 13,\r\n        name: \"ORS Rehydration Salts Lemon\",\r\n        barcode: \"2783904982340234\",\r\n        unit: \"12 Tablets\",\r\n        category: \"antibiotics\",\r\n        company: \"ORS\",\r\n        photo: \"/assets/images/2.jpg\",\r\n        cost: 300,\r\n        price: 450,\r\n        supplier: \"Abo Alra\",\r\n        stock: 34,\r\n        reserved: 0,\r\n        arrival_date: \"2021-11-12\",\r\n        expire_date: \"2022-04-12\",\r\n        online_order: true,\r\n    },\r\n    {\r\n        id: 14,\r\n        name: \"Flarin Ibuprofen 200mg Capsules\",\r\n        barcode: \"89348395759942\",\r\n        unit: \"12 Soft Capsules\",\r\n        category: \"antianxiety drugs\",\r\n        company: \"Flarin\",\r\n        photo: \"/assets/images/1.jpg\",\r\n        cost: 1000,\r\n        price: 1150,\r\n        supplier: \"AbdAlaziz Medical\",\r\n        stock: 0,\r\n        reserved: 0,\r\n        arrival_date: \"2021-09-02\",\r\n        expire_date: \"2021-12-02\",\r\n        online_order: false,\r\n    },\r\n    {\r\n        id: 15,\r\n        name: \"Anadin Extra Caplets\",\r\n        barcode: \"78498475784922\",\r\n        unit: \"6 Capsules\",\r\n        category: \"antibacterials\",\r\n        company: \"Anadin\",\r\n        photo: \"/assets/images/4.jpg\",\r\n        cost: 600,\r\n        price: 800,\r\n        supplier: \"Pharma Medical\",\r\n        stock: 200,\r\n        reserved: 0,\r\n        arrival_date: \"2021-06-29\",\r\n        expire_date: \"2021-12-29\",\r\n        online_order: true,\r\n    },\r\n];\r\n\r\nexport const deleteInventoryItem = async (id) => {\r\n    inventoryItems = inventoryItems.filter((item) => item.id !== id);\r\n    return Promise.resolve({ data: { id }, status: 200 });\r\n};\r\n\r\nexport const setInventoryItem = async (item) => {\r\n    const data = {\r\n        pharmacyBranchId: 1,\r\n        productId: item.productId,\r\n        cost: item.cost,\r\n        price: item.price,\r\n        arrival_date: item.arrival_date,\r\n        expire_date: item.expire_date,\r\n        online_order: item.online_order,\r\n        stock: item.stock,\r\n        reserved: item.reserved,\r\n        supplier: item.supplier,\r\n    };\r\n\r\n    const response = await Promise.resolve({\r\n        data: {\r\n            id: inventoryItems.length + Math.round(Math.random() * 100),\r\n            ...item,\r\n        },\r\n        status: 200,\r\n    });\r\n\r\n    inventoryItems.push(response.data);\r\n    return response;\r\n    // return await http.post(\"https://jsonplaceholder.typicode.com/posts\", data);\r\n};\r\n\r\nexport const updateInventoryItem = async ({\r\n    id,\r\n    cost,\r\n    price,\r\n    arrival_date,\r\n    expire_date,\r\n    online_order,\r\n    stock,\r\n    reserved,\r\n    supplier,\r\n}) => {\r\n    const data = {\r\n        cost,\r\n        price,\r\n        arrival_date,\r\n        expire_date,\r\n        online_order,\r\n        stock,\r\n        reserved,\r\n        supplier,\r\n    };\r\n\r\n    return await http.put(\r\n        `https://jsonplaceholder.typicode.com/posts/${id}`,\r\n        data\r\n    );\r\n};\r\n\r\nexport const getInventoryItems = async () => {\r\n    return await Promise.resolve({ data: inventoryItems, status: 200 });\r\n};\r\n","import http from \"./http\";\r\n\r\nlet notifications = [\r\n    {\r\n        id: 1,\r\n        type: \"new_order\",\r\n        data: {\r\n            id: 1,\r\n            user: \"Mustafa Salah\",\r\n        },\r\n    },\r\n    {\r\n        id: 2,\r\n        type: \"new_pharmacy\",\r\n        data: {\r\n            id: 3,\r\n            name: \"CVS Pharmacy\",\r\n            owner: \"Mustafa Salah\",\r\n        },\r\n    },\r\n    {\r\n        id: 3,\r\n        type: \"new_branch\",\r\n        data: {\r\n            id: 3,\r\n            name: \"CVS Pharmacy\",\r\n            branch: \"Bhary Branch\",\r\n            owner: \"Mustafa Salah\",\r\n        },\r\n    },\r\n    {\r\n        id: 4,\r\n        type: \"out_of_stock\",\r\n        data: {\r\n            id: 1,\r\n            name: \"Diarrhoea. Relief - Loperamide Capsules\",\r\n        },\r\n    },\r\n    {\r\n        id: 5,\r\n        type: \"expire_soon\",\r\n        data: {\r\n            id: 2,\r\n            name: \"Ovex Family Pack Tablets\",\r\n            duration: 10, // days\r\n        },\r\n    },\r\n    {\r\n        id: 6,\r\n        type: \"expired\",\r\n        data: {\r\n            id: 3,\r\n            name: \"ORS Rehydration Salts Lemon\",\r\n        },\r\n    },\r\n];\r\n\r\nexport const getPharmaciesNotifications = () => {\r\n    return Promise.resolve({\r\n        data: notifications.filter(\r\n            (notification) =>\r\n                notification.type === \"new_pharmacy\" ||\r\n                notification.type === \"new_branch\"\r\n        ),\r\n    });\r\n};\r\n\r\nexport const getNotifications = () => {\r\n    return Promise.resolve({\r\n        data: notifications.filter(\r\n            (notification) =>\r\n                notification.type !== \"new_pharmacy\" &&\r\n                notification.type !== \"new_branch\"\r\n        ),\r\n    });\r\n};\r\n\r\nexport const deleteNotification = (id) => {\r\n    notifications = notifications.filter(\r\n        (notification) => notification.id !== id\r\n    );\r\n\r\n    return Promise.resolve({\r\n        status: 200,\r\n    });\r\n};\r\n","import store from \"../state\";\r\nimport http from \"./http\";\r\n\r\nconst orders = [\r\n    {\r\n        id: 23820,\r\n        type: \"local\",\r\n        status: \"finished\",\r\n        handled_by: {\r\n            id: 1,\r\n            name: \"Mustafa Salah\",\r\n        },\r\n        date: \"24-09-2021 12:34:03 PM\",\r\n        payment: {\r\n            method: \"cash\",\r\n            proof: \"\",\r\n        },\r\n        products: [\r\n            {\r\n                name: \"Diarrhoea. Relief - Loperamide Capsules\",\r\n                qty: 1,\r\n                price: 1200,\r\n            },\r\n            {\r\n                name: \"Ovex Family Pack Tablets\",\r\n                qty: 2,\r\n                price: 1400,\r\n            },\r\n        ],\r\n        products_amount: 5400,\r\n        discount: 0,\r\n        vat: 0,\r\n        delivery: 0,\r\n    },\r\n    {\r\n        id: 12038,\r\n        type: \"online\",\r\n        status: \"pending\",\r\n        handled_by: {\r\n            id: \"\",\r\n            name: \"\",\r\n        },\r\n        date: \"24-09-2021 12:34:03 PM\",\r\n        payment: {\r\n            method: \"MBOK\",\r\n            proof: \"/assets/images/pay.jpg\",\r\n        },\r\n        products: [\r\n            {\r\n                name: \"ORS Rehydration Salts Lemon\",\r\n                qty: 3,\r\n                price: 450,\r\n            },\r\n        ],\r\n        products_amount: 1350,\r\n        discount: 0,\r\n        vat: 0,\r\n        delivery: 2000,\r\n    },\r\n];\r\n\r\nexport const getOrders = () => {\r\n    return Promise.resolve({ data: orders, status: 200 });\r\n};\r\n\r\nexport const setOrder = (data) => {\r\n    const newOrder = {\r\n        id: orders.length + Math.round(Math.random() * 100),\r\n        payment: {\r\n            method: \"cash\",\r\n            proof: \"\",\r\n        },\r\n        delivery: 0,\r\n        ...data,\r\n    };\r\n\r\n    orders.push(newOrder);\r\n\r\n    return Promise.resolve({\r\n        data: newOrder,\r\n        status: 200,\r\n    });\r\n};\r\n\r\nexport const updateOrderStatus = (id, status) => {\r\n    const selectedOrder = orders.find((order) => order.id === id);\r\n    if (selectedOrder === undefined) return Promise.reject({ status: 404 });\r\n    selectedOrder.status = status;\r\n    selectedOrder.handled_by = {\r\n        id: store.loggedUser.id.get(),\r\n        name: `${store.loggedUser.first_name.get()} ${store.loggedUser.last_name.get()}`,\r\n    };\r\n    return Promise.resolve({ data: { status }, status: 200 });\r\n    // return await http.put(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n    //     status,\r\n    // });\r\n};\r\n","import store from \"../state\";\r\nimport http from \"./http\";\r\n\r\nexport let products = [\r\n    {\r\n        id: 1,\r\n        name: \"Diarrhoea. Relief - Loperamide Capsules\",\r\n        barcode: \"1237980133840942\",\r\n        unit: \"6 Capsules\",\r\n        category: \"antibiotics\",\r\n        company: \"Diarrhoea\",\r\n        photo: { url: \"/assets/images/5.jpg\", size: 123000 },\r\n        ingredient: \"loperamide hydrochloride\",\r\n        need_perspection: false,\r\n        description: \"\",\r\n        usage: \"\",\r\n        warnings: \"\",\r\n        side_effects: \"\",\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Ovex Family Pack Tablets\",\r\n        barcode: \"358982077023700\",\r\n        unit: \"4x 100mg Tablets\",\r\n        category: \"antibiotics\",\r\n        company: \"Ovex\",\r\n        photo: { url: \"/assets/images/3.jpg\", size: 86000 },\r\n        ingredient: \"mebendazole\",\r\n        need_perspection: false,\r\n        description: `Ovex Family Pack Tablets are a treatment for threadworms.\r\nIt can be taken by children as young as two years old and quickly works to irradicate threadworms. It is recommended that the treatment should be taken by the entire family at the same time.\r\nOvex Family tablets are to be taken orally.`,\r\n        usage: `Adults and children over 2 years: (excludes pregnant women)\r\n1 tablet chewed or swallowed whole. Not to be given under 2 years.`,\r\n        warnings:\r\n            \"Is not to be taken in pregnancy or by breastfeeding mothers.\",\r\n        side_effects:\r\n            \"Side effects are rare but should you experience any side effects report to your doctor or pharmacist.\",\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"ORS Rehydration Salts Lemon\",\r\n        barcode: \"2783904982340234\",\r\n        unit: \"12 Tablets\",\r\n        category: \"antibiotics\",\r\n        company: \"ORS\",\r\n        photo: { url: \"/assets/images/2.jpg\", size: 52000 },\r\n        ingredient: \"\",\r\n        need_perspection: false,\r\n        description: \"\",\r\n        usage: \"\",\r\n        warnings: \"\",\r\n        side_effects: \"\",\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Flarin Ibuprofen 200mg Capsules\",\r\n        barcode: \"89348395759942\",\r\n        unit: \"12 Soft Capsules\",\r\n        category: \"antianxiety drugs\",\r\n        company: \"Flarin\",\r\n        photo: {\r\n            url: \"/assets/images/1.jpg\",\r\n            size: 66000,\r\n        },\r\n        ingredient: \"Ibuprofen\",\r\n        need_perspection: true,\r\n        description: \"\",\r\n        usage: \"\",\r\n        warnings: \"\",\r\n        side_effects: \"\",\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Anadin Extra Caplets\",\r\n        barcode: \"78498475784922\",\r\n        unit: \"6 Capsules\",\r\n        category: \"antibacterials\",\r\n        company: \"Anadin\",\r\n        photo: {\r\n            url: \"/assets/images/4.jpg\",\r\n            size: 83000,\r\n        },\r\n        ingredient: \"Aspirin, Paracetamol\",\r\n        need_perspection: false,\r\n        description: \"\",\r\n        usage: \"\",\r\n        warnings: \"\",\r\n        side_effects: \"\",\r\n    },\r\n];\r\n\r\nexport const getProducts = async () => {\r\n    return await Promise.resolve({ data: products, status: 200 });\r\n};\r\n\r\nexport const deleteProduct = (id) => {\r\n    products = products.filter((product) => product.id !== id);\r\n    return Promise.resolve({ data: { id }, status: 200 });\r\n};\r\n\r\nexport const setProduct = async (data) => {\r\n    const response = await Promise.resolve({\r\n        data: {\r\n            id: products.length + Math.round(Math.random() * 100),\r\n            ...data,\r\n        },\r\n        status: 200,\r\n    });\r\n    products.push(response.data);\r\n    return response;\r\n    // return http.post(\"localhost\", data);\r\n};\r\n\r\nexport const updateProduct = (data) => {\r\n    return Promise.resolve({ data, status: 200 });\r\n    //return http.put(`localhost/${data.id}`, data);\r\n};\r\n\r\nexport const uploadProductPhoto = (id) => {\r\n    let image = \"\";\r\n    store.uploads.productPhoto.set((p) => {\r\n        image = p;\r\n        return p;\r\n    });\r\n\r\n    if (image === \"\") return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"product_id\", id);\r\n    formData.append(\"product_photo\", image);\r\n\r\n    return Promise.resolve({\r\n        status: 200,\r\n        data: { url: \"/assets/images/6.jpg\", size: 12334 },\r\n    });\r\n    //return http.put(`localhost/${id}`, formData);\r\n};\r\n","import React from \"react\";\r\n\r\nfunction Loading({\r\n    label = \"Loading\",\r\n    className = \"bg-gray-100 h-screen flex\",\r\n}) {\r\n    return (\r\n        <div className={className}>\r\n            <p className=\"text-center m-auto\">\r\n                <i className=\"fas fa-spinner text-primary animate-spin text-lg\"></i>\r\n                <strong className=\"font-medium block mt-2\">{label}</strong>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport store from \"../state\";\r\n\r\nconst CollapseBtn = ({ className = \"collapse-btn\" }) => {\r\n    const { collapseMenu } = useState(store);\r\n\r\n    return (\r\n        <button\r\n            title={\r\n                collapseMenu.value\r\n                    ? \"extend menu to its full size\"\r\n                    : \"collapse menu to its minimum size\"\r\n            }\r\n            id=\"collapse-btn\"\r\n            onClick={() => {\r\n                const newValue = !collapseMenu.value;\r\n                collapseMenu.set(newValue);\r\n                localStorage.setItem(\"collapse_menu\", newValue.toString());\r\n            }}\r\n            className={className}\r\n        >\r\n            <i\r\n                className={`fas fa-chevron-${\r\n                    collapseMenu.value ? \"right\" : \"left\"\r\n                }`}\r\n            ></i>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CollapseBtn;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport store from \"../state\";\r\nimport CollapseBtn from \"./CollapseBtn\";\r\n\r\nfunction Logo({\r\n    className = \"flex items-center py-6 border-b-2 border-r border-gray-200\",\r\n    withoutCollapseBtn = false,\r\n}) {\r\n    const { collapseMenu } = useState(store);\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div id=\"logo\" className=\"px-6\">\r\n                <Link className=\"block\" to=\"/\">\r\n                    {collapseMenu.value && !withoutCollapseBtn ? (\r\n                        <img\r\n                            src=\"/assets/images/favicon.svg\"\r\n                            alt=\"Pharma Logo\"\r\n                            style={{\r\n                                width: 47,\r\n                                height: 39.16,\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        <img\r\n                            src=\"/assets/images/logo.svg\"\r\n                            alt=\"Pharma Logo\"\r\n                            style={{\r\n                                width: 178.5,\r\n                                height: 37.19,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Link>\r\n            </div>\r\n            {!withoutCollapseBtn && !collapseMenu.value && <CollapseBtn />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst pagesName = new Map([\r\n    [\"/\", \"Dashboard\"],\r\n    [\"/my-pharmacies\", \"My Pharmacies\"],\r\n    [\"/inventory\", \"Inventory\"],\r\n    [\"/pharmacies\", \"Pharmacies\"],\r\n    [\"/products\", \"Products\"],\r\n    [\"/orders\", \"Orders\"],\r\n    [\"/pos\", \"Point of Sale\"],\r\n    [\"/staff\", \"Staff\"],\r\n    [\"/users\", \"Users\"],\r\n    [\"/pharmacy-settings\", \"Pharmacy Settings\"],\r\n    [\"/account-settings\", \"Account Settings\"],\r\n]);\r\n\r\nfunction PagePath() {\r\n    let { pathname } = useLocation();\r\n    pathname = \"/\" + pathname.split(\"/\")[1];\r\n\r\n    return (\r\n        <ul className=\"text-sm inline-flex items-center h-full pl-10\">\r\n            <li>\r\n                <Link to=\"/\">\r\n                    <i className=\"fas fa-home text-primary mr-2\"></i>\r\n                </Link>\r\n            </li>\r\n\r\n            <PagePathItem link={pathname} title={pagesName.get(pathname)} />\r\n        </ul>\r\n    );\r\n}\r\n\r\nfunction PagePathItem({ link = \"/\", title }) {\r\n    return (\r\n        <li>\r\n            <i className=\"fas fa-chevron-right text-xs text-gray-300 mr-2\"></i>\r\n            <Link to={link} className=\"font-medium capitalize\">\r\n                {title}\r\n            </Link>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default PagePath;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport store, { resetStore } from \"../state\";\r\n\r\nfunction AccountMenu() {\r\n    const { loggedUser, pharmacyBranch } = useState(store);\r\n\r\n    return (\r\n        <>\r\n            <li className=\"border-b-2 border-gray-200\">\r\n                <Link\r\n                    to=\"/account-settings\"\r\n                    className=\"px-5 py-4 font-semibold block hover:bg-gray-100\"\r\n                >\r\n                    <i className=\"fas fa-user-cog text-xs text-primary mr-2\" />\r\n                    Account Settings\r\n                </Link>\r\n            </li>\r\n\r\n            <li>\r\n                <button\r\n                    className=\"px-5 py-4 w-full text-left font-semibold block hover:bg-gray-100\"\r\n                    onClick={(e) => {\r\n                        const confirm = window.confirm(\r\n                            \"Are you sure to logged out?\"\r\n                        );\r\n                        if (confirm) {\r\n                            store.set({});\r\n                            resetStore();\r\n                        }\r\n                    }}\r\n                >\r\n                    <i className=\"fas fa-sign-out-alt text-xs text-primary mr-2\" />\r\n                    Logout\r\n                </button>\r\n            </li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AccountMenu;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteNotification } from \"../services/notifications\";\r\nimport store from \"../state\";\r\n\r\nfunction NotificationsList() {\r\n    const { notifications } = useState(store);\r\n\r\n    return (\r\n        <>\r\n            {notifications.map((notification) => (\r\n                <Notification\r\n                    key={notification.id.value}\r\n                    content={notification.value}\r\n                ></Notification>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Notification({ content }) {\r\n    const colorsMap = useRef({\r\n        new_pharmacy: \"green\",\r\n        new_branch: \"green-dark\",\r\n        out_of_stock: \"red\",\r\n        expire_soon: \"yellow\",\r\n        expired: \"yellow-dark\",\r\n        new_order: \"primary\",\r\n    });\r\n\r\n    const { notifications } = useState(store);\r\n    const { id, type, data } = content;\r\n    const willBeDeleted = useState(false);\r\n\r\n    let notificationLink = \"\",\r\n        msg = \"\";\r\n\r\n    switch (type) {\r\n        case \"new_pharmacy\":\r\n            notificationLink = `/pharmacies/${data.id}`;\r\n            msg = (\r\n                <>\r\n                    <strong>{data.name}</strong> send request to join Pharma\r\n                    Platform!\r\n                </>\r\n            );\r\n            break;\r\n\r\n        case \"new_branch\":\r\n            notificationLink = `/pharmacies/${data.id}`;\r\n            msg = (\r\n                <>\r\n                    <strong>{data.name}</strong> send request to add it's new\r\n                    branch <strong>{data.branch}</strong> to Pharma Platform.\r\n                </>\r\n            );\r\n            break;\r\n\r\n        case \"new_order\":\r\n            notificationLink = `/orders/${data.id}`;\r\n            msg = (\r\n                <>\r\n                    New Order <strong>#{data.id}</strong> has been recevied from{\" \"}\r\n                    {data.user}\r\n                </>\r\n            );\r\n            break;\r\n\r\n        case \"expired\":\r\n            notificationLink = `/inventory/${data.id}`;\r\n            msg = (\r\n                <>\r\n                    <strong>{data.name}</strong> has expired!\r\n                </>\r\n            );\r\n            break;\r\n\r\n        case \"expire_soon\":\r\n            notificationLink = `/inventory/${data.id}`;\r\n            msg = (\r\n                <>\r\n                    <strong>{data.name}</strong> will expire soon after{\" \"}\r\n                    {data.duration} day.\r\n                </>\r\n            );\r\n            break;\r\n\r\n        case \"out_of_stock\":\r\n            notificationLink = `/inventory/${data.id}`;\r\n            msg = (\r\n                <>\r\n                    <strong>{data.name}</strong> has became out of stock!\r\n                </>\r\n            );\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={`border-b-2 border-gray-200 last:border-0 ${\r\n                willBeDeleted.value\r\n                    ? \"animate__animated animate__faster animate__fadeOutRight\"\r\n                    : \"\"\r\n            }`}\r\n        >\r\n            <Link\r\n                to={notificationLink}\r\n                className=\"block relative px-5 py-4 hover:bg-gray-100\"\r\n            >\r\n                <button\r\n                    title=\"clear the notification\"\r\n                    className=\"text-gray-300 hover:text-red hover:bg-gray-200 rounded px-2 py-1 absolute top-3 right-2 transition-none\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        willBeDeleted.set(true);\r\n\r\n                        window.setTimeout(async () => {\r\n                            await deleteNotification(id);\r\n                            notifications.set((prev) => {\r\n                                return prev.filter((notification) => {\r\n                                    return notification.id !== id;\r\n                                });\r\n                            });\r\n                        }, 500);\r\n                    }}\r\n                >\r\n                    <i className=\"fas fa-times\"></i>\r\n                </button>\r\n                <span\r\n                    className={`bg-${colorsMap.current[type]} shadow capitalize py-0.5 px-2 inline-block mb-1.5 rounded-sm font-semibold text-xxs text-white`}\r\n                >\r\n                    {type.replace(/_/g, \" \")}\r\n                </span>\r\n                <p className=\"font-medium text-gray-600\">{msg}</p>\r\n            </Link>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default NotificationsList;\r\n","import React, { useState } from \"react\";\r\nimport AccountMenu from \"./AccountMenu\";\r\nimport Notifications from \"./Notifications\";\r\nimport store from \"../state\";\r\nimport { useHookstate } from \"@hookstate/core\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nfunction TopMenu({ withoutNotifications = false }) {\r\n    const [activeMenu, changeActive] = useState(0);\r\n    const { notifications, loggedUser } = useHookstate(store);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <ul className=\"flex\">\r\n            {!withoutNotifications && notifications.length > 0 && (\r\n                <TopMenuItem\r\n                    submenu={<Notifications />}\r\n                    active={activeMenu === 1}\r\n                    onClick={() =>\r\n                        activeMenu === 1 ? changeActive(0) : changeActive(1)\r\n                    }\r\n                >\r\n                    <i\r\n                        className={`animate__animated animate__delay-2s animate__infinite animate__swing fas fa-bellfas fa-bell text-primary`}\r\n                    ></i>\r\n                    {notifications.length !== 0 && (\r\n                        <span className=\"rounded-full w-3.5 h-3.5 absolute bg-red top-7 right-5 text-xxs text-white\">\r\n                            {notifications.length}\r\n                        </span>\r\n                    )}\r\n                </TopMenuItem>\r\n            )}\r\n\r\n            {loggedUser.role.get() === \"pharmacy owner\" && (\r\n                <TopMenuItem\r\n                    active={location.pathname === \"/my-pharmacies\"}\r\n                    onClick={() => history.push(\"/my-pharmacies\")}\r\n                >\r\n                    <span>My Pharmacies</span>\r\n                    <i className=\"fas fa-clinic-medical ml-2 text-primary\"></i>\r\n                </TopMenuItem>\r\n            )}\r\n\r\n            {loggedUser.id.ornull ? (\r\n                <TopMenuItem\r\n                    submenu={<AccountMenu />}\r\n                    active={activeMenu === 2}\r\n                    onClick={() =>\r\n                        activeMenu === 2 ? changeActive(0) : changeActive(2)\r\n                    }\r\n                >\r\n                    <span>My Account</span>\r\n                    <i className=\"fas fa-user-circle ml-2 text-primary\"></i>\r\n                </TopMenuItem>\r\n            ) : (\r\n                <>\r\n                    <TopMenuItem\r\n                        active={location.pathname === \"/login\"}\r\n                        onClick={() => history.push(\"/login\")}\r\n                    >\r\n                        <span>Login</span>\r\n                        <i className=\"fas fa-sign-in-alt ml-2 text-primary\"></i>\r\n                    </TopMenuItem>\r\n\r\n                    <TopMenuItem\r\n                        active={location.pathname === \"/sign-up\"}\r\n                        onClick={() => history.push(\"/sign-up\")}\r\n                        className={\r\n                            location.pathname === \"/sign-up\"\r\n                                ? \"\"\r\n                                : \"bg-primary group text-white\"\r\n                        }\r\n                    >\r\n                        <span>Sign Up</span>\r\n                        <i\r\n                            className={`fas fa-plus-square ml-2 group-hover:text-primary`}\r\n                        ></i>\r\n                    </TopMenuItem>\r\n                </>\r\n            )}\r\n        </ul>\r\n    );\r\n}\r\n\r\nfunction TopMenuItem({ children, submenu, onClick, active, className = \"\" }) {\r\n    return (\r\n        <li className=\"relative\">\r\n            <button\r\n                onClick={onClick}\r\n                className={`border-l-2 border-gray-200 h-full px-8 font-semibold hover:bg-gray-100 hover:text-secondary ${\r\n                    active ? \"bg-gray-100 text-secondary\" : \"\"\r\n                } ${className}`}\r\n                style={{ transitionProperty: \"background\" }}\r\n            >\r\n                {children}\r\n            </button>\r\n            {submenu && (\r\n                <ul\r\n                    className={`absolute z-40 top-full border-t max-h-80 overflow-y-auto overflow-x-hidden border-gray-200 right-0 bg-white shadow-lg border-1 w-80 text-sm rounded-b transform origin-top-right transition-transform duration-500 scale-0${\r\n                        active ? \" scale-100\" : \"\"\r\n                    }`}\r\n                >\r\n                    {submenu}\r\n                </ul>\r\n            )}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default TopMenu;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport store from \"../state\";\r\nimport Logo from \"./Logo\";\r\nimport PagePath from \"./PagePath\";\r\nimport TopMenu from \"./TopMenu\";\r\n\r\nfunction TopBar({ withLogo = false }) {\r\n    const { collapseMenu } = useState(store);\r\n\r\n    if (withLogo) {\r\n        return (\r\n            <header className=\"h-21.5 bg-white shadow-md flex justify-between\">\r\n                <Logo\r\n                    className=\"flex items-center w-64 h-full\"\r\n                    withoutCollapseBtn\r\n                />\r\n                <TopMenu withoutNotifications />\r\n            </header>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`h-21.5 transition-all bg-white shadow-md flex justify-between fixed z-30 top-0 ${\r\n                collapseMenu.value ? \"left-24\" : \"left-64\"\r\n            } right-0`}\r\n        >\r\n            <PagePath />\r\n            <TopMenu />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopBar;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport store from \"../state\";\r\n\r\nfunction MenuItem({ title, link, faClass, exact = false }) {\r\n    const { pathname } = useLocation();\r\n    const isActive = exact ? pathname === link : pathname.startsWith(link);\r\n    const { collapseMenu } = useState(store);\r\n\r\n    return (\r\n        <li>\r\n            <NavLink\r\n                to={link}\r\n                activeClassName=\"active-menu-item\"\r\n                className={`menu-item group ${\r\n                    collapseMenu.value ? \" justify-center px-5\" : \"\"\r\n                }`}\r\n                exact={exact}\r\n            >\r\n                <i\r\n                    className={\r\n                        faClass +\r\n                        \" \" +\r\n                        (isActive ? \"active-\" : \"\") +\r\n                        \"menu-item-icon\" +\r\n                        (!isActive && collapseMenu.value ? \" mr-0\" : \"\")\r\n                    }\r\n                ></i>\r\n                <span\r\n                    className={`font-${\r\n                        isActive ? \"\" : \"semi\"\r\n                    }bold align-middle ${collapseMenu.value ? \"hidden\" : \"\"}`}\r\n                >\r\n                    {title}\r\n                </span>\r\n                <i\r\n                    className={`fas\r\n                    fa-chevron-right\r\n                    ml-auto\r\n                    text-xs text-gray-300 ${\r\n                        isActive ? \"\" : \"hidden group-hover:block\"\r\n                    }`}\r\n                ></i>\r\n            </NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default MenuItem;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport store from \"../state\";\r\nimport CollapseBtn from \"./CollapseBtn\";\r\nimport MenuItem from \"./MenuItem\";\r\n\r\nfunction Navigation() {\r\n    const { loggedUser, collapseMenu, pharmacyBranch } = useState(store);\r\n    const userRole = loggedUser.role.get();\r\n    const isPharmacyBranchSelected = pharmacyBranch.id.value !== undefined;\r\n\r\n    function renderNavigationItems() {\r\n        const output = [];\r\n        switch (userRole) {\r\n            case \"admin\":\r\n                output.push(\r\n                    <>\r\n                        <MenuItem\r\n                            key=\"dashboard\"\r\n                            title=\"Dashboard\"\r\n                            faClass=\"fas fa-tachometer-alt\"\r\n                            link=\"/\"\r\n                            exact\r\n                        ></MenuItem>\r\n                        <MenuItem\r\n                            key=\"products\"\r\n                            title=\"Products Catalog\"\r\n                            faClass=\"fas fa-boxes\"\r\n                            link=\"/products\"\r\n                        ></MenuItem>\r\n\r\n                        <MenuItem\r\n                            key=\"pharmacies\"\r\n                            title=\"Pharmacies\"\r\n                            faClass=\"fas fa-clinic-medical\"\r\n                            link=\"/pharmacies\"\r\n                        ></MenuItem>\r\n\r\n                        <MenuItem\r\n                            key=\"users\"\r\n                            title=\"Users\"\r\n                            faClass=\"fas fa-users\"\r\n                            link=\"/users\"\r\n                        ></MenuItem>\r\n                    </>\r\n                );\r\n                break;\r\n\r\n            case \"pharmacy owner\":\r\n                if (!isPharmacyBranchSelected) {\r\n                    output.push(\r\n                        <MenuItem\r\n                            key=\"my-pharmacies\"\r\n                            title=\"My Pharmacies\"\r\n                            faClass=\"fas fa-clinic-medical\"\r\n                            link=\"/my-pharmacies\"\r\n                        ></MenuItem>\r\n                    );\r\n                    break;\r\n                }\r\n\r\n            case \"supervisor\":\r\n                output.push(\r\n                    <>\r\n                        <MenuItem\r\n                            key=\"dashboard\"\r\n                            title=\"Dashboard\"\r\n                            faClass=\"fas fa-tachometer-alt\"\r\n                            link=\"/\"\r\n                            exact\r\n                        ></MenuItem>\r\n\r\n                        <MenuItem\r\n                            key=\"pos\"\r\n                            title=\"Point of Sale\"\r\n                            faClass=\"fas fa-cash-register\"\r\n                            link=\"/pos\"\r\n                        ></MenuItem>\r\n\r\n                        <MenuItem\r\n                            key=\"orders\"\r\n                            title=\"Orders\"\r\n                            faClass=\"fas fa-dolly\"\r\n                            link=\"/orders\"\r\n                        ></MenuItem>\r\n\r\n                        <MenuItem\r\n                            key=\"inventory\"\r\n                            title=\"Inventory\"\r\n                            faClass=\"fas fa-boxes\"\r\n                            link=\"/inventory\"\r\n                        ></MenuItem>\r\n\r\n                        <MenuItem\r\n                            key=\"staff\"\r\n                            title=\"Staff\"\r\n                            faClass=\"fas fa-user-tie\"\r\n                            link=\"/staff\"\r\n                        ></MenuItem>\r\n                    </>\r\n                );\r\n                break;\r\n\r\n            case \"pharmacist\":\r\n                output.push(\r\n                    <>\r\n                        <MenuItem\r\n                            key=\"pos\"\r\n                            title=\"Point of Sale\"\r\n                            faClass=\"fas fa-cash-register\"\r\n                            link=\"/\"\r\n                            exact\r\n                        ></MenuItem>\r\n\r\n                        <MenuItem\r\n                            key=\"orders\"\r\n                            title=\"Orders\"\r\n                            faClass=\"fas fa-dolly\"\r\n                            link=\"/orders\"\r\n                        ></MenuItem>\r\n\r\n                        <MenuItem\r\n                            key=\"inventory\"\r\n                            title=\"Inventory\"\r\n                            faClass=\"fas fa-boxes\"\r\n                            link=\"/inventory\"\r\n                        ></MenuItem>\r\n                    </>\r\n                );\r\n                break;\r\n        }\r\n\r\n        if (userRole === \"pharmacy owner\" && isPharmacyBranchSelected) {\r\n            output.push(\r\n                <MenuItem\r\n                    key=\"pharmacy-settings\"\r\n                    title=\"Pharmacy Settings\"\r\n                    faClass=\"fas fa-cogs\"\r\n                    link=\"/pharmacy-settings\"\r\n                ></MenuItem>\r\n            );\r\n        }\r\n\r\n        output.push(\r\n            <MenuItem\r\n                key=\"account-settings\"\r\n                title=\"Account Settings\"\r\n                faClass=\"fas fa-user-cog\"\r\n                link=\"/account-settings\"\r\n            ></MenuItem>\r\n        );\r\n\r\n        return output;\r\n    }\r\n\r\n    return (\r\n        <nav id=\"main-nav\" className=\"text-sm\">\r\n            <ul>\r\n                {collapseMenu.get() && (\r\n                    <li>\r\n                        <CollapseBtn className=\"menu-item w-full justify-center transition-none text-gray-400 hover:bg-gray-100 hover:text-primary\" />\r\n                    </li>\r\n                )}\r\n                {renderNavigationItems()}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport store from \"../state\";\r\nimport Logo from \"./Logo\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nfunction Header() {\r\n    const { collapseMenu } = useState(store);\r\n\r\n    return (\r\n        <>\r\n            <header\r\n                className={`h-screen ${\r\n                    collapseMenu.value ? \"w-24\" : \"w-64\"\r\n                } bg-white shadow-lg overflow-hidden transition-all fixed top-0 left-0 z-10`}\r\n            >\r\n                <Logo />\r\n                <Navigation />\r\n            </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction SearchFilter({ label = \"Search\", placeholder, value }) {\r\n    return (\r\n        <div className=\"inline-block font-medium relative mr-5\">\r\n            <label htmlFor={label} className=\"mr-2\">\r\n                {label}\r\n            </label>\r\n            <input\r\n                id={label}\r\n                className=\"inline-block py-1.5 px-2 w-72 border border-gray-300 rounded-sm shadow focus:outline-none\"\r\n                type=\"search\"\r\n                placeholder={placeholder}\r\n                value={value.get()}\r\n                onChange={({ target }) => value.set(target.value)}\r\n            />\r\n            <i className=\"fas fa-search absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-300\"></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchFilter;\r\n","import React from \"react\";\r\n\r\nfunction SelectFilter({ label, value, options, className = \"\", wide = false }) {\r\n    return (\r\n        <div\r\n            className={`inline-block font-medium relative mr-5 last:mr-0 ${className}`}\r\n        >\r\n            <label htmlFor={label} className=\"mr-2 align-middle\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                id={label}\r\n                className={`inline-block py-1.5 px-2 ${\r\n                    wide ? \"w-36\" : \"w-28\"\r\n                } border border-gray-300 rounded-sm shadow focus:outline-none`}\r\n                value={value.get()}\r\n                onChange={({ target }) => value.set(target.value)}\r\n            >\r\n                {options.map((item, i) => (\r\n                    <option key={i} value={item.value}>\r\n                        {item.label}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectFilter;\r\n","import React from \"react\";\r\nimport SearchFilter from \"./SearchFilter\";\r\nimport SelectFilter from \"./SelectFilter\";\r\n\r\nfunction Filters({ filters, data, pagination }) {\r\n    return (\r\n        <div className=\"text-xs mb-5\">\r\n            <div className=\"inline-block font-semibold\">\r\n                <i className=\"fas fa-filter text-bright mr-1\"></i> Filters\r\n                <span className=\"mx-4\">|</span>\r\n            </div>\r\n\r\n            {filters.map((filter) => {\r\n                switch (filter.type) {\r\n                    case \"search\":\r\n                        return (\r\n                            <SearchFilter\r\n                                key={filter.label}\r\n                                label={filter.label}\r\n                                value={data[filter.prop]}\r\n                                placeholder={filter.placeholder}\r\n                                onChange={filter.onChange}\r\n                            />\r\n                        );\r\n\r\n                    default:\r\n                        return (\r\n                            <SelectFilter\r\n                                key={filter.label}\r\n                                label={filter.label}\r\n                                value={data[filter.prop]}\r\n                                options={filter.options}\r\n                                onChange={filter.onChange}\r\n                                wide={filter.wide}\r\n                            />\r\n                        );\r\n                }\r\n            })}\r\n\r\n            {pagination && (\r\n                <SelectFilter\r\n                    label=\"Items per Page\"\r\n                    name=\"items_per_page\"\r\n                    className=\"float-right\"\r\n                    value={pagination.itemsPerPage}\r\n                    options={pagination.itemsPerPageOptions\r\n                        .get()\r\n                        .map((option) => ({\r\n                            label: option,\r\n                            value: option,\r\n                        }))}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\n\r\nfunction TableHead({ columns, sortColumn }) {\r\n    const sortColumnName = sortColumn ? sortColumn.columnName.get() : \"\";\r\n    const order = sortColumn ? sortColumn.order.get() : \"\";\r\n\r\n    return (\r\n        <thead>\r\n            <tr className=\"rounded-t\">\r\n                {columns.map(({ title, prop, sortProp, sortable }) => {\r\n                    let isCurrentSortingColumn;\r\n                    if (sortColumn === undefined) {\r\n                        sortable = isCurrentSortingColumn = false;\r\n                    } else {\r\n                        sortProp = sortProp || prop;\r\n                        isCurrentSortingColumn = sortColumnName === sortProp;\r\n                    }\r\n                    return (\r\n                        <th\r\n                            key={title}\r\n                            className={`first:rounded-tl last:rounded-tr capitalize select-none ${\r\n                                sortable !== false ? \"cursor-pointer\" : \"\"\r\n                            }`}\r\n                            onClick={() => {\r\n                                if (sortable !== false) {\r\n                                    sortColumn.set({\r\n                                        columnName: sortProp,\r\n                                        order: isCurrentSortingColumn\r\n                                            ? order === \"desc\"\r\n                                                ? \"asc\"\r\n                                                : \"desc\"\r\n                                            : \"desc\",\r\n                                    });\r\n                                }\r\n                            }}\r\n                        >\r\n                            {title}\r\n                            {isCurrentSortingColumn && (\r\n                                <i\r\n                                    className={`ml-1 fas fa-sort-${\r\n                                        order === \"desc\" ? \"down\" : \"up\"\r\n                                    }`}\r\n                                ></i>\r\n                            )}\r\n                        </th>\r\n                    );\r\n                })}\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default TableHead;\r\n","import React from \"react\";\r\n\r\nfunction TableRow({ data, edited = false, form, columnsWidth, highlight }) {\r\n    return (\r\n        <>\r\n            <tr className={`last:rounded-b ${highlight ? \"highlighted\" : \"\"}`}>\r\n                {data.map((cell, i) => (\r\n                    <td\r\n                        key={i}\r\n                        style={\r\n                            columnsWidth[i]\r\n                                ? { width: columnsWidth[i] }\r\n                                : undefined\r\n                        }\r\n                        className=\"first:rounded-bl last:rounded-br\"\r\n                    >\r\n                        {cell}\r\n                    </td>\r\n                ))}\r\n            </tr>\r\n            {edited && form && (\r\n                <tr className=\"last:rounded-b\">\r\n                    <td colSpan={data.length}>{form}</td>\r\n                </tr>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import React, { useEffect } from \"react\";\r\nimport { DevTools, useState } from \"@hookstate/core\";\r\nimport TableRow from \"./TableRow\";\r\nimport store from \"../../state\";\r\nimport { useRouteMatch } from \"react-router\";\r\n\r\nfunction TableBody({ data, columns, form }) {\r\n    const { params } = useRouteMatch();\r\n    const editedRow = useState(null);\r\n    const { popupWindow } = useState(store);\r\n    DevTools(editedRow).label(\"edited_row\");\r\n\r\n    useEffect(() => {\r\n        if (params.id) editedRow.set(+params.id);\r\n    }, [params.id]);\r\n\r\n    return (\r\n        <tbody>\r\n            {data.map((item) => {\r\n                const edited = editedRow.get() === item.id.get();\r\n                return (\r\n                    <TableRow\r\n                        key={item.id.value}\r\n                        highlight={params.id && +params.id === item.id.get()}\r\n                        form={form && form(item, () => editedRow.set(null))}\r\n                        edited={edited}\r\n                        columnsWidth={columns.map((col) => col.width)}\r\n                        data={columns.map(\r\n                            ({ prop, wrapper, defaultValue = \"\" }) =>\r\n                                prop\r\n                                    ? item[prop].value === \"\"\r\n                                        ? defaultValue\r\n                                        : item[prop].value\r\n                                    : wrapper({\r\n                                          ...item,\r\n                                          edited,\r\n                                          handleEdit: (id) => {\r\n                                              editedRow.set(id);\r\n                                          },\r\n                                          popupWindow,\r\n                                          item,\r\n                                      })\r\n                        )}\r\n                    />\r\n                );\r\n            })}\r\n        </tbody>\r\n    );\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHead from \"./TableHead\";\r\nimport TableBody from \"./TableBody\";\r\n\r\nfunction Table({ data, columns, form, sortColumn }) {\r\n    if (data.length === 0)\r\n        return (\r\n            <p className=\"rounded shadow-lg bg-white mt-5 text-center text-gray-400 text-sm p-5 italic\">\r\n                There is no data yet.\r\n            </p>\r\n        );\r\n\r\n    return (\r\n        <>\r\n            <table>\r\n                <TableHead columns={columns} sortColumn={sortColumn} />\r\n                <TableBody columns={columns} data={data} form={form} />\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport { range } from \"../../utility\";\r\n\r\nfunction Pagination({ paginationData, data, onPaginate }) {\r\n    const itemsPerPage = paginationData.itemsPerPage.get();\r\n    const length = paginationData.length.get();\r\n    const currentPage = paginationData.currentPage.get();\r\n    const actualLength = Math.ceil(data.length / itemsPerPage);\r\n    let start = currentPage - Math.floor(length / 2);\r\n    start = start < 1 ? 1 : start;\r\n    let end = start + length - 1;\r\n    end = end > actualLength ? actualLength : end;\r\n\r\n    return (\r\n        <ol className=\"float-right mt-6 text-sm\">\r\n            <li>\r\n                {start > 1 && (\r\n                    <button\r\n                        className=\"py-2 px-4 rounded-sm mr-1 last:mr-0 font-medium text-primary hover:text-secondary\"\r\n                        onClick={() => onPaginate(1)}\r\n                    >\r\n                        <i className=\"fas fa-angle-double-left\"></i>\r\n                    </button>\r\n                )}\r\n                {range(start, end).map((index) => (\r\n                    <button\r\n                        key={index}\r\n                        className={`py-2 px-4 rounded-sm font-medium ${\r\n                            +currentPage === index\r\n                                ? \"bg-primary shadow-md text-white cursor-default\"\r\n                                : \"hover:text-primary\"\r\n                        }`}\r\n                        onClick={() =>\r\n                            index !== +currentPage ? onPaginate(index) : null\r\n                        }\r\n                    >\r\n                        {index}\r\n                    </button>\r\n                ))}\r\n                {end < actualLength && (\r\n                    <button\r\n                        className=\"py-2 px-4 rounded-sm mr-1 last:mr-0 font-medium text-primary hover:text-secondary\"\r\n                        onClick={() => onPaginate(actualLength)}\r\n                    >\r\n                        <i className=\"fas fa-angle-double-right\"></i>\r\n                    </button>\r\n                )}\r\n            </li>\r\n        </ol>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useMemo } from \"react\";\r\nimport Filters from \"../table/Filters\";\r\nimport Table from \"../table/Table\";\r\nimport Pagination from \"../table/Pagination\";\r\nimport { paginateData, filterData, sortData } from \"../../utility\";\r\n\r\nfunction DataTable({\r\n    columns,\r\n    data,\r\n    form,\r\n    filters,\r\n    filtersData,\r\n    pagination,\r\n    sortColumn,\r\n}) {\r\n    const filteredData = useMemo(\r\n        () => (filters ? filterData(filters, filtersData, data) : data),\r\n        [filters, filtersData, data]\r\n    );\r\n\r\n    const sortedData = useMemo(\r\n        () => (sortColumn ? sortData(sortColumn, filteredData) : filteredData),\r\n        [sortColumn, filteredData]\r\n    );\r\n\r\n    const paginatedData = useMemo(\r\n        () => (pagination ? paginateData(pagination, sortedData) : sortedData),\r\n        [pagination, sortedData]\r\n    );\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            {filters && (\r\n                <Filters\r\n                    filters={filters}\r\n                    data={filtersData}\r\n                    pagination={pagination}\r\n                />\r\n            )}\r\n            <Table\r\n                data={paginatedData}\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                form={form}\r\n            />\r\n            {pagination && (\r\n                <Pagination\r\n                    paginationData={pagination}\r\n                    data={filteredData}\r\n                    onPaginate={pagination.currentPage.set}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataTable;\r\n","import React from \"react\";\r\n\r\nconst SectionHeader = ({\r\n    name = \"\",\r\n    faClass = \"\",\r\n    addButton = false,\r\n    selectMenu = false,\r\n}) => {\r\n    const id = name.replace(\" \", \"_\");\r\n    return (\r\n        <h2 className=\"flex items-center mb-4\">\r\n            <span className=\"font-bold text-xl\">\r\n                <i className={`text-shadow ${faClass} text-primary mr-2`}></i>{\" \"}\r\n                {name}\r\n            </span>\r\n            {selectMenu && (\r\n                <div className=\"ml-auto text-gray-500 text-smd font-medium\">\r\n                    <label htmlFor={id}>{selectMenu.label}</label>\r\n                    <select\r\n                        id={id}\r\n                        value={selectMenu.value}\r\n                        onChange={selectMenu.onchange}\r\n                        className=\"ml-3 text-xs rounded-sm bg-white shadow px-1.5 py-1\"\r\n                    >\r\n                        {selectMenu.options.map(({ label, value }) => (\r\n                            <option key={value} value={value}>\r\n                                {label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            )}\r\n            {addButton && (\r\n                <button\r\n                    className=\"ml-auto rounded-sm shadow-md bg-secondary font-semibold py-1.5 px-3 text-xs text-white hover:bg-primary\"\r\n                    onClick={addButton.handler}\r\n                >\r\n                    <i className=\"fas fa-plus mr-1.5\"></i>\r\n                    {addButton.label}\r\n                </button>\r\n            )}\r\n        </h2>\r\n    );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React from \"react\";\r\n\r\nconst DeleteBtn = ({ onDelete, title = \"Delete?\" }) => {\r\n    return (\r\n        <button\r\n            title={title}\r\n            type=\"button\"\r\n            className=\"manage-btn bg-red text-red-light hover:text-red hover:bg-white\"\r\n            onClick={onDelete}\r\n        >\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\nimport DeleteBtn from \"../common/DeleteBtn\";\r\n\r\nconst ManageBtns = ({ id, edited, onEdit, onDelete, onView }) => {\r\n    return (\r\n        <div className=\"flex\">\r\n            {onDelete && <DeleteBtn onDelete={() => onDelete(id.value)} />}\r\n            {onEdit && (\r\n                <button\r\n                    title=\"Edit?\"\r\n                    className={`manage-btn  text-white ${\r\n                        edited\r\n                            ? \"bg-secondary\"\r\n                            : \"bg-primary hover:bg-secondary\"\r\n                    }`}\r\n                    onClick={() => onEdit(edited ? null : id.value)}\r\n                >\r\n                    <i className=\"fas fa-edit text-bright mr-1.5\"></i>\r\n                    <span>Edit</span>\r\n                    <i\r\n                        className={`fas fa-caret-${\r\n                            edited ? \"up\" : \"down\"\r\n                        } ml-1`}\r\n                    ></i>\r\n                </button>\r\n            )}\r\n            {onView && (\r\n                <button\r\n                    title=\"View Detials?\"\r\n                    className={`manage-btn text-white bg-primary hover:bg-secondary`}\r\n                    onClick={onView}\r\n                >\r\n                    <i className=\"fas fa-file-invoice text-bright mr-1.5\"></i>\r\n                    <span>View Detials</span>\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageBtns;\r\n","import React from \"react\";\r\n\r\nconst ProductCell = ({ id, name, photo, unit, edited, onEdit }) => {\r\n    return (\r\n        <div className=\"flex items-center\">\r\n            <div\r\n                className=\"mr-3 bg-no-repeat bg-contain bg-center h-12 w-16 px-4 border border-gray-200 rounded-sm\"\r\n                style={{\r\n                    backgroundImage: `url('${photo}')`,\r\n                }}\r\n            ></div>\r\n            <div className=\"inline-flex flex-col h-full\">\r\n                {onEdit ? (\r\n                    <a\r\n                        href={`#${name}`}\r\n                        onClick={() => onEdit(edited ? null : id.value)}\r\n                        className=\"text-sm\"\r\n                    >\r\n                        {name}\r\n                    </a>\r\n                ) : (\r\n                    <span className=\"text-sm select-none\">{name}</span>\r\n                )}\r\n                <span className=\"text-gray-500 text-xs mt-1\">({unit})</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCell;\r\n","import React from \"react\";\r\nimport { getCategories } from \"../../services/categories\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst CategoriesField = (props) => {\r\n    return (\r\n        <FormField\r\n            name=\"category\"\r\n            label=\"category\"\r\n            type=\"select\"\r\n            options={[{ label: \"None\", value: \"\" }, ...getCategories()]}\r\n            placeholder=\"Select Category\"\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CategoriesField;\r\n","export const getCategories = () => {\r\n    return [\r\n        { id: 1, label: \"Analgesics\", value: \"analgesics\" },\r\n        { id: 2, label: \"Antacids\", value: \"antacids\" },\r\n        { id: 3, label: \"Antianxiety Drugs\", value: \"antianxiety drugs\" },\r\n        { id: 4, label: \"Antiarrhythmics\", value: \"antiarrhythmics\" },\r\n        { id: 5, label: \"Antibacterials\", value: \"antibacterials\" },\r\n        { id: 6, label: \"Antibiotics\", value: \"antibiotics\" },\r\n    ];\r\n};\r\n","import React from \"react\";\r\nimport { getCompanies } from \"../../services/companies\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst CompaniesField = (props) => {\r\n    return (\r\n        <FormField\r\n            name=\"company\"\r\n            label=\"company\"\r\n            type=\"text\"\r\n            options={getCompanies()}\r\n            placeholder=\"Enter the company...\"\r\n            taggable\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CompaniesField;\r\n","export const getCompanies = () => {\r\n    return [\r\n        { id: 1, label: \"Ovex\", value: \"Ovex\" },\r\n        { id: 2, label: \"Diarrhoea\", value: \"Diarrhoea\" },\r\n        { id: 3, label: \"ORS\", value: \"ORS\" },\r\n        { id: 4, label: \"Flarin\", value: \"Flarin\" },\r\n        { id: 5, label: \"Anadin\", value: \"Anadin\" },\r\n    ];\r\n};\r\n","import React from \"react\";\r\nimport { getSuppliers } from \"../../services/suppliers\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst SuppliersField = (props) => {\r\n    return (\r\n        <FormField\r\n            name=\"supplier\"\r\n            label=\"supplier\"\r\n            type=\"text\"\r\n            options={getSuppliers()}\r\n            placeholder=\"Enter supplier name...\"\r\n            taggable\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SuppliersField;\r\n","export const getSuppliers = () => {\r\n    return [\r\n        { id: 1, label: \"AbdAlaziz Medical\", value: \"AbdAlaziz Medical\" },\r\n        { id: 2, label: \"Abo Alra\", value: \"Abo Alra\" },\r\n        { id: 3, label: \"Pharma Medical\", value: \"Pharma Medical\" },\r\n    ];\r\n};\r\n","import React from \"react\";\r\nimport FormButton from \"./FormButton\";\r\n\r\nconst Form = ({ children, className, onSubmit, formButtons = [{}] }) => {\r\n    return (\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                return onSubmit(e);\r\n            }}\r\n        >\r\n            <div className={className}>{children}</div>\r\n            <div className=\"flex justify-end mt-6\">\r\n                {formButtons.map((props, i) => (\r\n                    <FormButton key={i} {...props} />\r\n                ))}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport CategoriesField from \"./CategoriesField\";\r\nimport CompaniesField from \"./CompaniesField\";\r\nimport SuppliersField from \"./SuppliersField\";\r\nimport Form from \"./Form\";\r\nimport FormField from \"./FormField\";\r\nimport { updateInventoryItem } from \"../../services/inventoryItems\";\r\nimport { notify } from \"../../utility\";\r\nimport { useState, DevTools } from \"@hookstate/core\";\r\n\r\nconst InventoryForm = ({\r\n    state,\r\n    closeForm,\r\n    className = \"grid gap-x-5 gap-y-6 grid-cols-6\",\r\n}) => {\r\n    const formState = useState(JSON.parse(JSON.stringify(state.value)));\r\n    DevTools(formState).label(\"Inventory Edit Form State\");\r\n\r\n    return (\r\n        <Form\r\n            className={className}\r\n            onSubmit={async () => {\r\n                const { status } = await updateInventoryItem(formState.get());\r\n                notify({\r\n                    status,\r\n                    waitMsg: \"Updating Item...\",\r\n                    successMsg: \"Inventory Item has been updated successfully!\",\r\n                    successCallback() {\r\n                        state.set(JSON.parse(JSON.stringify(formState.value)));\r\n                        closeForm();\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"product name\"\r\n                name=\"product_name\"\r\n                id=\"1\"\r\n                value={formState.name}\r\n                placeholder=\"enter product name here...\"\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"barcode\"\r\n                name=\"barcode\"\r\n                id=\"2\"\r\n                value={formState.barcode}\r\n                placeholder=\"barcode here...\"\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"unit size\"\r\n                name=\"unit_size\"\r\n                id=\"3\"\r\n                value={formState.unit}\r\n                placeholder=\"e.g. 6 Capsules\"\r\n                disabled\r\n            />\r\n\r\n            <CategoriesField\r\n                className=\"flex flex-col\"\r\n                id=\"4\"\r\n                value={formState.category}\r\n                disabled\r\n            />\r\n\r\n            <CompaniesField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"5\"\r\n                value={formState.company}\r\n                disabled\r\n            />\r\n\r\n            <SuppliersField\r\n                className=\"flex flex-col\"\r\n                id=\"6\"\r\n                value={formState.supplier}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"cost\"\r\n                name=\"cost\"\r\n                id=\"7\"\r\n                value={formState.cost}\r\n                type=\"number\"\r\n                min=\"1\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"price\"\r\n                name=\"price\"\r\n                id=\"8\"\r\n                value={formState.price}\r\n                type=\"number\"\r\n                min=\"1\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"Online Order?\"\r\n                name=\"gender\"\r\n                type=\"radio\"\r\n                value={formState.online_order}\r\n                options={[\r\n                    {\r\n                        label: \"Enable\",\r\n                        value: true,\r\n                    },\r\n                    {\r\n                        label: \"Disable\",\r\n                        value: false,\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"in stock\"\r\n                name=\"in_stock\"\r\n                id=\"9\"\r\n                value={formState.stock}\r\n                type=\"number\"\r\n                min=\"0\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"Reserved\"\r\n                name=\"reserved\"\r\n                id=\"10\"\r\n                value={formState.reserved}\r\n                type=\"number\"\r\n                min=\"0\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"arrival date\"\r\n                name=\"arrival_date\"\r\n                id=\"11\"\r\n                value={formState.arrival_date}\r\n                max={formState.expire_date.value}\r\n                type=\"date\"\r\n                placeholder=\"e.g. 11-11-2021\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"expire date\"\r\n                name=\"expire_date\"\r\n                id=\"12\"\r\n                value={formState.expire_date}\r\n                min={formState.arrival_date.value}\r\n                type=\"date\"\r\n                placeholder=\"e.g. 11-11-2021\"\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default InventoryForm;\r\n","const inventoryFormState = {\r\n    data: {\r\n        productId: null,\r\n        name: \"\",\r\n        barcode: \"\",\r\n        unit: \"\",\r\n        category: \"\",\r\n        company: \"\",\r\n        photo: \"\",\r\n        cost: 0,\r\n        price: 0,\r\n        supplier: \"\",\r\n        stock: 0,\r\n        reserved: 0,\r\n        arrival_date: \"\",\r\n        expire_date: \"\",\r\n        online_order: true,\r\n    },\r\n    errors: {},\r\n};\r\n\r\nexport default inventoryFormState;\r\n","import React from \"react\";\r\n\r\nfunction Popup({\r\n    title,\r\n    children,\r\n    state,\r\n    onClose,\r\n    faClass = \"fas fa-plus-square\",\r\n    style = {},\r\n}) {\r\n    const closeForm = () => {\r\n        state.set(false);\r\n        onClose && onClose();\r\n    };\r\n\r\n    const visiable = state.get();\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                onClick={closeForm}\r\n                className={`fixed top-0 left-0 right-0 bottom-0 bg-black opacity-0 z-40 ${\r\n                    visiable ? \"opacity-75 visible\" : \"invisible\"\r\n                }`}\r\n            ></div>\r\n            <div\r\n                className={`dialog max-h-screen fixed w-1/2 z-50 bg-white rounded overflow-hidden shadow-xl duration-75 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 scale-0 ${\r\n                    visiable ? \"scale-100 duration-500\" : \"\"\r\n                }`}\r\n                style={style}\r\n            >\r\n                <div className=\"flex justify-between py-4 px-5 bg-gray shadow-md font-semibold\">\r\n                    <h3>\r\n                        <i className={`${faClass} text-primary mr-2`}></i>\r\n                        {title}\r\n                    </h3>\r\n                    <button\r\n                        className=\"text-gray-300 self-center\"\r\n                        title=\"close?\"\r\n                        onClick={closeForm}\r\n                    >\r\n                        <i className=\"fas fa-times text-gray-400 hover:text-red self-center\"></i>\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    className=\"px-5 py-6 overflow-y-auto\"\r\n                    style={{ maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {visiable && children}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\nimport Popup from \"../common/Popup\";\r\nimport Form from \"./Form\";\r\n\r\nconst PopupForm = ({\r\n    children,\r\n    className,\r\n    onSubmit,\r\n    formButtons = [{}],\r\n    ...props\r\n}) => {\r\n    return (\r\n        <Popup {...props}>\r\n            <Form\r\n                formButtons={formButtons}\r\n                className={className}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {children}\r\n            </Form>\r\n        </Popup>\r\n    );\r\n};\r\n\r\nexport default PopupForm;\r\n","import React from \"react\";\r\nimport FormField from \"./FormField\";\r\nimport { useHookstate } from \"@hookstate/core\";\r\nimport store from \"../../state\";\r\n\r\nconst ProductsField = (props) => {\r\n    const productsData = useHookstate(store.tables.products.data);\r\n\r\n    return (\r\n        <FormField\r\n            label=\"product name\"\r\n            name=\"product_name\"\r\n            type=\"select\"\r\n            options={productsData.map((product) => ({\r\n                label: product.name.value,\r\n                value: product.id.value,\r\n            }))}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProductsField;\r\n","import { DevTools, useHookstate } from \"@hookstate/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport inventoryFormState from \"../../states/inventoryFormState\";\r\nimport Note from \"../common/Note\";\r\nimport CategoriesField from \"./CategoriesField\";\r\nimport CompaniesField from \"./CompaniesField\";\r\nimport FormField from \"./FormField\";\r\nimport PopupForm from \"./PopupForm\";\r\nimport SuppliersField from \"./SuppliersField\";\r\nimport ProductsField from \"./ProductsField\";\r\nimport {\r\n    getInventoryItems,\r\n    setInventoryItem,\r\n} from \"../../services/inventoryItems\";\r\nimport { notify } from \"../../utility\";\r\nimport store from \"../../state\";\r\n\r\nconst InventoryPopupForm = ({ showState }) => {\r\n    let state = useHookstate({\r\n        data: { ...inventoryFormState.data },\r\n        errors: { ...inventoryFormState.errors },\r\n    });\r\n    const productsData = useHookstate(store.tables.products.data);\r\n    const inventoryData = useHookstate(store.tables.inventory.data);\r\n    const { data, errors } = state;\r\n    DevTools(state).label(\"Inventory Popup Form\");\r\n\r\n    useEffect(() => {\r\n        let scanneredBarcode = \"\";\r\n        window.onkeypress = ({ keyCode, key }) => {\r\n            if (keyCode === 13) {\r\n                const product = productsData.find(\r\n                    ({ barcode }) => barcode.value === scanneredBarcode\r\n                );\r\n                if (product) {\r\n                    data.productId.set(product.id.value);\r\n                    data.name.set(product.name.value);\r\n                    data.photo.set(product.photo.url.value);\r\n                    data.barcode.set(product.barcode.value);\r\n                    data.unit.set(product.unit.value);\r\n                    data.category.set(product.category.value);\r\n                    data.company.set(product.company.value);\r\n                }\r\n                scanneredBarcode = \"\";\r\n            } else {\r\n                scanneredBarcode += key;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <PopupForm\r\n            title=\"Add New Product\"\r\n            state={showState}\r\n            formButtons={[\r\n                {\r\n                    label: \"Add Product to Inventory\",\r\n                    faClass: \"fas fa-plus\",\r\n                },\r\n            ]}\r\n            className=\"grid gap-x-5 gap-y-6 grid-cols-4 text-sm gray-inputs\"\r\n            onSubmit={async () => {\r\n                const { status } = await setInventoryItem(data.get());\r\n                notify({\r\n                    status,\r\n                    successMsg: \"Inventory Item has been added successfully!\",\r\n                    successCallback: async () => {\r\n                        // Clear the form data\r\n                        data.set({ ...inventoryFormState.data });\r\n\r\n                        // Close the popup form\r\n                        showState.set(false);\r\n\r\n                        // Update inventory data list\r\n                        const { data: newInventoryData } =\r\n                            await getInventoryItems();\r\n                        inventoryData.set(newInventoryData);\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <Note className=\"col-span-4\">\r\n                <strong>Note:</strong> You can use{\" \"}\r\n                <i className=\"fas fa-barcode\"></i> barcode reader to capture\r\n                basic product information into the fields below.\r\n            </Note>\r\n\r\n            <ProductsField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"1\"\r\n                type=\"select\"\r\n                value={data.name}\r\n                onChange={({ value: selectedId }) => {\r\n                    const product = productsData.find(\r\n                        ({ id }) => id.value === selectedId\r\n                    );\r\n                    data.productId.set(product.id.value);\r\n                    data.name.set(product.name.value);\r\n                    data.photo.set(product.photo.url.value);\r\n                    data.barcode.set(product.barcode.value);\r\n                    data.unit.set(product.unit.value);\r\n                    data.category.set(product.category.value);\r\n                    data.company.set(product.company.value);\r\n                }}\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"barcode\"\r\n                name=\"barcode\"\r\n                type=\"select\"\r\n                id=\"2\"\r\n                value={data.barcode}\r\n                options={productsData.map(({ barcode, id }) => ({\r\n                    label: barcode.value,\r\n                    value: id.value,\r\n                }))}\r\n                onChange={({ value: selectedId }) => {\r\n                    const product = productsData.find(\r\n                        ({ id }) => id.value === selectedId\r\n                    );\r\n                    data.productId.set(product.id);\r\n                    data.name.set(product.name);\r\n                    data.barcode.set(product.barcode);\r\n                    data.unit.set(product.unit);\r\n                    data.category.set(product.category);\r\n                    data.company.set(product.company);\r\n                }}\r\n                placeholder=\"barcode here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"unit size\"\r\n                name=\"unit_size\"\r\n                id=\"3\"\r\n                value={data.unit}\r\n                placeholder=\"e.g. 6 Capsules\"\r\n                disabled\r\n            />\r\n\r\n            <CategoriesField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"4\"\r\n                value={data.category}\r\n                disabled\r\n            />\r\n\r\n            <CompaniesField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"5\"\r\n                value={data.company}\r\n                placeholder=\"Company Name...\"\r\n                disabled\r\n            />\r\n\r\n            <SuppliersField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"6\"\r\n                value={data.supplier}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"cost\"\r\n                name=\"cost\"\r\n                id=\"7\"\r\n                value={data.cost}\r\n                type=\"number\"\r\n                min=\"1\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"price\"\r\n                name=\"price\"\r\n                id=\"8\"\r\n                value={data.price}\r\n                type=\"number\"\r\n                min=\"1\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"in stock\"\r\n                name=\"in_stock\"\r\n                id=\"9\"\r\n                value={data.stock}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"Reserved\"\r\n                name=\"reserved\"\r\n                id=\"10\"\r\n                value={data.reserved}\r\n                type=\"number\"\r\n                min=\"0\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"Online Order?\"\r\n                name=\"gender\"\r\n                type=\"radio\"\r\n                value={data.online_order}\r\n                options={[\r\n                    {\r\n                        label: \"Enable\",\r\n                        value: true,\r\n                    },\r\n                    {\r\n                        label: \"Disable\",\r\n                        value: false,\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"arrival date\"\r\n                name=\"arrival_date\"\r\n                id=\"11\"\r\n                value={data.arrival_date}\r\n                max={data.expire_date.value}\r\n                type=\"date\"\r\n                placeholder=\"e.g. 11-11-2021\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"expire date\"\r\n                name=\"expire_date\"\r\n                id=\"12\"\r\n                value={data.expire_date}\r\n                min={data.arrival_date.value}\r\n                type=\"date\"\r\n                placeholder=\"e.g. 11-11-2021\"\r\n            />\r\n        </PopupForm>\r\n    );\r\n};\r\n\r\nexport default InventoryPopupForm;\r\n","import { useState, DevTools } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport DataTable from \"../common/DataTable\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport store from \"../../state\";\r\nimport ManageBtns from \"../table/ManageBtns\";\r\nimport ProductCell from \"../table/ProductCell\";\r\nimport InventoryForm from \"../forms/InventoryForm\";\r\nimport { getCategories } from \"../../services/categories\";\r\nimport InventoryPopupForm from \"../forms/InventoryPopupForm\";\r\nimport { deleteInventoryItem } from \"../../services/inventoryItems\";\r\nimport { notify } from \"../../utility\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Inventory = () => {\r\n    const {\r\n        tables: { inventory },\r\n    } = useState(store);\r\n    DevTools(inventory).label(\"Inventory\");\r\n\r\n    const showPopupForm = useState(false);\r\n    const sortColumn = useState({ columnName: \"id\", order: \"desc\" });\r\n    let { id: inventoryItemId } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (typeof +inventoryItemId === \"number\") {\r\n            const item = inventory.data.find(\r\n                (item) => item.id.value === +inventoryItemId\r\n            );\r\n            item && inventory.filters.search.set(item.name.value);\r\n        }\r\n    }, [inventoryItemId]);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader\r\n                name=\"Inventory Management\"\r\n                faClass=\"fas fa-boxes\"\r\n                addButton={{\r\n                    label: \"Add New Product\",\r\n                    handler: () => {\r\n                        showPopupForm.set(true);\r\n                    },\r\n                }}\r\n            />\r\n            <DataTable\r\n                filters={filters}\r\n                filtersData={inventory.filters}\r\n                data={inventory.data}\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                form={(state, closeForm) => (\r\n                    <InventoryForm state={state} closeForm={closeForm} />\r\n                )}\r\n                pagination={inventory.pagination}\r\n            />\r\n            <InventoryPopupForm showState={showPopupForm} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Inventory;\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Products List\",\r\n        sortProp: \"id\",\r\n        wrapper: ({ name, photo, unit, id, edited, handleEdit }) => (\r\n            <ProductCell\r\n                name={name.value}\r\n                photo={photo.value}\r\n                unit={unit.value}\r\n                id={id}\r\n                edited={edited}\r\n                onEdit={handleEdit}\r\n            />\r\n        ),\r\n    },\r\n    { title: \"cost\", prop: \"cost\" },\r\n    { title: \"price\", prop: \"price\" },\r\n    { title: \"supplier\", prop: \"supplier\" },\r\n    { title: \"stock\", prop: \"stock\" },\r\n    { title: \"reserved\", prop: \"reserved\" },\r\n    { title: \"arrival date\", prop: \"arrival_date\" },\r\n    { title: \"expire date\", prop: \"expire_date\" },\r\n    {\r\n        title: \"manage\",\r\n        sortable: false,\r\n        wrapper: ({ id, edited, handleEdit }) => (\r\n            <ManageBtns\r\n                id={id}\r\n                edited={edited}\r\n                onEdit={handleEdit}\r\n                onDelete={async () => {\r\n                    const isDelete = window.confirm(\r\n                        \"Are you sure to delete this inventory item?\"\r\n                    );\r\n                    if (isDelete === false) return;\r\n\r\n                    const { data, status } = await deleteInventoryItem(\r\n                        id.get()\r\n                    );\r\n\r\n                    notify({\r\n                        status,\r\n                        waitMsg: \"Deleting Inventory Item...\",\r\n                        successMsg:\r\n                            \"Inventory Item has been deleted successfully!\",\r\n                        successCallback() {\r\n                            store.tables.inventory.data.set((p) => {\r\n                                return p.filter((item) => item.id !== data.id);\r\n                            });\r\n                        },\r\n                    });\r\n                }}\r\n            />\r\n        ),\r\n    },\r\n];\r\n\r\nconst filters = [\r\n    {\r\n        label: \"Search\",\r\n        type: \"search\",\r\n        by: \"name\",\r\n        prop: \"search\",\r\n        placeholder: \"enter the product name here...\",\r\n    },\r\n    {\r\n        label: \"Category\",\r\n        type: \"select\",\r\n        by: \"category\",\r\n        prop: \"category\",\r\n        wide: true,\r\n        options: [{ label: \"All\", value: \"\" }, ...getCategories()],\r\n    },\r\n    {\r\n        label: \"Status\",\r\n        type: \"select\",\r\n        by: \"stock\",\r\n        prop: \"status\",\r\n        handler: (status, stock) => {\r\n            return status === \"in-stock\" ? stock > 0 : stock <= 0;\r\n        },\r\n        options: [\r\n            { label: \"All\", value: \"\" },\r\n            { label: \"In Stock\", value: \"in-stock\" },\r\n            { label: \"Out of Stock\", value: \"out-of-stock\" },\r\n        ],\r\n    },\r\n];\r\n","import http from \"./http\";\r\n\r\nconst productsStatistics = [\r\n    {\r\n        id: 1,\r\n        name: \"Diarrhoea. Relief - Loperamide Capsules\",\r\n        unit: \"6 Capsules\",\r\n        photo: \"/assets/images/5.jpg\",\r\n        cost: 1000,\r\n        price: 1200,\r\n        sold: 375,\r\n        sales: 450000,\r\n        profits: 75000,\r\n        qty: 225,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Ovex Family Pack Tablets\",\r\n        unit: \"4x 100mg Tablets\",\r\n        photo: \"/assets/images/3.jpg\",\r\n        cost: 1200,\r\n        price: 1400,\r\n        sold: 253,\r\n        sales: 354000,\r\n        profits: 50000,\r\n        qty: 20,\r\n    },\r\n];\r\n\r\nexport const getProductsStatistics = () => {\r\n    return Promise.resolve({ data: productsStatistics, status: 200 });\r\n};\r\n\r\nexport const statisticOptions = [\r\n    { label: \"This Day\", value: \"day\" },\r\n    { label: \"This Week\", value: \"week\" },\r\n    { label: \"This month\", value: \"month\" },\r\n    { label: \"This Year\", value: \"year\" },\r\n];\r\n\r\nexport const getOverviewStatistic = (type = \"admin\") => {\r\n    if (type === \"admin\") {\r\n        return Promise.resolve({\r\n            data: {\r\n                views: {\r\n                    counter: 6122,\r\n                    previous_counter: 7110,\r\n                },\r\n                orders: {\r\n                    counter: 220,\r\n                    previous_counter: 188,\r\n                },\r\n                pharmacies: {\r\n                    counter: 102,\r\n                },\r\n                users: {\r\n                    counter: 1365,\r\n                },\r\n            },\r\n            status: 200,\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            data: {\r\n                sales: {\r\n                    counter: 24450,\r\n                    previous_counter: 24199,\r\n                },\r\n                orders: {\r\n                    counter: 220,\r\n                    previous_counter: 188,\r\n                },\r\n                profits: {\r\n                    counter: 4350,\r\n                    previous_counter: 3967,\r\n                },\r\n                sold_products: {\r\n                    counter: 1365,\r\n                    previous_counter: 3808,\r\n                },\r\n            },\r\n            status: 200,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getOrdersStatistic = (time = \"week\") => {\r\n    let data = [];\r\n\r\n    switch (time) {\r\n        case \"day\":\r\n            data = [700, 200, 140, 20];\r\n            break;\r\n        case \"week\":\r\n            data = [5003, 1002, 670, 100];\r\n            break;\r\n        case \"month\":\r\n            data = [11544, 2034, 804, 234];\r\n            break;\r\n        case \"year\":\r\n            data = [55450, 2000, 233, 400];\r\n            break;\r\n    }\r\n\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n\r\nexport const getOnlineOrdersStatistic = (time = \"week\") => {\r\n    let data = [];\r\n\r\n    switch (time) {\r\n        case \"day\":\r\n            data = [7200, 2030, 1403, 220];\r\n            break;\r\n\r\n        case \"week\":\r\n            data = [55003, 11002, 6770, 1700];\r\n            break;\r\n\r\n        case \"month\":\r\n            data = [33544, 22034, 7704, 1934];\r\n            break;\r\n\r\n        case \"year\":\r\n            data = [355450, 92000, 22233, 4400];\r\n            break;\r\n    }\r\n\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n\r\nexport const getViewsStatistic = (time = \"week\") => {\r\n    let data = [];\r\n\r\n    switch (time) {\r\n        case \"day\":\r\n            data = [\r\n                5800, 70, 400, 604, 430, 200, 124, 111, 120, 500, 430, 540, 800,\r\n                505, 782, 955,\r\n            ];\r\n            break;\r\n\r\n        case \"week\":\r\n            data = [2230, 6000, 5003, 9544, 4200, 8000, 6000];\r\n            break;\r\n\r\n        case \"month\":\r\n            data = [2230, 6000, 5003, 9544, 4200, 8000, 6000];\r\n            break;\r\n\r\n        case \"year\":\r\n            data = [\r\n                40450, 33000, 40000, 50000, 60023, 33300, 49739, 69000, 51000,\r\n                23003,\r\n            ];\r\n            break;\r\n    }\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n\r\nexport const getSalesStatistic = (time = \"week\") => {\r\n    let data = [];\r\n\r\n    switch (time) {\r\n        case \"day\":\r\n            data = [\r\n                5800, 70, 400, 604, 430, 200, 124, 111, 120, 500, 430, 540, 800,\r\n                505, 782, 955,\r\n            ];\r\n            break;\r\n\r\n        case \"week\":\r\n            data = [2230, 6000, 5003, 9544, 4200, 8000, 6000];\r\n            break;\r\n\r\n        case \"month\":\r\n            data = [2230, 6000, 5003, 9544, 4200, 8000, 6000];\r\n            break;\r\n\r\n        case \"year\":\r\n            data = [\r\n                40450, 33000, 40000, 50000, 60023, 33300, 49739, 69000, 51000,\r\n                23003,\r\n            ];\r\n            break;\r\n    }\r\n\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n\r\nexport const getOrdersLineStatistic = (time = \"week\") => {\r\n    let data = [];\r\n\r\n    switch (time) {\r\n        case \"day\":\r\n            data = [\r\n                500, 40, 220, 504, 230, 100, 44, 11, 50, 300, 230, 440, 500,\r\n                405, 482, 755,\r\n            ];\r\n            break;\r\n        case \"week\":\r\n            data = [1230, 3000, 2003, 4544, 1200, 4000, 700];\r\n            break;\r\n\r\n        case \"month\":\r\n            data = [1230, 3000, 2003, 4544, 1200, 4000, 700];\r\n            break;\r\n\r\n        case \"year\":\r\n            data = [\r\n                30450, 23000, 33000, 42000, 55023, 27300, 46739, 63000, 44000,\r\n                12003,\r\n            ];\r\n            break;\r\n    }\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n\r\nexport const getProfitsStatistic = (time = \"week\") => {\r\n    let data = [];\r\n\r\n    switch (time) {\r\n        case \"day\":\r\n            data = [\r\n                500, 40, 220, 504, 230, 100, 44, 11, 50, 300, 230, 440, 500,\r\n                405, 482, 755,\r\n            ];\r\n            break;\r\n        case \"week\":\r\n            data = [1230, 3000, 2003, 4544, 1200, 4000, 700];\r\n            break;\r\n\r\n        case \"month\":\r\n            data = [1230, 3000, 2003, 4544, 1200, 4000, 700];\r\n            break;\r\n\r\n        case \"year\":\r\n            data = [\r\n                30450, 23000, 33000, 42000, 55023, 27300, 46739, 63000, 44000,\r\n                12003,\r\n            ];\r\n            break;\r\n    }\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n","const getOrCreateLegendList = (chart, id) => {\r\n    const legendContainer = document.getElementById(id);\r\n    let listContainer = legendContainer.querySelector(\"ul\");\r\n\r\n    if (!listContainer) {\r\n        listContainer = document.createElement(\"ul\");\r\n\r\n        listContainer.style.display = \"flex\";\r\n        listContainer.style.flexDirection = \"row\";\r\n        listContainer.style.flexWrap = \"wrap\";\r\n        if (chart.config._config.type === \"pie\") {\r\n            listContainer.style.justifyContent = \"center\";\r\n        } else {\r\n            listContainer.style.justifyContent = \"flex-end\";\r\n        }\r\n        listContainer.style.fontSize = \"12px\";\r\n        listContainer.style.margin = 0;\r\n        listContainer.style.padding = 0;\r\n\r\n        legendContainer.appendChild(listContainer);\r\n    }\r\n\r\n    return listContainer;\r\n};\r\n\r\nconst htmlLegendPlugin = {\r\n    id: \"htmlLegend\",\r\n    afterUpdate(chart, args, options) {\r\n        const ul = getOrCreateLegendList(chart, options.containerID);\r\n\r\n        // Remove old legend items\r\n        while (ul.firstChild) {\r\n            ul.firstChild.remove();\r\n        }\r\n\r\n        // Reuse the built-in legendItems generator\r\n        const items = chart.options.plugins.legend.labels.generateLabels(chart);\r\n\r\n        items.forEach((item) => {\r\n            const li = document.createElement(\"li\");\r\n            li.style.alignItems = \"center\";\r\n            li.style.cursor = \"pointer\";\r\n            li.style.display = \"flex\";\r\n            li.style.flexDirection = \"row\";\r\n\r\n            if (chart.config._config.type === \"pie\") {\r\n                li.style.marginRight = \"10px\";\r\n                li.style.marginBottom = \"7.2px\";\r\n            } else {\r\n                li.style.marginLeft = \"10px\";\r\n            }\r\n\r\n            li.onclick = () => {\r\n                const { type } = chart.config;\r\n                if (type === \"pie\" || type === \"doughnut\") {\r\n                    // Pie and doughnut charts only have a single dataset and visibility is per item\r\n                    chart.toggleDataVisibility(item.index);\r\n                } else {\r\n                    chart.setDatasetVisibility(\r\n                        item.datasetIndex,\r\n                        !chart.isDatasetVisible(item.datasetIndex)\r\n                    );\r\n                }\r\n                chart.update();\r\n            };\r\n\r\n            // Color box\r\n            const boxSpan = document.createElement(\"span\");\r\n            boxSpan.style.background = item.strokeStyle;\r\n            boxSpan.style.display = \"inline-block\";\r\n            boxSpan.style.height = \"4px\";\r\n            boxSpan.style.marginRight = \"10px\";\r\n            boxSpan.style.width = \"40px\";\r\n            boxSpan.style.borderRadius = \"5px\";\r\n\r\n            // Text\r\n            const textContainer = document.createElement(\"p\");\r\n            textContainer.style.color = \"rgba(6, 13, 22, 0.75)\";\r\n            textContainer.style.fontWeight = \"medium\";\r\n            textContainer.style.margin = 0;\r\n            textContainer.style.padding = 0;\r\n            textContainer.style.textDecoration = item.hidden\r\n                ? \"line-through\"\r\n                : \"\";\r\n\r\n            const text = document.createTextNode(item.text);\r\n            textContainer.appendChild(text);\r\n\r\n            li.appendChild(boxSpan);\r\n            li.appendChild(textContainer);\r\n            ul.appendChild(li);\r\n        });\r\n    },\r\n};\r\n\r\nexport default htmlLegendPlugin;\r\n","import React, { useEffect, useRef, useMemo } from \"react\";\r\nimport SectionHeader from \"./common/SectionHeader\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { getStatisticalLabels, nFormatter } from \"../utility\";\r\nimport htmlLegendPlugin from \"../customLegend\";\r\nimport { statisticOptions } from \"../services/statistic\";\r\n\r\nChart.defaults.font.family = \"Poppins\";\r\nChart.defaults.font.size = \"12px\";\r\nChart.defaults.color = \"#A3A3A3\";\r\n\r\nfunction initLineChart(ctx, type) {\r\n    const chart = new Chart(ctx, {\r\n        type: \"line\",\r\n        options: {\r\n            plugins: {\r\n                htmlLegend: {\r\n                    containerID: \"line-chart-container\",\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            elements: {\r\n                line: {\r\n                    tension: 0.5,\r\n                },\r\n            },\r\n            scales: {\r\n                y: {\r\n                    ticks: {\r\n                        // Include a dollar sign in the ticks\r\n                        callback: function (value, index, values) {\r\n                            return (\r\n                                nFormatter(value) +\r\n                                (type === \"admin\" ? \"\" : \" SDG\")\r\n                            );\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        data: {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    borderColor: \"rgb(0, 119, 182)\",\r\n                    backgroundColor: \"rgba(0, 119, 182, 0.5)\",\r\n                    pointBorderColor: \"rgb(0, 119, 182)\",\r\n                    pointBackgroundColor: \"rgb(0, 119, 182)\",\r\n                    data: [],\r\n                    fill: \"start\",\r\n                },\r\n\r\n                {\r\n                    borderColor: \"rgb(0, 180, 216)\",\r\n                    backgroundColor: \"rgba(0, 180, 216, 0.5)\",\r\n                    pointBorderColor: \"rgb(0, 180, 216)\",\r\n                    pointBackgroundColor: \"rgb(0, 180, 216)\",\r\n                    data: [],\r\n                    fill: \"start\",\r\n                },\r\n            ],\r\n        },\r\n        plugins: [htmlLegendPlugin],\r\n    });\r\n\r\n    return chart;\r\n}\r\n\r\nfunction LineChartSection({ title, data, time, onTimeChange, type = \"admin\" }) {\r\n    const canvas = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const ctx = canvas.current.getContext(\"2d\");\r\n        const chart = initLineChart(ctx, type);\r\n\r\n        if (chart) {\r\n            chart.data.labels = getStatisticalLabels(time);\r\n            chart.data.datasets[0].label = data[0].label;\r\n            chart.data.datasets[0].data = data[0].datasets;\r\n            chart.data.datasets[1].label = data[1].label;\r\n            chart.data.datasets[1].data = data[1].datasets;\r\n            chart.update({ duration: 2000 });\r\n        }\r\n\r\n        return () => chart.destroy();\r\n    }, [time, data]);\r\n\r\n    return (\r\n        <div className=\"col-span-2\">\r\n            <SectionHeader\r\n                name={title}\r\n                faClass=\"fas fa-chart-area\"\r\n                selectMenu={{\r\n                    label: \"Time\",\r\n                    options: statisticOptions,\r\n                    value: time,\r\n                    onchange: ({ target }) => {\r\n                        onTimeChange(target.value);\r\n                    },\r\n                }}\r\n            />\r\n            <div className=\"bg-white shadow-md rounded p-5\">\r\n                <div\r\n                    id=\"line-chart-container\"\r\n                    className=\"mb-2 select-none\"\r\n                ></div>\r\n                <canvas ref={canvas}></canvas>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineChartSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction StatisticsWidget({\r\n    mainText,\r\n    seconderyText,\r\n    percent,\r\n    faClass,\r\n    bgColor,\r\n    iconColor,\r\n    link,\r\n    suffix = \"\",\r\n}) {\r\n    return (\r\n        <div className=\"animate__animated animate__flipInX rounded overflow-hidden flex bg-white shadow-md relative\">\r\n            <i\r\n                className={`${faClass} px-8 py-8 w-26 text-center inline-block text-4xl ${bgColor} ${iconColor}`}\r\n            ></i>\r\n            <div className=\"py-7 pl-4 pr-2 flex-grow\">\r\n                <strong className=\"block text-secondary text-xl\">\r\n                    {`${mainText.toLocaleString(\"en\")} ${suffix}`}\r\n                </strong>\r\n                <span className=\"text-gray-400 text-smd font-light inline-block mt-1\">\r\n                    {seconderyText}\r\n                </span>\r\n                <span className=\"text-xs text-gray-400 absolute top-2.5 right-2.5\">\r\n                    {percent ? (\r\n                        <>\r\n                            <i\r\n                                className={`fas fa-long-arrow-alt-${\r\n                                    percent.direction\r\n                                } ${\r\n                                    percent.direction === \"up\"\r\n                                        ? \"text-green\"\r\n                                        : \"text-red\"\r\n                                }`}\r\n                            ></i>{\" \"}\r\n                            {percent.value}%\r\n                        </>\r\n                    ) : (\r\n                        link && <Link to={link.url}>{link.label}</Link>\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatisticsWidget;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getOverviewStatistic } from \"../services/statistic\";\r\nimport store from \"../state\";\r\nimport overviewStatisticState from \"../states/overviewStatisticState\";\r\nimport SectionHeader from \"./common/SectionHeader\";\r\nimport StatisticsWidget from \"./common/StatisticsWidget\";\r\n\r\nconst OverviewSection = () => {\r\n    const { loggedUser } = useHookstate(store);\r\n    const [overview, setOverview] = useState(overviewStatisticState);\r\n    const userRole = loggedUser.role.get();\r\n    const { views, pharmacies, users, sales, profits, orders, sold_products } =\r\n        overview;\r\n\r\n    const getPercentage = ({ counter, previous_counter }) => {\r\n        const deff = counter - previous_counter;\r\n        return {\r\n            value: ((Math.abs(deff) / previous_counter) * 100 || 0).toFixed(1),\r\n            direction: deff >= 0 ? \"up\" : \"down\",\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { data } = await getOverviewStatistic(userRole);\r\n            setOverview(data);\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader\r\n                name={\r\n                    userRole === \"admin\"\r\n                        ? \"General Overview\"\r\n                        : \"Today's Overview\"\r\n                }\r\n                faClass=\"fas fa-eye\"\r\n            />\r\n            <div className=\"grid gap-6 grid-cols-4\">\r\n                {userRole === \"admin\" ? (\r\n                    <StatisticsWidget\r\n                        mainText={views.counter}\r\n                        seconderyText=\"Today's Views\"\r\n                        percent={getPercentage(views)}\r\n                        faClass=\"fas fa-eye\"\r\n                        bgColor=\"bg-blue-light\"\r\n                        iconColor=\"text-secondary\"\r\n                    />\r\n                ) : (\r\n                    <StatisticsWidget\r\n                        mainText={sales.counter}\r\n                        suffix=\"SDG\"\r\n                        seconderyText=\"Today's Sales\"\r\n                        percent={getPercentage(sales)}\r\n                        faClass=\"fas fa-piggy-bank\"\r\n                        bgColor=\"bg-brighter\"\r\n                        iconColor=\"text-primary\"\r\n                    />\r\n                )}\r\n\r\n                <StatisticsWidget\r\n                    mainText={orders.counter}\r\n                    seconderyText={\r\n                        userRole === \"admin\"\r\n                            ? \"Today's Online Orders\"\r\n                            : \"Today's Total Orders\"\r\n                    }\r\n                    percent={getPercentage(orders)}\r\n                    faClass=\"fas fa-cart-arrow-down\"\r\n                    bgColor=\"bg-gray-100\"\r\n                    iconColor=\"text-gray-400\"\r\n                />\r\n\r\n                {userRole === \"admin\" ? (\r\n                    <StatisticsWidget\r\n                        mainText={pharmacies.counter}\r\n                        seconderyText=\"Active Pharmacies\"\r\n                        link={{\r\n                            url: \"/pharmacies\",\r\n                            label: \"View All\",\r\n                        }}\r\n                        faClass=\"fas fa-clinic-medical\"\r\n                        bgColor=\"bg-brighter\"\r\n                        iconColor=\"text-primary\"\r\n                    />\r\n                ) : (\r\n                    <StatisticsWidget\r\n                        mainText={profits.counter}\r\n                        suffix=\"SDG\"\r\n                        seconderyText=\"Today's Profits\"\r\n                        percent={getPercentage(profits)}\r\n                        faClass=\"fas fa-dollar-sign\"\r\n                        bgColor=\"bg-green-light\"\r\n                        iconColor=\"text-green-dark\"\r\n                    />\r\n                )}\r\n\r\n                {userRole === \"admin\" ? (\r\n                    <StatisticsWidget\r\n                        mainText={users.counter}\r\n                        seconderyText=\"Active Users\"\r\n                        link={{\r\n                            url: \"/users\",\r\n                            label: \"View All\",\r\n                        }}\r\n                        faClass=\"fas fa-users\"\r\n                        bgColor=\"bg-green-lighter\"\r\n                        iconColor=\"text-green\"\r\n                    />\r\n                ) : (\r\n                    <StatisticsWidget\r\n                        mainText={sold_products.counter}\r\n                        seconderyText=\"Today's Sold Products\"\r\n                        percent={getPercentage(sold_products)}\r\n                        faClass=\"fas fa-pills\"\r\n                        bgColor=\"bg-yellow-light\"\r\n                        iconColor=\"text-yellow\"\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OverviewSection;\r\n","import React, { useEffect, useRef, useMemo } from \"react\";\r\nimport SectionHeader from \"./common/SectionHeader\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { getStatisticalLabels, nFormatter } from \"../utility\";\r\nimport htmlLegendPlugin from \"../customLegend\";\r\nimport { statisticOptions } from \"../services/statistic\";\r\n\r\nChart.defaults.font.family = \"Poppins\";\r\nChart.defaults.font.size = \"12px\";\r\nChart.defaults.color = \"#A3A3A3\";\r\n\r\nfunction initPieChart(ctx) {\r\n    const chart = new Chart(ctx, {\r\n        type: \"pie\",\r\n        options: {\r\n            plugins: {\r\n                htmlLegend: {\r\n                    containerID: \"pie-chart-container\",\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n            animation: {\r\n                animateScale: true,\r\n            },\r\n        },\r\n        data: {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: \"\",\r\n                    borderWidth: 3,\r\n                    borderAlign: \"inner\",\r\n                    borderColor: [\r\n                        \"rgb(0, 119, 182)\",\r\n                        \"rgb(0, 180, 216)\",\r\n                        \"rgb(144, 224, 239)\",\r\n                        \"rgb(221, 221, 221)\",\r\n                    ],\r\n                    backgroundColor: [\r\n                        \"rgba(0, 119, 182, 0.5)\",\r\n                        \"rgba(0, 180, 216, 0.5)\",\r\n                        \"rgba(144, 224, 239, 0.5)\",\r\n                        \"rgba(221, 221, 221, 0.5)\",\r\n                    ],\r\n                    data: [],\r\n                },\r\n            ],\r\n        },\r\n        plugins: [htmlLegendPlugin],\r\n    });\r\n\r\n    return chart;\r\n}\r\n\r\nfunction PieChartSection({ title, data, time, onTimeChange }) {\r\n    const canvas = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const ctx = canvas.current.getContext(\"2d\");\r\n        const chart = initPieChart(ctx);\r\n\r\n        if (chart) {\r\n            chart.data.labels = data.statusLabels;\r\n            chart.data.datasets[0].label = data.label;\r\n            chart.data.datasets[0].data = data.datasets;\r\n            chart.update({ duration: 1500 });\r\n        }\r\n\r\n        return () => chart.destroy();\r\n    }, [time, data]);\r\n\r\n    return (\r\n        <div>\r\n            <SectionHeader\r\n                name={title}\r\n                faClass=\"fas fa-chart-pie\"\r\n                selectMenu={{\r\n                    label: \"Time\",\r\n                    options: statisticOptions,\r\n                    value: time,\r\n                    onchange: ({ target }) => {\r\n                        onTimeChange(target.value);\r\n                    },\r\n                }}\r\n            />\r\n            <div className=\"bg-white shadow-md rounded p-5\">\r\n                <div\r\n                    id=\"pie-chart-container\"\r\n                    className=\"mb-2 select-none\"\r\n                ></div>\r\n                <canvas ref={canvas}></canvas>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PieChartSection;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState, DevTools } from \"@hookstate/core\";\r\nimport { getProductsStatistics } from \"../services/statistic\";\r\nimport store from \"../state\";\r\nimport DataTable from \"./common/DataTable\";\r\nimport SectionHeader from \"./common/SectionHeader\";\r\nimport ProductCell from \"./table/ProductCell\";\r\nimport { nFormatter } from \"../utility\";\r\n\r\nfunction ProductsStatistics() {\r\n    const {\r\n        tables: { productsStatistics },\r\n    } = useState(store);\r\n    DevTools(productsStatistics).label(\"Products Statistics\");\r\n    const sortColumn = useState({\r\n        columnName: \"sold\",\r\n        order: \"desc\",\r\n    });\r\n\r\n    useEffect(async () => {\r\n        const { data: productsStatisticsData } = await getProductsStatistics();\r\n        productsStatistics.data.set(productsStatisticsData);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader\r\n                name=\"Products Statistics\"\r\n                faClass=\"fas fa-info-circle\"\r\n            />\r\n            <DataTable\r\n                filters={filters}\r\n                filtersData={productsStatistics.filters}\r\n                data={productsStatistics.data}\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                pagination={productsStatistics.pagination}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductsStatistics;\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Products List\",\r\n        sortProp: \"id\",\r\n        wrapper: ({ name, photo, unit, id }) => (\r\n            <ProductCell\r\n                name={name.value}\r\n                photo={photo.value}\r\n                unit={unit.value}\r\n                id={id}\r\n            />\r\n        ),\r\n    },\r\n    {\r\n        title: \"cost\",\r\n        sortProp: \"cost\",\r\n        wrapper: ({ cost }) => `${cost.get()} SDG`,\r\n    },\r\n    {\r\n        title: \"price\",\r\n        sortProp: \"price\",\r\n        wrapper: ({ price }) => `${price.get()} SDG`,\r\n    },\r\n    { title: \"item sold\", sortProp: \"sold\", prop: \"sold\" },\r\n    {\r\n        title: \"total sales\",\r\n        sortProp: \"sales\",\r\n        wrapper: ({ sales }) => `${nFormatter(sales.get())} SDG`,\r\n    },\r\n    {\r\n        title: \"profits\",\r\n        sortProp: \"profits\",\r\n        wrapper: ({ profits }) => `${nFormatter(profits.get())} SDG`,\r\n    },\r\n    { title: \"remaining qty\", prop: \"qty\" },\r\n    {\r\n        title: \"status\",\r\n        sortProp: \"status\",\r\n        wrapper: ({ qty }) =>\r\n            qty.value > 0 ? (\r\n                <strong className=\"text-green font-semibold\">In Stock</strong>\r\n            ) : (\r\n                <strong className=\"text-red font-semibold\">Out of Stock</strong>\r\n            ),\r\n    },\r\n];\r\n\r\nconst filters = [\r\n    {\r\n        label: \"Search\",\r\n        type: \"search\",\r\n        by: \"name\",\r\n        prop: \"search\",\r\n        placeholder: \"enter the product name here...\",\r\n    },\r\n    // {\r\n    //     label: \"Order By\",\r\n    //     type: \"select\",\r\n    //     prop: \"order\",\r\n    //     options: [\r\n    //         {\r\n    //             label: \"Top Selling\",\r\n    //             value: \"sold\",\r\n    //         },\r\n    //         {\r\n    //             label: \"Top Profitable\",\r\n    //             value: \"profits\",\r\n    //         },\r\n    //     ],\r\n    // },\r\n    // {\r\n    //     label: \"Status\",\r\n    //     type: \"select\",\r\n    //     by: \"stock\",\r\n    //     prop: \"stock\",\r\n    //     handler: (status, stock) => {\r\n    //         return status === \"in-stock\" ? stock > 0 : stock <= 0;\r\n    //     },\r\n    //     options: [\r\n    //         { label: \"All\", value: \"\" },\r\n    //         { label: \"In Stock\", value: \"in-stock\" },\r\n    //         { label: \"Out of Stock\", value: \"out-of-stock\" },\r\n    //     ],\r\n    // },\r\n];\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n    getProfitsStatistic,\r\n    getSalesStatistic,\r\n    getOrdersStatistic,\r\n    getOnlineOrdersStatistic,\r\n    getOrdersLineStatistic,\r\n    getViewsStatistic,\r\n} from \"../../services/statistic\";\r\nimport store from \"../../state\";\r\nimport LineChartSection from \"../lineChartSection\";\r\nimport OverviewSection from \"../OverviewSection\";\r\nimport PieChartSection from \"../PieChartSection\";\r\nimport ProductsStatistics from \"../ProductsStatistics\";\r\n\r\nconst Dashboard = () => {\r\n    const { loggedUser } = useHookstate(store);\r\n    const userRole = loggedUser.role.get();\r\n\r\n    const [lineChartTime, setLineChartTime] = useState(\"week\");\r\n    const [pieChartTime, setPieChartTime] = useState(\"week\");\r\n    const [lineChartState, setLineChartState] = useState([\r\n        {\r\n            label: userRole === \"admin\" ? \"Orders\" : \"Profits\",\r\n            datasets: [],\r\n        },\r\n        {\r\n            label: userRole === \"admin\" ? \"Views\" : \"Sales\",\r\n            datasets: [],\r\n        },\r\n    ]);\r\n\r\n    const [pieChartState, setPieChartState] = useState({\r\n        statusLabels: [\"Finished\", \"Waiting\", \"Payment Confirmed\", \"Canceled\"],\r\n        label: \"Orders Status\",\r\n        datasets: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            let ordersDatasets = [];\r\n            if (userRole === \"admin\") {\r\n                ({ data: ordersDatasets } = await getOnlineOrdersStatistic(\r\n                    pieChartTime\r\n                ));\r\n            } else {\r\n                ({ data: ordersDatasets } = await getOrdersStatistic(\r\n                    pieChartTime\r\n                ));\r\n            }\r\n\r\n            setPieChartState({\r\n                ...pieChartState,\r\n                datasets: ordersDatasets,\r\n            });\r\n        })();\r\n    }, [pieChartTime]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (userRole === \"admin\") {\r\n                const { data: ordersDatasets } = await getOrdersLineStatistic(\r\n                    lineChartTime\r\n                );\r\n                const { data: viewsDatasets } = await getViewsStatistic(\r\n                    lineChartTime\r\n                );\r\n\r\n                setLineChartState([\r\n                    {\r\n                        label: \"Orders\",\r\n                        datasets: ordersDatasets,\r\n                    },\r\n                    {\r\n                        label: \"Views\",\r\n                        datasets: viewsDatasets,\r\n                    },\r\n                ]);\r\n            } else {\r\n                const { data: profitsDatasets } = await getProfitsStatistic(\r\n                    lineChartTime\r\n                );\r\n                const { data: salesDatasets } = await getSalesStatistic(\r\n                    lineChartTime\r\n                );\r\n\r\n                setLineChartState([\r\n                    {\r\n                        label: \"Profits\",\r\n                        datasets: profitsDatasets,\r\n                    },\r\n                    {\r\n                        label: \"Sales\",\r\n                        datasets: salesDatasets,\r\n                    },\r\n                ]);\r\n            }\r\n        })();\r\n    }, [lineChartTime]);\r\n\r\n    return (\r\n        <>\r\n            <OverviewSection />\r\n            <div className=\"grid grid-cols-3 gap-x-6 mt-8\">\r\n                <LineChartSection\r\n                    title={\r\n                        userRole === \"admin\"\r\n                            ? \"Views & Orders\"\r\n                            : \"Sales & Profits\"\r\n                    }\r\n                    time={lineChartTime}\r\n                    data={lineChartState}\r\n                    onTimeChange={setLineChartTime}\r\n                    type={userRole}\r\n                />\r\n                <PieChartSection\r\n                    title=\"Orders Overview\"\r\n                    data={pieChartState}\r\n                    time={pieChartTime}\r\n                    onTimeChange={setPieChartTime}\r\n                />\r\n            </div>\r\n            {userRole === \"pharmacy owner\" && (\r\n                <div className=\"mt-8\">\r\n                    <ProductsStatistics />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst PhoneNumberField = (props) => {\r\n    return (\r\n        <FormField\r\n            label=\"phone number\"\r\n            name=\"phone_number\"\r\n            type=\"tel\"\r\n            maxLength=\"13\"\r\n            pattern=\"\\+?249[19]\\d{8}\"\r\n            placeholder=\"e.g. +2499XXXXXXXX\"\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PhoneNumberField;\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport FormField from \"./FormField\";\r\nimport { updateEmployee } from \"../../services/employees\";\r\nimport { notify } from \"../../utility\";\r\nimport { useState, DevTools } from \"@hookstate/core\";\r\nimport PhoneNumberField from \"./PhoneNumberField\";\r\n\r\nconst EmployeeForm = ({\r\n    state,\r\n    closeForm,\r\n    className = \"grid gap-x-5 gap-y-6 grid-cols-6\",\r\n}) => {\r\n    const formState = useState(JSON.parse(JSON.stringify(state.value)));\r\n    DevTools(formState).label(\"Employee Edit Form State\");\r\n\r\n    return (\r\n        <Form\r\n            className={className}\r\n            onSubmit={async () => {\r\n                const { status } = await updateEmployee(state.get());\r\n                notify({\r\n                    status,\r\n                    waitMsg: \"Updating Employee Information...\",\r\n                    successMsg:\r\n                        \"Employee information has been updated successfully!\",\r\n                    successCallback() {\r\n                        state.set(JSON.parse(JSON.stringify(formState.value)));\r\n                        closeForm();\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"full name\"\r\n                name=\"full_name\"\r\n                id=\"1\"\r\n                value={formState.full_name}\r\n                placeholder=\"enter employee name here...\"\r\n                required\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"username\"\r\n                name=\"username\"\r\n                id=\"2\"\r\n                value={formState.username}\r\n                placeholder=\"username here...\"\r\n                disabled\r\n                required\r\n            />\r\n\r\n            <PhoneNumberField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"3\"\r\n                value={formState.phone_number}\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                id=\"4\"\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                type=\"radio\"\r\n                value={formState.gender}\r\n                options={[\r\n                    {\r\n                        label: \"Male\",\r\n                        value: \"m\",\r\n                    },\r\n                    {\r\n                        label: \"Female\",\r\n                        value: \"f\",\r\n                    },\r\n                ]}\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"role\"\r\n                name=\"role\"\r\n                type=\"select\"\r\n                id=\"5\"\r\n                value={formState.role}\r\n                options={[\r\n                    { label: \"Supervisor\", value: \"supervisor\" },\r\n                    { label: \"Pharmacist\", value: \"pharmacist\" },\r\n                ]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"work from\"\r\n                name=\"work_from\"\r\n                id=\"7\"\r\n                value={formState.work_from}\r\n                type=\"time\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"work to\"\r\n                name=\"work_to\"\r\n                id=\"8\"\r\n                value={formState.work_to}\r\n                type=\"time\"\r\n                min={state.work_from.value}\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default EmployeeForm;\r\n","const employeeFormState = {\r\n    data: {\r\n        full_name: \"\",\r\n        username: \"\",\r\n        phone_number: \"\",\r\n        gender: \"\",\r\n        role: \"pharmacist\",\r\n        work_from: \"\",\r\n        work_to: \"\",\r\n    },\r\n    errors: {},\r\n};\r\n\r\nexport default employeeFormState;\r\n","import { DevTools, useState } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport employeeFormState from \"../../states/employeeFormState\";\r\nimport FormField from \"./FormField\";\r\nimport PopupForm from \"./PopupForm\";\r\nimport { getEmployees, setEmployee } from \"../../services/employees\";\r\nimport { notify } from \"../../utility\";\r\nimport store from \"../../state\";\r\nimport { getUserByUsername, getUsersByRole } from \"../../services/users\";\r\n\r\nconst EmployeePopupForm = ({ showState }) => {\r\n    let state = useState({\r\n        data: { ...employeeFormState.data },\r\n        errors: { ...employeeFormState.errors },\r\n    });\r\n    DevTools(state).label(\"Employee Popup Form\");\r\n\r\n    const employeesData = useState(store.tables.employees.data);\r\n    const { data, errors } = state;\r\n    const avaiableUsersToEmployee = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { data } = await getUsersByRole(\"user\");\r\n                avaiableUsersToEmployee.set(data);\r\n            } catch (ex) {}\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <PopupForm\r\n            title=\"Add New Employee\"\r\n            state={showState}\r\n            className=\"grid gap-x-5 gap-y-6 grid-cols-6 text-sm gray-inputs\"\r\n            formButtons={[\r\n                {\r\n                    label: \"Add Employee\",\r\n                    faClass: \"fas fa-plus\",\r\n                },\r\n            ]}\r\n            onSubmit={async () => {\r\n                const { status } = await setEmployee(data.get());\r\n                notify({\r\n                    status,\r\n                    successMsg: (\r\n                        <>\r\n                            We have send invitation email to{\" \"}\r\n                            <strong>{data.full_name.get()}</strong> to join\r\n                            employee team of this pharmacy branch!\r\n                        </>\r\n                    ),\r\n                    successCallback: async () => {\r\n                        // Clear the form data\r\n                        data.set({ ...employeeFormState.data });\r\n\r\n                        // Update employees data list\r\n                        const { data: newEmployeesData } = await getEmployees();\r\n                        employeesData.set(newEmployeesData);\r\n\r\n                        // Close the popup form\r\n                        showState.set(false);\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"username\"\r\n                name=\"username\"\r\n                id=\"2\"\r\n                type=\"select\"\r\n                value={data.username}\r\n                options={avaiableUsersToEmployee.map((user) => ({\r\n                    label: user.username.value,\r\n                    value: user.username.value,\r\n                }))}\r\n                onChange={async ({ value: selectedUsername }) => {\r\n                    const { data: user } = await getUserByUsername(\r\n                        selectedUsername\r\n                    );\r\n\r\n                    data.username.set(user.username);\r\n                    data.full_name.set(`${user.first_name} ${user.last_name}`);\r\n                    //data.phone_number.set(user.phone_number);\r\n                    //data.gender.set(user.gender);\r\n                }}\r\n                placeholder=\"username here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"full name\"\r\n                name=\"full_name\"\r\n                id=\"1\"\r\n                value={data.full_name}\r\n                placeholder=\"enter employee name here...\"\r\n                disabled\r\n            />\r\n\r\n            {/* <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"phone number\"\r\n                name=\"phone_number\"\r\n                id=\"3\"\r\n                type=\"tel\"\r\n                maxLength=\"13\"\r\n                pattern=\"\\+[0-9]{10,12}\"\r\n                value={data.phone_number}\r\n                placeholder=\"e.g. +2499XXXXXXXX\"\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                id=\"4\"\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                type=\"radio\"\r\n                value={data.gender}\r\n                options={[\r\n                    {\r\n                        label: \"Male\",\r\n                        value: \"m\",\r\n                    },\r\n                    {\r\n                        label: \"Female\",\r\n                        value: \"f\",\r\n                    },\r\n                ]}\r\n                disabled\r\n            /> */}\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"role\"\r\n                name=\"role\"\r\n                type=\"select\"\r\n                id=\"5\"\r\n                value={data.role}\r\n                options={[\r\n                    { label: \"Supervisor\", value: \"supervisor\" },\r\n                    { label: \"Pharmacist\", value: \"pharmacist\" },\r\n                ]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"work from\"\r\n                name=\"work_from\"\r\n                id=\"7\"\r\n                value={data.work_from}\r\n                type=\"time\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"work to\"\r\n                name=\"work_to\"\r\n                id=\"8\"\r\n                value={data.work_to}\r\n                type=\"time\"\r\n                min={state.work_from.value}\r\n            />\r\n        </PopupForm>\r\n    );\r\n};\r\n\r\nexport default EmployeePopupForm;\r\n","import { useState, DevTools } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport DataTable from \"../common/DataTable\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport store from \"../../state\";\r\nimport ManageBtns from \"../table/ManageBtns\";\r\nimport { deleteEmployee, getEmployees } from \"../../services/employees\";\r\nimport EmployeeForm from \"../forms/EmployeeForm\";\r\nimport EmployeePopupForm from \"../forms/EmployeePopupForm\";\r\nimport { useParams } from \"react-router\";\r\nimport { notify } from \"../../utility\";\r\n\r\nconst Employees = () => {\r\n    const {\r\n        tables: { employees },\r\n    } = useState(store);\r\n    DevTools(employees).label(\"Employees\");\r\n\r\n    let { id: employeeId } = useParams();\r\n    const showPopupForm = useState(false);\r\n    const sortColumn = useState({ columnName: \"id\", order: \"desc\" });\r\n\r\n    useEffect(() => {\r\n        if (typeof +employeeId === \"number\") {\r\n            const emp = employees.data.find(\r\n                (emp) => emp.id.value === +employeeId\r\n            );\r\n            emp && employees.filters.search.set(emp.full_name.value);\r\n        }\r\n    }, [employeeId]);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader\r\n                name=\"Staff Management\"\r\n                faClass=\"fas fa-user-tie\"\r\n                addButton={{\r\n                    label: \"Add New Employee\",\r\n                    handler: () => {\r\n                        showPopupForm.set(true);\r\n                    },\r\n                }}\r\n            />\r\n            <DataTable\r\n                filters={filters}\r\n                filtersData={employees.filters}\r\n                data={employees.data}\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                form={(state, closeForm) => (\r\n                    <EmployeeForm state={state} closeForm={closeForm} />\r\n                )}\r\n                pagination={employees.pagination}\r\n            />\r\n            <EmployeePopupForm showState={showPopupForm} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Employees;\r\n\r\nconst columns = [\r\n    {\r\n        title: \"full name\",\r\n        sortProp: \"full_name\",\r\n        wrapper: ({ id, full_name, edited, handleEdit }) => (\r\n            <button\r\n                onClick={() => handleEdit(edited ? null : id.value)}\r\n                className=\"text-smd text-secondary underline font-medium hover:text-primary\"\r\n            >\r\n                {full_name.get()}\r\n            </button>\r\n        ),\r\n    },\r\n    { title: \"username\", prop: \"username\" },\r\n    { title: \"phone number\", prop: \"phone_number\", defaultValue: \"N/A\" },\r\n    {\r\n        title: \"gender\",\r\n        sortProp: \"gender\",\r\n        wrapper: ({ gender }) => {\r\n            switch (gender.get()) {\r\n                case \"m\":\r\n                    return \"male\";\r\n                case \"f\":\r\n                    return \"female\";\r\n                default:\r\n                    return \"N/A\";\r\n            }\r\n        },\r\n    },\r\n    { title: \"status\", prop: \"status\" },\r\n    { title: \"role\", prop: \"role\" },\r\n    {\r\n        title: \"work time\",\r\n        sortable: false,\r\n        wrapper: ({\r\n            work_from: { value: work_from },\r\n            work_to: { value: work_to },\r\n        }) => {\r\n            if (work_from && work_to) return `${work_from} to ${work_to}`;\r\n            else return \"-\";\r\n        },\r\n    },\r\n    {\r\n        title: \"last seen\",\r\n        sortable: false,\r\n        prop: \"last_seen\",\r\n        defaultValue: \"Not logged in yet\",\r\n    },\r\n    { title: \"joining date\", prop: \"joining_date\" },\r\n    {\r\n        title: \"manage\",\r\n        sortable: false,\r\n        wrapper: ({ id, edited, handleEdit }) => (\r\n            <ManageBtns\r\n                id={id}\r\n                edited={edited}\r\n                onEdit={handleEdit}\r\n                onDelete={async () => {\r\n                    const isDelete = window.confirm(\r\n                        \"Are you sure to delete this employee item?\"\r\n                    );\r\n                    if (isDelete === false) return;\r\n\r\n                    const { data, status } = await deleteEmployee(id.get());\r\n\r\n                    notify({\r\n                        status,\r\n                        waitMsg: \"Deleting Employee...\",\r\n                        successMsg: \"Employee has been deleted successfully!\",\r\n                        async successCallback() {\r\n                            store.tables.employees.data.set((p) => {\r\n                                return p.filter((emp) => emp.id !== data.id);\r\n                            });\r\n                        },\r\n                    });\r\n                }}\r\n            />\r\n        ),\r\n    },\r\n];\r\n\r\nconst filters = [\r\n    {\r\n        label: \"Search\",\r\n        type: \"search\",\r\n        by: \"full_name\",\r\n        prop: \"search\",\r\n        placeholder: \"enter the employee name here...\",\r\n    },\r\n    {\r\n        label: \"Role\",\r\n        type: \"select\",\r\n        by: \"role\",\r\n        prop: \"role\",\r\n        options: [\r\n            { label: \"All\", value: \"\" },\r\n            { label: \"Supervisor\", value: \"supervisor\" },\r\n            { label: \"Pharmacist\", value: \"pharmacist\" },\r\n        ],\r\n    },\r\n    {\r\n        label: \"Status\",\r\n        type: \"select\",\r\n        by: \"status\",\r\n        prop: \"status\",\r\n        options: [\r\n            { label: \"All\", value: \"\" },\r\n            { label: \"Approved\", value: \"approve\" },\r\n            { label: \"Pending\", value: \"pending\" },\r\n        ],\r\n    },\r\n];\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport store from \"../state\";\r\n\r\nconst OrderDetials = ({\r\n    data: {\r\n        id,\r\n        date,\r\n        products,\r\n        products_amount,\r\n        vat,\r\n        discount,\r\n        delivery = 0,\r\n        handled_by,\r\n    },\r\n}) => {\r\n    const {\r\n        pharmacyBranch: { name, branch, phone_numbers, email, website },\r\n    } = useState(store);\r\n    return (\r\n        <>\r\n            <div className=\"mb-5 text-right\">\r\n                <button\r\n                    onClick={window.print}\r\n                    className=\"text-smd font-semibold bg-primary text-white px-3 py-1.5 hover:bg-secondary rounded-sm shadow-md\"\r\n                >\r\n                    <i className=\"fas fa-print text-bright mr-2\"></i>\r\n                    Print\r\n                </button>\r\n            </div>\r\n            <div className=\"printable bg-gray-100 border-2 border-gray-300 border-dashed rounded p-5\">\r\n                <section className=\"mb-6\">\r\n                    <h2 className=\"text-center font-semibold text-xl mb-5\">\r\n                        {name.get()} - {branch.get()}\r\n                    </h2>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Products List</th>\r\n                                <th>QTY</th>\r\n                                <th>Subtotal</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map((product) => (\r\n                                <tr key={product.name}>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.qty}</td>\r\n                                    <td>{product.price * product.qty} SDG</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n                <section className=\"mb-6\">\r\n                    <h3 className=\"font-semibold mb-5 border-b pb-2\">\r\n                        Order Summary\r\n                    </h3>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Products Amount</td>\r\n                                <td>{products_amount} SDG</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Discount</td>\r\n                                <td>- {discount} SDG</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>VAT</td>\r\n                                <td>+ {vat} SDG</td>\r\n                            </tr>\r\n                            {delivery !== 0 ? (\r\n                                <tr>\r\n                                    <td>Delivery</td>\r\n                                    <td>+ {delivery} SDG</td>\r\n                                </tr>\r\n                            ) : null}\r\n                            <tr>\r\n                                <td>\r\n                                    <strong>Total Amount</strong>\r\n                                </td>\r\n                                <td>\r\n                                    <strong>\r\n                                        {products_amount -\r\n                                            discount +\r\n                                            vat +\r\n                                            delivery}{\" \"}\r\n                                        SDG\r\n                                    </strong>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n                <p className=\"text-sm text-gray-600 leading-6\">\r\n                    <p>\r\n                        <strong>Order ID: </strong>\r\n                        <span>{id}</span>\r\n                        <span className=\"mx-2\"> - </span>\r\n                        <strong>Handled By: </strong>\r\n                        <span>{handled_by.name || \"Not Handled Yet\"}</span>\r\n                        <span className=\"mx-2\"> - </span>\r\n                        <strong>Date: </strong>\r\n                        <span>{date}</span>\r\n                    </p>\r\n                    <p>\r\n                        <strong>Phone Numbers: </strong>\r\n                        <span>{phone_numbers.get().join(\" - \")}</span>\r\n                        {email && (\r\n                            <>\r\n                                <br />\r\n                                <strong>Email: </strong>\r\n                                <span>{email.get()}</span>\r\n                            </>\r\n                        )}\r\n\r\n                        {website && (\r\n                            <>\r\n                                <br />\r\n                                <strong>Website: </strong>\r\n                                <span>{website.get()}</span>\r\n                            </>\r\n                        )}\r\n                    </p>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderDetials;\r\n","import { useState, DevTools } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport DataTable from \"../common/DataTable\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport store from \"../../state\";\r\nimport ManageBtns from \"../table/ManageBtns\";\r\nimport { updateOrderStatus } from \"../../services/orders\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Popup from \"../common/Popup\";\r\nimport OrderDetials from \"../OrderDetails\";\r\nimport { useParams } from \"react-router\";\r\nimport FormField from \"../forms/FormField\";\r\nimport { notify } from \"../../utility\";\r\n\r\nconst Orders = () => {\r\n    const {\r\n        tables: { orders },\r\n        popupWindow,\r\n    } = useState(store);\r\n    DevTools(orders).label(\"Orders\");\r\n\r\n    let { id: orderId } = useParams();\r\n    const sortColumn = useState({ columnName: \"id\", order: \"desc\" });\r\n\r\n    useEffect(() => {\r\n        if (!isNaN(orderId)) {\r\n            orders.filters.search.set(orderId);\r\n        }\r\n    }, [orderId]);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader name=\"Orders\" faClass=\"fas fa-dolly\" />\r\n            <DataTable\r\n                filters={filters}\r\n                filtersData={orders.filters}\r\n                data={orders.data}\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                pagination={orders.pagination}\r\n            />\r\n            <Popup\r\n                style={\r\n                    popupWindow.type.get() === \"payment-proof\"\r\n                        ? { width: 400 }\r\n                        : {}\r\n                }\r\n                state={popupWindow.display}\r\n                faClass={`fas fa-file-invoice${\r\n                    popupWindow.type.get() === \"payment-proof\" ? \"-dollar\" : \"\"\r\n                }`}\r\n                title={`Order ${\r\n                    popupWindow.type.get() === \"payment-proof\"\r\n                        ? \"Payment Proof\"\r\n                        : `Invoice - #${popupWindow.data.id.get()}`\r\n                }`}\r\n            >\r\n                {popupWindow.type.get() === \"payment-proof\" ? (\r\n                    <img\r\n                        className=\"mx-auto\"\r\n                        src={popupWindow.data.proof_screenshot.get()}\r\n                        style={{ height: 600 }}\r\n                        alt=\"Payment Proof\"\r\n                    />\r\n                ) : (\r\n                    <OrderDetials data={popupWindow.data.get()} />\r\n                )}\r\n            </Popup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n\r\nconst columns = [\r\n    {\r\n        title: \"order ID\",\r\n        sortProp: \"id\",\r\n        wrapper: ({ id, popupWindow, item }) => (\r\n            <a\r\n                href={`#${id.get()}`}\r\n                onClick={() => {\r\n                    popupWindow.data.set(\r\n                        JSON.parse(JSON.stringify(item.value))\r\n                    );\r\n                    popupWindow.type.set(\"order-invoice\");\r\n                    popupWindow.display.set(true);\r\n                }}\r\n                className=\"text-smd\"\r\n            >\r\n                #{id.get()}\r\n            </a>\r\n        ),\r\n    },\r\n    { title: \"type\", prop: \"type\" },\r\n    {\r\n        title: \"total price\",\r\n        sortProp: \"products_amount\",\r\n        wrapper: ({ products_amount, vat, discount, delivery }) => {\r\n            return `${\r\n                products_amount.value +\r\n                vat.value +\r\n                delivery.value -\r\n                discount.value\r\n            } SDG`;\r\n        },\r\n    },\r\n    {\r\n        title: \"status\",\r\n        sortProp: \"status\",\r\n        wrapper: ({ status, id }) => {\r\n            return (\r\n                <FormField\r\n                    name=\"status\"\r\n                    type=\"select\"\r\n                    value={status}\r\n                    onChange={async (selectedValue) => {\r\n                        const { status: responseStatus } =\r\n                            await updateOrderStatus(\r\n                                id.get(),\r\n                                selectedValue.value\r\n                            );\r\n                        notify({\r\n                            status: responseStatus,\r\n                            waitMsg: \"Changing Order Status...\",\r\n                            successMsg: `Order status has been changed to '${selectedValue.label}' successfully!`,\r\n                            successCallback() {\r\n                                status.set(selectedValue.value);\r\n                            },\r\n                        });\r\n                    }}\r\n                    options={[\r\n                        { label: \"Finished\", value: \"finished\" },\r\n                        { label: \"Pending\", value: \"pending\" },\r\n                        { label: \"Confirmed\", value: \"confirmed\" },\r\n                        { label: \"Canceled\", value: \"canceled\" },\r\n                    ]}\r\n                />\r\n            );\r\n        },\r\n    },\r\n    {\r\n        title: \"handled by\",\r\n        sortProp: \"handled_by.name\",\r\n        wrapper: ({ handled_by: { id, name } }) => {\r\n            if (id.get() === \"\") return \"Not handled yet\";\r\n            if (store.loggedUser.role.get() === \"pharmacist\") return name.get();\r\n            return <Link to={`/staff/${id.get()}`}>{name.get()}</Link>;\r\n        },\r\n    },\r\n    { title: \"date\", prop: \"date\" },\r\n    {\r\n        title: \"payment method\",\r\n        sortProp: \"payment.method\",\r\n        wrapper: ({ popupWindow, payment: { method, proof } }) => {\r\n            return (\r\n                <>\r\n                    <span className=\"capitalize align-middle\">\r\n                        {method.get()}\r\n                    </span>\r\n                    {proof.get() && (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"ml-2 px-2 py-1 rounded-sm text-white bg-green hover:text-green hover:bg-white hover:shadow-md transition-none shadow font-semibold text-xxs\"\r\n                            onClick={() => {\r\n                                popupWindow.data.set({\r\n                                    proof_screenshot: proof.get(),\r\n                                });\r\n                                popupWindow.type.set(\"payment-proof\");\r\n                                popupWindow.display.set(true);\r\n                            }}\r\n                        >\r\n                            <i className=\"fas fa-file-invoice-dollar mr-1\"></i>{\" \"}\r\n                            Proof\r\n                        </button>\r\n                    )}\r\n                </>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        title: \"manage\",\r\n        sortable: false,\r\n        wrapper: ({ popupWindow, item }) => {\r\n            return (\r\n                <ManageBtns\r\n                    id={item.id}\r\n                    onView={() => {\r\n                        popupWindow.data.set(\r\n                            JSON.parse(JSON.stringify(item.value))\r\n                        );\r\n                        popupWindow.type.set(\"order-invoice\");\r\n                        popupWindow.display.set(true);\r\n                    }}\r\n                />\r\n            );\r\n        },\r\n    },\r\n];\r\n\r\nconst filters = [\r\n    {\r\n        label: \"Search\",\r\n        type: \"search\",\r\n        by: \"id\",\r\n        prop: \"search\",\r\n        placeholder: \"enter the order ID here...\",\r\n    },\r\n    {\r\n        label: \"Type\",\r\n        type: \"select\",\r\n        by: \"type\",\r\n        prop: \"type\",\r\n        options: [\r\n            { label: \"All\", value: \"\" },\r\n            { label: \"Local\", value: \"local\" },\r\n            { label: \"Online\", value: \"online\" },\r\n        ],\r\n    },\r\n    {\r\n        label: \"Status\",\r\n        type: \"select\",\r\n        by: \"status\",\r\n        prop: \"status\",\r\n        options: [\r\n            { label: \"All\", value: \"\" },\r\n            { label: \"Finished\", value: \"finished\" },\r\n            { label: \"Pending\", value: \"pending\" },\r\n            { label: \"Confirmed\", value: \"confirmed\" },\r\n            { label: \"Canceled\", value: \"canceled\" },\r\n        ],\r\n    },\r\n];\r\n","import React, { useCallback } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FormField from \"./FormField\";\r\nimport { getCityOptions, notify } from \"../../utility\";\r\nimport { useState, DevTools } from \"@hookstate/core\";\r\nimport { updatePharmacyStatus } from \"../../services/pharmacies\";\r\nimport PhoneNumberField from \"./PhoneNumberField\";\r\nimport GoogleMap from \"../GoogleMap\";\r\n\r\nconst rejectBtn = {\r\n    label: \"Reject\",\r\n    faClass: \"fas fa-times-circle text-red group-hover:text-white\",\r\n    className:\r\n        \"bg-gray rounded text-smd shadow text-red hover:bg-red hover:text-white\",\r\n};\r\nconst activeBtn = { label: \"Activate\", faClass: \"fas fa-check-circle\" };\r\n\r\nconst PharmacyForm = ({\r\n    state,\r\n    className = \"grid gap-x-5 gap-y-6 grid-cols-6 text-sm\",\r\n}) => {\r\n    const formState = useState(JSON.parse(JSON.stringify(state.value)));\r\n    DevTools(formState).label(\"Pharmacy Form State\");\r\n\r\n    const changePharmacyStatus = useCallback(async (id, status) => {\r\n        const { status: responseStatus } = await updatePharmacyStatus(\r\n            id,\r\n            status\r\n        );\r\n        notify({\r\n            status: responseStatus,\r\n            waitMsg: \"Changing Pharmacy Status...\",\r\n            successMsg: `Pharmacy status has been changed to '${status}' successfully!`,\r\n            successCallback() {\r\n                state.status.set(status);\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    rejectBtn.onClick = changePharmacyStatus.bind(\r\n        null,\r\n        state.id.get(),\r\n        \"rejected\"\r\n    );\r\n\r\n    activeBtn.onClick = changePharmacyStatus.bind(\r\n        null,\r\n        state.id.get(),\r\n        \"active\"\r\n    );\r\n\r\n    const formButtons = [];\r\n\r\n    switch (state.status.get()) {\r\n        case \"active\":\r\n            formButtons.push(rejectBtn);\r\n            break;\r\n\r\n        case \"rejected\":\r\n            formButtons.push(activeBtn);\r\n            break;\r\n\r\n        default:\r\n            formButtons.push(rejectBtn, activeBtn);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            className={className}\r\n            formButtons={formButtons}\r\n            onSubmit={() => false}\r\n        >\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"pharmacy name\"\r\n                name=\"name\"\r\n                id=\"1\"\r\n                value={formState.name}\r\n                placeholder=\"pharmacy name here...\"\r\n                required\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"branch name\"\r\n                name=\"branch\"\r\n                id=\"2\"\r\n                value={formState.branch}\r\n                placeholder=\"branch name here...\"\r\n                disabled\r\n            />\r\n\r\n            <PhoneNumberField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"phone number 1\"\r\n                name=\"phone_number_1\"\r\n                id=\"3\"\r\n                value={formState.phone_numbers[0]}\r\n                disabled\r\n                required\r\n            />\r\n\r\n            <PhoneNumberField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"phone number 2\"\r\n                name=\"phone_number_2\"\r\n                id=\"4\"\r\n                value={formState.phone_numbers[1]}\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"email\"\r\n                name=\"email\"\r\n                id=\"5\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                placeholder=\"pharmacy email here...\"\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"website\"\r\n                name=\"website\"\r\n                id=\"6\"\r\n                type=\"url\"\r\n                value={formState.website}\r\n                placeholder=\"pharmacy website here...\"\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"state\"\r\n                name=\"state\"\r\n                type=\"select\"\r\n                id=\"7\"\r\n                value={formState.state}\r\n                options={[{ label: \"Khartoum\", value: \"khartoum\" }]}\r\n                required\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"city\"\r\n                name=\"city\"\r\n                id=\"8\"\r\n                type=\"select\"\r\n                options={getCityOptions()}\r\n                value={formState.city}\r\n                placeholder=\"city name here...\"\r\n                required\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-6\"\r\n                label=\"address\"\r\n                name=\"address\"\r\n                id=\"8\"\r\n                value={formState.address}\r\n                placeholder=\"address line here...\"\r\n                required\r\n                disabled\r\n            />\r\n\r\n            <GoogleMap\r\n                className=\"flex flex-col col-span-6\"\r\n                coordinates={{ lat: formState.lat, lng: formState.lng }}\r\n                immutable\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default PharmacyForm;\r\n","import { useState, DevTools } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport DataTable from \"../common/DataTable\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport store from \"../../state\";\r\nimport ManageBtns from \"../table/ManageBtns\";\r\nimport {\r\n    deletePharmacy,\r\n    updatePharmacyStatus,\r\n} from \"../../services/pharmacies\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Popup from \"../common/Popup\";\r\nimport { useParams } from \"react-router\";\r\nimport { notify } from \"../../utility\";\r\nimport PharmacyForm from \"../forms/PharmacyForm\";\r\nimport FormField from \"../forms/FormField\";\r\n\r\nconst Pharmacies = () => {\r\n    const {\r\n        tables: { pharmacies },\r\n        popupWindow,\r\n    } = useState(store);\r\n    DevTools(pharmacies).label(\"Orders\");\r\n\r\n    let { id: pharmacyBranchId } = useParams();\r\n    const sortColumn = useState({ columnName: \"id\", order: \"desc\" });\r\n\r\n    useEffect(() => {\r\n        if (!isNaN(pharmacyBranchId)) {\r\n            const pharmacy = pharmacies.data.find(\r\n                (pharmacy) => pharmacy.id.value === +pharmacyBranchId\r\n            );\r\n            pharmacy && pharmacies.filters.search.set(pharmacy.name.value);\r\n        }\r\n    }, [pharmacyBranchId]);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader\r\n                name=\"Pharmacies Management\"\r\n                faClass=\"fas fa-clinic-medical\"\r\n            />\r\n            <DataTable\r\n                filters={filters}\r\n                filtersData={pharmacies.filters}\r\n                data={pharmacies.data}\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                pagination={pharmacies.pagination}\r\n            />\r\n            <Popup\r\n                state={popupWindow.display}\r\n                faClass=\"fas fa-info-circle\"\r\n                title={`Pharmacy Information Detials`}\r\n            >\r\n                {popupWindow.type.get() === \"pharmacy-info\" && (\r\n                    <PharmacyForm\r\n                        state={pharmacies.data.find(\r\n                            (item) =>\r\n                                item.id.value === popupWindow.data.id.value\r\n                        )}\r\n                    />\r\n                )}\r\n            </Popup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pharmacies;\r\n\r\nconst columns = [\r\n    {\r\n        title: \"pharmacy name\",\r\n        sortProp: \"name\",\r\n        wrapper: ({ id, name, popupWindow, item }) => (\r\n            <a\r\n                href={`#${id.get()}`}\r\n                onClick={() => {\r\n                    popupWindow.data.set({ id: id.value });\r\n                    popupWindow.type.set(\"pharmacy-info\");\r\n                    popupWindow.display.set(true);\r\n                }}\r\n                className=\"text-smd\"\r\n            >\r\n                {name.get()}\r\n            </a>\r\n        ),\r\n    },\r\n    { title: \"branch name\", prop: \"branch\", defaultValue: \"Main Branch\" },\r\n    {\r\n        title: \"status\",\r\n        sortProp: \"status\",\r\n        wrapper: ({ id, status }) => {\r\n            return (\r\n                <FormField\r\n                    name=\"status\"\r\n                    type=\"select\"\r\n                    value={status}\r\n                    onChange={async (selectedValue) => {\r\n                        const { status: responseStatus } =\r\n                            await updatePharmacyStatus(\r\n                                id.get(),\r\n                                selectedValue.value\r\n                            );\r\n                        notify({\r\n                            status: responseStatus,\r\n                            waitMsg: \"Changing Pharmacy Status...\",\r\n                            successMsg: `Pharmacy status has been changed to '${selectedValue.label}' successfully!`,\r\n                            successCallback() {\r\n                                status.set(selectedValue.value);\r\n                            },\r\n                        });\r\n                    }}\r\n                    options={[\r\n                        { label: \"Active\", value: \"active\" },\r\n                        { label: \"Pending\", value: \"pending\" },\r\n                        { label: \"Rejected\", value: \"rejected\" },\r\n                    ]}\r\n                />\r\n            );\r\n        },\r\n    },\r\n    {\r\n        title: \"owned by\",\r\n        sortProp: \"owned_by.name\",\r\n        wrapper: ({ owned_by: { id, name } }) => {\r\n            return <Link to={`/users/${id.get()}`}>{name.get()}</Link>;\r\n        },\r\n    },\r\n    {\r\n        title: \"phone numbers\",\r\n        sortable: false,\r\n        wrapper: ({ phone_numbers }) => {\r\n            return phone_numbers[1].get() === \"\"\r\n                ? phone_numbers[0].get()\r\n                : phone_numbers.get().join(\" - \").trim(\" - \");\r\n        },\r\n    },\r\n    { title: \"joining date\", prop: \"created_at\" },\r\n    {\r\n        title: \"manage\",\r\n        sortable: false,\r\n        wrapper: ({ popupWindow, id, item }) => {\r\n            return (\r\n                <ManageBtns\r\n                    id={item.id}\r\n                    onDelete={async () => {\r\n                        const isDelete = window.confirm(\r\n                            \"Are you sure to delete this pharmacy?\"\r\n                        );\r\n                        if (isDelete === false) return;\r\n\r\n                        const { data, status } = await deletePharmacy(id.get());\r\n\r\n                        notify({\r\n                            status,\r\n                            waitMsg: \"Deleting Pharmacy...\",\r\n                            successMsg:\r\n                                \"Pharmacy has been deleted successfully!\",\r\n                            successCallback() {\r\n                                store.tables.pharmacies.data.set((p) => {\r\n                                    return p.filter(\r\n                                        (pharmacy) => pharmacy.id !== data.id\r\n                                    );\r\n                                });\r\n                            },\r\n                        });\r\n                    }}\r\n                    onView={() => {\r\n                        popupWindow.data.set({ id: id.value });\r\n                        popupWindow.type.set(\"pharmacy-info\");\r\n                        popupWindow.display.set(true);\r\n                    }}\r\n                />\r\n            );\r\n        },\r\n    },\r\n];\r\n\r\nconst filters = [\r\n    {\r\n        label: \"Search\",\r\n        type: \"search\",\r\n        by: \"name\",\r\n        prop: \"search\",\r\n        placeholder: \"enter the pharmacy name here...\",\r\n    },\r\n];\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport FormField from \"./FormField\";\r\nimport { updateUser } from \"../../services/users\";\r\nimport { getCityOptions, notify } from \"../../utility\";\r\nimport { useState, DevTools } from \"@hookstate/core\";\r\nimport PhoneNumberField from \"./PhoneNumberField\";\r\n\r\nconst UserForm = ({\r\n    state,\r\n    closeForm,\r\n    className = \"grid gap-x-5 gap-y-6 grid-cols-12\",\r\n}) => {\r\n    const formState = useState(JSON.parse(JSON.stringify(state.value)));\r\n    DevTools(formState).label(\"User Edit Form State\");\r\n\r\n    return (\r\n        <Form\r\n            className={className}\r\n            onSubmit={async () => {\r\n                const { status } = await updateUser(state.get());\r\n                notify({\r\n                    status,\r\n                    waitMsg: \"Updating User Information...\",\r\n                    successMsg:\r\n                        \"User information has been updated successfully!\",\r\n                    successCallback() {\r\n                        state.set(JSON.parse(JSON.stringify(formState.value)));\r\n                        closeForm && closeForm();\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"first name\"\r\n                name=\"first_name\"\r\n                id=\"1\"\r\n                value={formState.first_name}\r\n                placeholder=\"First name here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"last name\"\r\n                name=\"last_name\"\r\n                id=\"2\"\r\n                value={formState.last_name}\r\n                placeholder=\"Last name here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"username\"\r\n                name=\"username\"\r\n                id=\"3\"\r\n                value={formState.username}\r\n                placeholder=\"username here...\"\r\n                disabled\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"4\"\r\n                value={formState.email}\r\n                placeholder=\"email here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"role\"\r\n                name=\"role\"\r\n                type=\"select\"\r\n                id=\"5\"\r\n                value={formState.role}\r\n                options={[\r\n                    { label: \"Admin\", value: \"admin\" },\r\n                    { label: \"Pharmacy Owner\", value: \"pharmacy owner\" },\r\n                    { label: \"Supervisor\", value: \"supervisor\" },\r\n                    { label: \"Pharmacist\", value: \"pharmacist\" },\r\n                    { label: \"User\", value: \"user\" },\r\n                ]}\r\n                disabled\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"6\"\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                type=\"radio\"\r\n                value={formState.gender}\r\n                options={[\r\n                    {\r\n                        label: \"Male\",\r\n                        value: \"m\",\r\n                    },\r\n                    {\r\n                        label: \"Female\",\r\n                        value: \"f\",\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <PhoneNumberField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"7\"\r\n                value={formState.phone_number}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"status\"\r\n                name=\"status\"\r\n                type=\"select\"\r\n                id=\"8\"\r\n                value={formState.status}\r\n                options={[\r\n                    { label: \"Activated\", value: \"active\" },\r\n                    { label: \"Non-activated\", value: \"non-active\" },\r\n                    { label: \"banned\", value: \"banned\" },\r\n                ]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"state\"\r\n                name=\"state\"\r\n                type=\"select\"\r\n                id=\"9\"\r\n                value={formState.state}\r\n                options={[{ label: \"Khartoum\", value: \"khartoum\" }]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"city\"\r\n                name=\"city\"\r\n                id=\"10\"\r\n                type=\"select\"\r\n                options={getCityOptions()}\r\n                value={formState.city}\r\n                placeholder=\"city name here...\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"address\"\r\n                name=\"address\"\r\n                id=\"11\"\r\n                value={formState.address}\r\n                placeholder=\"address line here...\"\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n","const userFormState = {\r\n    data: {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n        role: \"user\",\r\n        gender: \"\",\r\n        phone_number: \"\",\r\n        status: \"non-active\",\r\n        state: \"khartoum\",\r\n        city: \"\",\r\n        address: \"\",\r\n    },\r\n    errors: {},\r\n};\r\n\r\nexport default userFormState;\r\n","import React from \"react\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst PasswordField = ({ confirmation, ...props }) => {\r\n    return (\r\n        <FormField\r\n            label=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"************\"\r\n            minLength=\"6\"\r\n            maxLength=\"20\"\r\n            pattern={confirmation}\r\n            escapePattern\r\n            required\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PasswordField;\r\n","import { DevTools, useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport userFormState from \"../../states/userFormState\";\r\nimport FormField from \"./FormField\";\r\nimport PopupForm from \"./PopupForm\";\r\nimport { getUsers, setUser } from \"../../services/users\";\r\nimport { getCityOptions, notify } from \"../../utility\";\r\nimport store from \"../../state\";\r\nimport PhoneNumberField from \"./PhoneNumberField\";\r\nimport PasswordField from \"./PasswordField\";\r\n\r\nconst UserPopupForm = ({ showState }) => {\r\n    let state = useState({\r\n        data: { ...userFormState.data },\r\n        errors: { ...userFormState.errors },\r\n    });\r\n    const usersData = useState(store.tables.users.data);\r\n    const { data, errors } = state;\r\n\r\n    DevTools(state).label(\"User Popup Form\");\r\n\r\n    return (\r\n        <PopupForm\r\n            title=\"Add New User\"\r\n            state={showState}\r\n            className=\"grid gap-x-5 gap-y-6 grid-cols-3 text-sm gray-inputs\"\r\n            formButtons={[\r\n                {\r\n                    label: \"Create New User\",\r\n                    faClass: \"fas fa-plus\",\r\n                },\r\n            ]}\r\n            onSubmit={async () => {\r\n                const { status } = await setUser(data.get());\r\n                notify({\r\n                    status,\r\n                    successMsg: \"User has been created successfully!\",\r\n                    successCallback: async () => {\r\n                        // Clear the form data\r\n                        data.set({ ...userFormState.data });\r\n\r\n                        // Update users data list\r\n                        const { data: newUsersData } = await getUsers();\r\n                        usersData.set(newUsersData);\r\n\r\n                        // Close the popup form\r\n                        showState.set(false);\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"first name\"\r\n                name=\"first_name\"\r\n                id=\"1\"\r\n                value={data.first_name}\r\n                placeholder=\"First name here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"last name\"\r\n                name=\"last_name\"\r\n                id=\"2\"\r\n                value={data.last_name}\r\n                placeholder=\"Last name here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"username\"\r\n                name=\"username\"\r\n                id=\"3\"\r\n                value={data.username}\r\n                placeholder=\"username here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"4\"\r\n                value={data.email}\r\n                placeholder=\"email here...\"\r\n                required\r\n            />\r\n\r\n            <PasswordField className=\"flex flex-col\" value={data.password} />\r\n\r\n            <PasswordField\r\n                label=\"Confirm Password\"\r\n                className=\"flex flex-col col-span-1\"\r\n                confirmation={data.password.value}\r\n                value={data.confirm_password}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"role\"\r\n                name=\"role\"\r\n                type=\"select\"\r\n                id=\"5\"\r\n                value={data.role}\r\n                options={[\r\n                    { label: \"Admin\", value: \"admin\" },\r\n                    { label: \"Pharmacy Owner\", value: \"pharmacy owner\" },\r\n                    { label: \"User\", value: \"user\" },\r\n                ]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                id=\"6\"\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                type=\"radio\"\r\n                value={data.gender}\r\n                options={[\r\n                    {\r\n                        label: \"Male\",\r\n                        value: \"m\",\r\n                    },\r\n                    {\r\n                        label: \"Female\",\r\n                        value: \"f\",\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <PhoneNumberField\r\n                className=\"flex flex-col\"\r\n                id=\"7\"\r\n                value={data.phone_number}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"status\"\r\n                name=\"status\"\r\n                type=\"select\"\r\n                id=\"8\"\r\n                value={data.status}\r\n                options={[\r\n                    { label: \"Activated\", value: \"active\" },\r\n                    { label: \"Non-activated\", value: \"non-active\" },\r\n                    { label: \"banned\", value: \"banned\" },\r\n                ]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"state\"\r\n                name=\"state\"\r\n                type=\"select\"\r\n                id=\"9\"\r\n                value={data.state}\r\n                options={[{ label: \"Khartoum\", value: \"khartoum\" }]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"city\"\r\n                name=\"city\"\r\n                id=\"10\"\r\n                value={data.city}\r\n                type=\"select\"\r\n                options={getCityOptions()}\r\n                placeholder=\"city name here...\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"address\"\r\n                name=\"address\"\r\n                id=\"11\"\r\n                value={data.address}\r\n                placeholder=\"address line here...\"\r\n            />\r\n        </PopupForm>\r\n    );\r\n};\r\n\r\nexport default UserPopupForm;\r\n","import { useState, DevTools } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport DataTable from \"../common/DataTable\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport store from \"../../state\";\r\nimport ManageBtns from \"../table/ManageBtns\";\r\nimport { deleteUser } from \"../../services/users\";\r\nimport UserForm from \"../forms/UserForm\";\r\nimport UserPopupForm from \"../forms/UserPopupForm\";\r\nimport { useParams } from \"react-router\";\r\nimport { notify } from \"../../utility\";\r\n\r\nconst Users = () => {\r\n    const {\r\n        tables: { users },\r\n    } = useState(store);\r\n    DevTools(users).label(\"Users\");\r\n\r\n    let { id: userId } = useParams();\r\n    const showPopupForm = useState(false);\r\n    const sortColumn = useState({ columnName: \"id\", order: \"desc\" });\r\n\r\n    useEffect(() => {\r\n        if (typeof +userId === \"number\") {\r\n            const user = users.data.find((user) => user.id.value === +userId);\r\n            user && users.filters.search.set(user.first_name.value);\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader\r\n                name=\"Users Management\"\r\n                faClass=\"fas fa-users\"\r\n                addButton={{\r\n                    label: \"Add New User\",\r\n                    handler: () => {\r\n                        showPopupForm.set(true);\r\n                    },\r\n                }}\r\n            />\r\n            <DataTable\r\n                filters={filters}\r\n                filtersData={users.filters}\r\n                data={users.data}\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                form={(state, closeForm) => (\r\n                    <UserForm state={state} closeForm={closeForm} />\r\n                )}\r\n                pagination={users.pagination}\r\n            />\r\n            <UserPopupForm showState={showPopupForm} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n\r\nconst columns = [\r\n    {\r\n        title: \"full name\",\r\n        sortProp: \"full_name\",\r\n        wrapper: ({ id, first_name, last_name, edited, handleEdit }) => (\r\n            <button\r\n                onClick={() => handleEdit(edited ? null : id.value)}\r\n                className=\"text-smd text-secondary underline font-medium hover:text-primary\"\r\n            >\r\n                {`${first_name.get()} ${last_name.get()}`}\r\n            </button>\r\n        ),\r\n    },\r\n    { title: \"username\", prop: \"username\" },\r\n    { title: \"email\", prop: \"email\" },\r\n    {\r\n        title: \"gender\",\r\n        sortProp: \"gender\",\r\n        wrapper: ({ gender }) => {\r\n            return gender.get() === \"m\" ? \"male\" : \"female\";\r\n        },\r\n    },\r\n    { title: \"role\", prop: \"role\" },\r\n    { title: \"status\", prop: \"status\" },\r\n    {\r\n        title: \"last seen\",\r\n        sortable: false,\r\n        prop: \"last_seen\",\r\n        defaultValue: \"Not logged in yet\",\r\n    },\r\n    { title: \"joining date\", prop: \"joining_date\" },\r\n    {\r\n        title: \"manage\",\r\n        sortable: false,\r\n        wrapper: ({ id, edited, handleEdit }) => (\r\n            <ManageBtns\r\n                id={id}\r\n                edited={edited}\r\n                onEdit={handleEdit}\r\n                onDelete={async () => {\r\n                    const isDelete = window.confirm(\r\n                        \"Are you sure to delete this user item?\"\r\n                    );\r\n                    if (isDelete === false) return;\r\n\r\n                    const { data, status } = await deleteUser(id.get());\r\n\r\n                    notify({\r\n                        status,\r\n                        waitMsg: \"Deleting User...\",\r\n                        successMsg: \"User has been deleted successfully!\",\r\n                        successCallback() {\r\n                            store.tables.users.data.set((p) => {\r\n                                return p.filter((user) => user.id !== data.id);\r\n                            });\r\n                        },\r\n                    });\r\n                }}\r\n            />\r\n        ),\r\n    },\r\n];\r\n\r\nconst filters = [\r\n    {\r\n        label: \"Search\",\r\n        type: \"search\",\r\n        by: \"first_name\",\r\n        prop: \"search\",\r\n        placeholder: \"enter the user name here...\",\r\n    },\r\n    {\r\n        label: \"Role\",\r\n        type: \"select\",\r\n        by: \"role\",\r\n        prop: \"role\",\r\n        wide: true,\r\n        options: [\r\n            { label: \"All\", value: \"\" },\r\n            { label: \"Admin\", value: \"admin\" },\r\n            { label: \"Pharmacy Owner\", value: \"pharmacy owner\" },\r\n            { label: \"Supervisor\", value: \"supervisor\" },\r\n            { label: \"Pharmacist\", value: \"pharmacist\" },\r\n            { label: \"User\", value: \"user\" },\r\n        ],\r\n    },\r\n    {\r\n        label: \"Status\",\r\n        type: \"select\",\r\n        by: \"status\",\r\n        prop: \"status\",\r\n        options: [\r\n            { label: \"All\", value: \"\" },\r\n            { label: \"Activated\", value: \"active\" },\r\n            { label: \"Non-activated\", value: \"non-active\" },\r\n            { label: \"banned\", value: \"banned\" },\r\n        ],\r\n    },\r\n];\r\n","import React from \"react\";\r\nimport DeleteBtn from \"../common/DeleteBtn\";\r\nimport store from \"../../state\";\r\nimport { useState } from \"@hookstate/core\";\r\nimport FormField from \"./FormField\";\r\n\r\nconst ProductPhoto = ({\r\n    className,\r\n    url,\r\n    size,\r\n    label = \"Product Photo\",\r\n    name = \"product_photo\",\r\n}) => {\r\n    const {\r\n        uploads: { productPhoto },\r\n    } = useState(store);\r\n\r\n    if (productPhoto.value) {\r\n        url = { value: productPhoto.get().name };\r\n        size = { value: productPhoto.get().size };\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            <label htmlFor=\"0\" className=\"mb-2 font-medium capitalize block\">\r\n                {label}\r\n            </label>\r\n            <div className=\"flex\" style={{ height: \"calc(100% - 27px)\" }}>\r\n                <div\r\n                    className=\"flex-shrink-0 border bg-white shadow p-2 bg-center bg-origin-content bg-no-repeat rounded-sm bg-contain w-1/3\"\r\n                    style={{\r\n                        backgroundImage: `url('${url.value}')`,\r\n                    }}\r\n                >\r\n                    {url.value === \"\" || productPhoto.value ? (\r\n                        <i className=\"far fa-image text-5xl block text-center mt-6 text-gray-300\"></i>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </div>\r\n                <div className=\"flex-grow ml-4\">\r\n                    <p className=\"rounded break-all bg-white border-dashed border-2 leading-5 p-2 text-xs\">\r\n                        <dl>\r\n                            <dt className=\"inline-block font-semibold mr-1.5\">\r\n                                Name:\r\n                            </dt>\r\n                            <dd className=\"inline-block\">\r\n                                {url.value.split(\"/\").pop()}\r\n                            </dd>\r\n                            <br />\r\n                            <dt className=\"inline-block font-semibold mr-2\">\r\n                                Size:\r\n                            </dt>\r\n                            <dd className=\"inline-block\">\r\n                                {(size.value / 1000).toFixed(1)} KB\r\n                            </dd>\r\n                        </dl>\r\n                    </p>\r\n                    <div className=\"mt-3 leading-4\">\r\n                        {url.value !== \"\" && (\r\n                            <DeleteBtn\r\n                                onDelete={() => {\r\n                                    if (productPhoto.value === \"\") {\r\n                                        url.set(\"\");\r\n                                        size.set(\"\");\r\n                                    } else {\r\n                                        productPhoto.set(\"\");\r\n                                    }\r\n                                }}\r\n                            />\r\n                        )}\r\n                        <FormField\r\n                            id=\"0\"\r\n                            name={name}\r\n                            value={productPhoto}\r\n                            type=\"file\"\r\n                            inputOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductPhoto;\r\n","import React from \"react\";\r\nimport CategoriesField from \"./CategoriesField\";\r\nimport CompaniesField from \"./CompaniesField\";\r\nimport Form from \"./Form\";\r\nimport FormField from \"./FormField\";\r\nimport { updateProduct, uploadProductPhoto } from \"../../services/products\";\r\nimport { notify } from \"../../utility\";\r\nimport { useState, DevTools } from \"@hookstate/core\";\r\nimport ProductPhoto from \"./ProductPhoto\";\r\n\r\nconst ProductForm = ({\r\n    state,\r\n    closeForm,\r\n    className = \"grid gap-x-5 gap-y-6 grid-cols-8\",\r\n}) => {\r\n    const formState = useState(JSON.parse(JSON.stringify(state.value)));\r\n    DevTools(formState).label(\"Product Edit Form State\");\r\n\r\n    return (\r\n        <Form\r\n            className={className}\r\n            onSubmit={async () => {\r\n                const { status } = await updateProduct(formState.value);\r\n                notify({\r\n                    status,\r\n                    waitMsg: \"Updating Product Information...\",\r\n                    successMsg: \"Product has been updated successfully!\",\r\n                    async successCallback() {\r\n                        const { status, data } = await uploadProductPhoto(\r\n                            formState.id.value\r\n                        );\r\n                        notify({\r\n                            status,\r\n                            waitMsg: \"Uploading Product Photo...\",\r\n                            successMsg:\r\n                                \"Product Photo has been uploaded successfully!\",\r\n                            successCallback() {\r\n                                state.set(\r\n                                    JSON.parse(JSON.stringify(formState.value))\r\n                                );\r\n                                state.photo.merge(data);\r\n                                closeForm();\r\n                            },\r\n                        });\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <ProductPhoto\r\n                className=\"col-span-2 row-span-2\"\r\n                url={formState.photo.url}\r\n                size={formState.photo.size}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"product name\"\r\n                name=\"product_name\"\r\n                id=\"1\"\r\n                value={formState.name}\r\n                placeholder=\"enter product name here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"barcode\"\r\n                name=\"barcode\"\r\n                id=\"2\"\r\n                value={formState.barcode}\r\n                placeholder=\"barcode here...\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"unit size\"\r\n                name=\"unit_size\"\r\n                id=\"3\"\r\n                value={formState.unit}\r\n                placeholder=\"e.g. 6 Capsules\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"need perspection?\"\r\n                name=\"perspection\"\r\n                type=\"radio\"\r\n                value={formState.need_perspection}\r\n                options={[\r\n                    {\r\n                        label: \"Yes\",\r\n                        value: true,\r\n                    },\r\n                    {\r\n                        label: \"No\",\r\n                        value: false,\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <CategoriesField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"4\"\r\n                value={formState.category}\r\n                required\r\n            />\r\n\r\n            <CompaniesField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"5\"\r\n                value={formState.company}\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"ingredient\"\r\n                name=\"ingredient\"\r\n                id=\"6\"\r\n                value={formState.ingredient}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"product description\"\r\n                name=\"description\"\r\n                id=\"7\"\r\n                value={formState.description}\r\n                type=\"textarea\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"usage instructions\"\r\n                name=\"usage\"\r\n                id=\"8\"\r\n                value={formState.usage}\r\n                type=\"textarea\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"warnings\"\r\n                name=\"warnings\"\r\n                id=\"9\"\r\n                value={formState.warnings}\r\n                type=\"textarea\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"side effects\"\r\n                name=\"side_effects\"\r\n                id=\"10\"\r\n                value={formState.side_effects}\r\n                type=\"textarea\"\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ProductForm;\r\n","const productFormState = {\r\n    data: {\r\n        name: \"\",\r\n        barcode: \"\",\r\n        unit: \"\",\r\n        category: \"\",\r\n        company: \"\",\r\n        photo: { url: \"\", size: \"\" },\r\n        ingredient: \"\",\r\n        need_perspection: false,\r\n        description: \"\",\r\n        usage: \"\",\r\n        warnings: \"\",\r\n        side_effects: \"\",\r\n    },\r\n    errors: {},\r\n};\r\n\r\nexport default productFormState;\r\n","import { DevTools, useHookstate } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport productFormState from \"../../states/productFormState\";\r\nimport CategoriesField from \"./CategoriesField\";\r\nimport CompaniesField from \"./CompaniesField\";\r\nimport FormField from \"./FormField\";\r\nimport PopupForm from \"./PopupForm\";\r\nimport {\r\n    getProducts,\r\n    setProduct,\r\n    uploadProductPhoto,\r\n} from \"../../services/products\";\r\nimport { notify } from \"../../utility\";\r\nimport ProductPhoto from \"./ProductPhoto\";\r\nimport store from \"../../state\";\r\n\r\nconst ProductPopupForm = ({ showState }) => {\r\n    let state = useHookstate({\r\n        errors: { ...productFormState.errors },\r\n        data: { ...productFormState.data },\r\n    });\r\n    const {\r\n        uploads: { productPhoto },\r\n        tables: {\r\n            products: { data: productsData },\r\n        },\r\n    } = useHookstate(store);\r\n    const { data, errors } = state;\r\n    DevTools(state).label(\"Product Popup Form\");\r\n\r\n    return (\r\n        <PopupForm\r\n            title=\"Add New Product\"\r\n            state={showState}\r\n            onClose={() => {\r\n                productPhoto.set(\"\");\r\n            }}\r\n            formButtons={[\r\n                {\r\n                    label: \"Add Product\",\r\n                    faClass: \"fas fa-plus\",\r\n                },\r\n            ]}\r\n            className=\"grid gap-x-5 gap-y-6 grid-cols-4 text-sm gray-inputs\"\r\n            onSubmit={async () => {\r\n                const { status, data: productData } = await setProduct(\r\n                    data.get()\r\n                );\r\n                notify({\r\n                    status,\r\n                    successMsg: \"Product Item has been added successfully!\",\r\n                    successCallback: async () => {\r\n                        if (productPhoto.get() === \"\") {\r\n                            // Clear the form data\r\n                            data.set({ ...productFormState.data });\r\n\r\n                            // Close the popup form\r\n                            showState.set(false);\r\n\r\n                            // Update inventory data list\r\n                            const { data: newProductsData } =\r\n                                await getProducts();\r\n                            productsData.set(newProductsData);\r\n                        } else {\r\n                            const { status, data: photoData } =\r\n                                await uploadProductPhoto(productData.id);\r\n\r\n                            notify({\r\n                                status,\r\n                                waitMsg: \"Uploading Product Photo...\",\r\n                                successMsg:\r\n                                    \"Product Photo has been uploaded successfully!\",\r\n                                successCallback() {\r\n                                    productData.photo = photoData;\r\n\r\n                                    // Clear the form data\r\n                                    data.set({ ...productFormState.data });\r\n                                    productPhoto.set(\"\");\r\n\r\n                                    // Close the popup form\r\n                                    showState.set(false);\r\n\r\n                                    // Update inventory data list\r\n                                    (async () => {\r\n                                        const { data: newProductsData } =\r\n                                            await getProducts();\r\n                                        productsData.set(newProductsData);\r\n                                    })();\r\n                                },\r\n                            });\r\n                        }\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <ProductPhoto\r\n                className=\"col-span-2 row-span-2\"\r\n                url={data.photo.url}\r\n                size={data.photo.size}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"product name\"\r\n                name=\"product_name\"\r\n                id=\"1\"\r\n                value={data.name}\r\n                placeholder=\"enter product name here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"barcode\"\r\n                name=\"barcode\"\r\n                id=\"2\"\r\n                value={data.barcode}\r\n                placeholder=\"barcode here...\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"unit size\"\r\n                name=\"unit_size\"\r\n                id=\"3\"\r\n                value={data.unit}\r\n                placeholder=\"e.g. 6 Capsules\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                label=\"need perspection?\"\r\n                name=\"perspection\"\r\n                type=\"radio\"\r\n                value={data.need_perspection}\r\n                options={[\r\n                    {\r\n                        label: \"Yes\",\r\n                        value: true,\r\n                    },\r\n                    {\r\n                        label: \"No\",\r\n                        value: false,\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <CategoriesField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"4\"\r\n                value={data.category}\r\n                required\r\n            />\r\n\r\n            <CompaniesField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"5\"\r\n                value={data.company}\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"ingredient\"\r\n                name=\"ingredient\"\r\n                id=\"6\"\r\n                value={data.ingredient}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"product description\"\r\n                name=\"description\"\r\n                id=\"7\"\r\n                value={data.description}\r\n                type=\"textarea\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"usage instructions\"\r\n                name=\"usage\"\r\n                id=\"8\"\r\n                value={data.usage}\r\n                type=\"textarea\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"warnings\"\r\n                name=\"warnings\"\r\n                id=\"9\"\r\n                value={data.warnings}\r\n                type=\"textarea\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"side effects\"\r\n                name=\"side_effects\"\r\n                id=\"10\"\r\n                value={data.side_effects}\r\n                type=\"textarea\"\r\n            />\r\n        </PopupForm>\r\n    );\r\n};\r\n\r\nexport default ProductPopupForm;\r\n","import { useState, DevTools } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport DataTable from \"../common/DataTable\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport store from \"../../state\";\r\nimport ManageBtns from \"../table/ManageBtns\";\r\nimport ProductCell from \"../table/ProductCell\";\r\nimport ProductForm from \"../forms/ProductForm\";\r\nimport { getCategories } from \"../../services/categories\";\r\nimport ProductPopupForm from \"../forms/ProductPopupForm\";\r\nimport { deleteProduct } from \"../../services/products\";\r\nimport { notify } from \"../../utility\";\r\nimport { getCompanies } from \"../../services/companies\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Products = () => {\r\n    const {\r\n        tables: { products },\r\n        uploads: { productPhoto },\r\n    } = useState(store);\r\n    DevTools(products).label(\"Product\");\r\n\r\n    let { id: productId } = useParams();\r\n    const showPopupForm = useState(false);\r\n    const sortColumn = useState({ columnName: \"id\", order: \"desc\" });\r\n\r\n    useEffect(() => {\r\n        if (typeof +productId === \"number\") {\r\n            const product = products.data.find(\r\n                (product) => product.id.value === +productId\r\n            );\r\n            product && products.filters.search.set(product.name.value);\r\n        }\r\n    }, [productId]);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader\r\n                name=\"Products Catalog\"\r\n                faClass=\"fas fa-boxes\"\r\n                addButton={{\r\n                    label: \"Add New Product\",\r\n                    handler: () => {\r\n                        showPopupForm.set(true);\r\n                    },\r\n                }}\r\n            />\r\n            <DataTable\r\n                filters={filters}\r\n                filtersData={products.filters}\r\n                data={products.data}\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                form={(state, closeForm) => (\r\n                    <ProductForm\r\n                        state={state}\r\n                        closeForm={() => {\r\n                            closeForm();\r\n                            productPhoto.set(\"\");\r\n                        }}\r\n                    />\r\n                )}\r\n                pagination={products.pagination}\r\n            />\r\n            <ProductPopupForm showState={showPopupForm} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Products List\",\r\n        sortProp: \"id\",\r\n        wrapper: ({ name, photo, unit, id, edited, handleEdit }) => (\r\n            <ProductCell\r\n                name={name.value}\r\n                photo={photo.url.value}\r\n                unit={unit.value}\r\n                id={id}\r\n                edited={edited}\r\n                onEdit={handleEdit}\r\n            />\r\n        ),\r\n    },\r\n    { title: \"barcode\", prop: \"barcode\" },\r\n    { title: \"category\", prop: \"category\" },\r\n    { title: \"company\", prop: \"company\" },\r\n    {\r\n        title: \"ingredient\",\r\n        sortProp: \"ingredient\",\r\n        wrapper: ({ ingredient }) => ingredient.value || \"Unknown\",\r\n    },\r\n    {\r\n        title: \"need perspection?\",\r\n        sortProp: \"need_perspection\",\r\n        wrapper: ({ need_perspection }) =>\r\n            need_perspection.value ? \"Yes\" : \"No\",\r\n    },\r\n    {\r\n        title: \"manage\",\r\n        sortable: false,\r\n        wrapper: ({ id, edited, handleEdit }) => (\r\n            <ManageBtns\r\n                id={id}\r\n                edited={edited}\r\n                onEdit={(e) => {\r\n                    handleEdit(e);\r\n                    store.uploads.productPhoto.set(\"\");\r\n                }}\r\n                onDelete={async () => {\r\n                    const isDelete = window.confirm(\r\n                        \"Are you sure to delete this product?\"\r\n                    );\r\n                    if (isDelete === false) return;\r\n\r\n                    const { data, status } = await deleteProduct(id.get());\r\n\r\n                    notify({\r\n                        status,\r\n                        waitMsg: \"Deleting Product...\",\r\n                        successMsg: \"Product has been deleted successfully!\",\r\n                        successCallback() {\r\n                            store.tables.products.data.set((p) => {\r\n                                return p.filter(\r\n                                    (product) => product.id !== data.id\r\n                                );\r\n                            });\r\n                        },\r\n                    });\r\n                }}\r\n            />\r\n        ),\r\n    },\r\n];\r\n\r\nconst filters = [\r\n    {\r\n        label: \"Search\",\r\n        type: \"search\",\r\n        by: \"name\",\r\n        prop: \"search\",\r\n        placeholder: \"enter the product name here...\",\r\n    },\r\n    {\r\n        label: \"Category\",\r\n        type: \"select\",\r\n        by: \"category\",\r\n        prop: \"category\",\r\n        options: [{ label: \"All\", value: \"\" }, ...getCategories()],\r\n        wide: true,\r\n    },\r\n    {\r\n        label: \"Company\",\r\n        type: \"select\",\r\n        by: \"company\",\r\n        prop: \"company\",\r\n        options: [{ label: \"All\", value: \"\" }, ...getCompanies()],\r\n    },\r\n];\r\n","import React, { useCallback, useState } from \"react\";\r\n\r\nconst Section = ({ label, className, children, contentClassName = \"p-5\" }) => {\r\n    const [display, setDisplay] = useState(true);\r\n\r\n    const handleDisplay = useCallback(() => {\r\n        setDisplay(!display);\r\n    }, [display]);\r\n\r\n    return (\r\n        <section\r\n            className={`${\r\n                display ? \"shadow-md\" : \"shadow\"\r\n            } rounded ${className}`}\r\n        >\r\n            <h3\r\n                onClick={handleDisplay}\r\n                className={`${\r\n                    display ? \"rounded-t\" : \"rounded\"\r\n                } bg-gray cursor-pointer items-center flex text-sm text-gray-600 select-none border-b-2 px-4 py-3 font-semibold`}\r\n            >\r\n                {label}\r\n                <i\r\n                    className={`fas fa-angle-${\r\n                        display ? \"up\" : \"down\"\r\n                    } text-gray-300 ml-auto`}\r\n                ></i>\r\n            </h3>\r\n            {display && (\r\n                <div\r\n                    className={`text-sm bg-white rounded-b select-none ${contentClassName}`}\r\n                >\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Section;\r\n","import http from \"./http\";\r\n\r\nexport const setVATOption = (id, data) => {\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n\r\nexport const setDeliveryOption = (id, data) => {\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n\r\nexport const setPaymentOption = (id, type, data) => {\r\n    if (type === \"mbok\") {\r\n        return Promise.resolve({ data, status: 200 });\r\n    } else {\r\n        return Promise.resolve({ data, status: 200 });\r\n    }\r\n};\r\n\r\nexport const setPharmacyInformation = (id, data) => {\r\n    return Promise.resolve({ data, status: 200 });\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nconst SubSection = ({ label, children }) => {\r\n    const [display, setDisplay] = useState(false);\r\n\r\n    return (\r\n        <section\r\n            className={`shadow overflow-hidden${\r\n                display ? \"\" : \" border-b-2 last:border-b-0\"\r\n            }`}\r\n        >\r\n            <h4\r\n                onClick={() => setDisplay(!display)}\r\n                className=\"flex cursor-pointer items-center bg-secondary font-semibold text-sm text-white shadow px-3 py-2\"\r\n            >\r\n                {label}\r\n                <span className=\"bg-white rounded-sm shadow text-secondary ml-2 text-xxs px-1.5\">\r\n                    <i className=\"fas fa-check\"></i> Active\r\n                </span>\r\n                <i\r\n                    className={`fas fa-angle-${\r\n                        display ? \"up\" : \"down\"\r\n                    } ml-auto text-xs`}\r\n                ></i>\r\n            </h4>\r\n            {display && children}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SubSection;\r\n","import React from \"react\";\r\nimport SubSection from \"./common/SubSection\";\r\nimport FormButton from \"./forms/FormButton\";\r\nimport FormField from \"./forms/FormField\";\r\n\r\nconst ATMCardOption = ({ data, onSave, onDeactivate }) => {\r\n    return (\r\n        <SubSection label=\"ATM Card\">\r\n            <form\r\n                onSubmit={onSave}\r\n                className=\"p-4 select-none bg-gray grid gap-y-5 grid-cols-1\"\r\n            >\r\n                <FormField\r\n                    label=\"card no\"\r\n                    name=\"card_no\"\r\n                    id=\"card_no\"\r\n                    type=\"number\"\r\n                    value={data.card_no}\r\n                    required\r\n                />\r\n\r\n                <FormField\r\n                    label=\"card owner name\"\r\n                    name=\"card_onwer_name\"\r\n                    id=\"card_onwer_name\"\r\n                    value={data.card_owner_name}\r\n                    required\r\n                />\r\n\r\n                <FormField\r\n                    label=\"bank name\"\r\n                    name=\"bank_name\"\r\n                    id=\"bank_name\"\r\n                    value={data.bank_name}\r\n                    required\r\n                />\r\n\r\n                <div className=\"flex justify-end\">\r\n                    <FormButton\r\n                        label=\"Deactivate\"\r\n                        faClass=\"fas fa-times text-red\"\r\n                        className=\"bg-white text-black shadow-md hover:text-red\"\r\n                        type=\"button\"\r\n                        onClick={onDeactivate}\r\n                    />\r\n                    <FormButton label=\"Save\" />\r\n                </div>\r\n            </form>\r\n        </SubSection>\r\n    );\r\n};\r\n\r\nexport default ATMCardOption;\r\n","import React from \"react\";\r\nimport SubSection from \"./common/SubSection\";\r\nimport FormButton from \"./forms/FormButton\";\r\nimport FormField from \"./forms/FormField\";\r\n\r\nconst MbokOption = ({ data, onSave, onDeactivate }) => {\r\n    return (\r\n        <SubSection label=\"MBOK\">\r\n            <form\r\n                onSubmit={onSave}\r\n                className=\"p-4 select-none bg-gray grid gap-y-5 grid-cols-1\"\r\n            >\r\n                <FormField\r\n                    label=\"account no\"\r\n                    name=\"mbok_account_no\"\r\n                    id=\"mbok_account_no\"\r\n                    type=\"number\"\r\n                    value={data.account_no}\r\n                    required\r\n                />\r\n\r\n                <FormField\r\n                    label=\"account onwer name\"\r\n                    name=\"mbok_account_name\"\r\n                    id=\"mbok_account_name\"\r\n                    value={data.account_owner_name}\r\n                    required\r\n                />\r\n\r\n                <FormField\r\n                    label=\"account branch name\"\r\n                    name=\"mbok_account_branch\"\r\n                    id=\"mbok_account_branch\"\r\n                    value={data.bank_branch_name}\r\n                    required\r\n                />\r\n                <div className=\"flex justify-end\">\r\n                    <FormButton\r\n                        label=\"Deactivate\"\r\n                        faClass=\"fas fa-times text-red\"\r\n                        className=\"bg-white text-black shadow-md hover:text-red\"\r\n                        type=\"button\"\r\n                        onClick={onDeactivate}\r\n                    />\r\n                    <FormButton label=\"Save\" />\r\n                </div>\r\n            </form>\r\n        </SubSection>\r\n    );\r\n};\r\n\r\nexport default MbokOption;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React, { useState } from \"react\";\r\nimport { setPaymentOption } from \"../services/pharmacyBranch\";\r\nimport { notify } from \"../utility\";\r\nimport ATMCardOption from \"./ATMCardOption\";\r\nimport MbokOption from \"./MbokOption\";\r\n\r\nconst PaymentOption = ({ option, data, branchId }) => {\r\n    const defaultStatus =\r\n        data[option === \"mbok\" ? \"account_no\" : \"card_no\"].value !== \"\";\r\n    const [active, setActive] = useState(defaultStatus);\r\n    const formData = useHookstate(JSON.parse(JSON.stringify(data.value)));\r\n\r\n    const handleSave = async (e, isDeactivate = false) => {\r\n        e.preventDefault();\r\n        const { status } = await setPaymentOption(\r\n            branchId,\r\n            option,\r\n            formData.get()\r\n        );\r\n        notify({\r\n            status,\r\n            waitMsg: \"Saving Changes...\",\r\n            successMsg: isDeactivate\r\n                ? `Payment option \"${option}\" has been deactivated successfully!`\r\n                : `Payment option \"${option}\" has been changed successfully!`,\r\n            successCallback() {\r\n                data.set(JSON.parse(JSON.stringify(formData.value)));\r\n                if (isDeactivate) setActive(false);\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleDeactivate = (e) => {\r\n        const deactivate = window.confirm(\r\n            \"Are you sure to deactivate this payment option?\"\r\n        );\r\n        if (deactivate === false) return;\r\n        if (option === \"mbok\") {\r\n            formData.account_no.set(\"\");\r\n            formData.account_owner_name.set(\"\");\r\n            formData.bank_branch_name.set(\"\");\r\n        } else {\r\n            formData.card_no.set(\"\");\r\n            formData.card_onwer_name.set(\"\");\r\n            formData.bank_name.set(\"\");\r\n        }\r\n        handleSave(e, true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {active ? (\r\n                option === \"mbok\" ? (\r\n                    <MbokOption\r\n                        data={formData}\r\n                        onSave={handleSave}\r\n                        onDeactivate={handleDeactivate}\r\n                    />\r\n                ) : (\r\n                    <ATMCardOption\r\n                        data={formData}\r\n                        onSave={handleSave}\r\n                        onDeactivate={handleDeactivate}\r\n                    />\r\n                )\r\n            ) : (\r\n                <h4 className=\"flex items-center bg-gray border-t font-semibold text-sm shadow px-3 py-2\">\r\n                    {option === \"mbok\" ? \"MBOK\" : \"ATM Card\"} -{\" \"}\r\n                    <i>Not Activated Yet</i>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            setActive(true);\r\n                        }}\r\n                        className=\"text-xxs font-semibold ml-auto px-2 py-0.5 shadow-md rounded-sm bg-secondary hover:bg-primary text-white\"\r\n                    >\r\n                        Activate\r\n                    </button>\r\n                </h4>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PaymentOption;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { setDeliveryOption } from \"../services/pharmacyBranch\";\r\nimport { notify } from \"../utility\";\r\nimport FormButton from \"./forms/FormButton\";\r\nimport FormField from \"./forms/FormField\";\r\n\r\nconst DeliveryOption = ({ data: { id, support_delivery, delivery_cost } }) => {\r\n    const formData = useHookstate({\r\n        support_delivery: support_delivery.value,\r\n        delivery_cost: delivery_cost.value,\r\n    });\r\n\r\n    // Reset Delivery Cost to 0 when disable it\r\n    useEffect(() => {\r\n        if (formData.support_delivery.value === false) {\r\n            formData.delivery_cost.set(0);\r\n        }\r\n    }, [formData.support_delivery.value]);\r\n\r\n    const handleSave = async (e) => {\r\n        e.preventDefault();\r\n        const { status } = await setDeliveryOption(id.value, {\r\n            support_delivery: formData.support_delivery.value,\r\n            delivery_cost: formData.delivery_cost.value,\r\n        });\r\n\r\n        notify({\r\n            status,\r\n            waitMsg: \"Changing delivery option...\",\r\n            successMsg: `Delivery option has been ${\r\n                formData.support_delivery.value\r\n                    ? `enabled with cost of ${formData.delivery_cost.value} SDG`\r\n                    : \"disabled\"\r\n            } successfully!`,\r\n            successCallback() {\r\n                support_delivery.set(formData.support_delivery.value);\r\n                delivery_cost.set(formData.delivery_cost.value);\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSave} className=\"grid gap-y-5 text-smd\">\r\n            <FormField\r\n                className=\"flex flex-col\"\r\n                id=\"support_delivery\"\r\n                label=\"Do you offer home delivery?\"\r\n                name=\"support_delivery\"\r\n                type=\"radio\"\r\n                value={formData.support_delivery}\r\n                booleanValue\r\n                options={[\r\n                    {\r\n                        label: \"Yes, Enable Delivery\",\r\n                        value: true,\r\n                    },\r\n                    {\r\n                        label: \"No\",\r\n                        value: false,\r\n                    },\r\n                ]}\r\n            />\r\n            <FormField\r\n                label=\"delivery cost (SDG)\"\r\n                name=\"delivery_cost\"\r\n                id=\"delivery_cost\"\r\n                type=\"number\"\r\n                disabled={!formData.support_delivery.value}\r\n                value={formData.delivery_cost}\r\n            />\r\n\r\n            <div className=\"text-right\">\r\n                <FormButton label=\"Save\" />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default DeliveryOption;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport { setPharmacyInformation } from \"../../services/pharmacyBranch\";\r\nimport { getCityOptions, notify } from \"../../utility\";\r\nimport GoogleMap from \"../GoogleMap\";\r\nimport FormButton from \"./FormButton\";\r\nimport FormField from \"./FormField\";\r\nimport PhoneNumberField from \"./PhoneNumberField\";\r\n\r\nconst PharmacyInformationForm = ({ data }) => {\r\n    const formData = useHookstate(JSON.parse(JSON.stringify(data.value)));\r\n    return (\r\n        <form\r\n            onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                const { status } = await setPharmacyInformation(data.id.value, {\r\n                    name: formData.name.value,\r\n                    branch: formData.branch.value,\r\n                    phone_numbers: formData.phone_numbers.map(\r\n                        (num) => num.value\r\n                    ),\r\n                    website: formData.website.value,\r\n                    state: formData.state.value,\r\n                    city: formData.city.value,\r\n                    address: formData.address.value,\r\n                });\r\n                notify({\r\n                    status,\r\n                    waitMsg: \"Saving Changes...\",\r\n                    successMsg:\r\n                        \"Pharmacy information has been changed successfully!\",\r\n                    successCallback() {\r\n                        data.set(JSON.parse(JSON.stringify(formData.value)));\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <div className=\"grid grid-cols-4 gap-5 text-smd\">\r\n                <FormField\r\n                    className=\"flex flex-col col-span-2\"\r\n                    label=\"pharmacy name\"\r\n                    name=\"pharmacy_name\"\r\n                    id=\"1\"\r\n                    value={formData.name}\r\n                    required\r\n                />\r\n                <FormField\r\n                    className=\"flex flex-col col-span-2\"\r\n                    label=\"branch name\"\r\n                    name=\"branch_name\"\r\n                    id=\"2\"\r\n                    value={formData.branch}\r\n                    required\r\n                />\r\n                <PhoneNumberField\r\n                    className=\"flex flex-col col-span-2\"\r\n                    label=\"phone number 1\"\r\n                    name=\"phone_number_1\"\r\n                    id=\"3\"\r\n                    value={formData.phone_numbers[0]}\r\n                    required\r\n                />\r\n                <PhoneNumberField\r\n                    className=\"flex flex-col col-span-2\"\r\n                    label=\"phone number 2\"\r\n                    name=\"phone_number_2\"\r\n                    id=\"4\"\r\n                    value={formData.phone_numbers[1]}\r\n                />\r\n                <FormField\r\n                    className=\"flex flex-col col-span-2\"\r\n                    label=\"pharmacy email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    id=\"5\"\r\n                    value={formData.email}\r\n                    placeholder=\"email here...\"\r\n                />\r\n                <FormField\r\n                    className=\"flex flex-col col-span-2\"\r\n                    label=\"pharmacy website\"\r\n                    name=\"website\"\r\n                    type=\"url\"\r\n                    id=\"6\"\r\n                    value={formData.website}\r\n                    placeholder=\"pharmacy website link here...\"\r\n                />\r\n                <FormField\r\n                    className=\"flex flex-col\"\r\n                    label=\"state\"\r\n                    name=\"state\"\r\n                    type=\"select\"\r\n                    id=\"9\"\r\n                    value={formData.state}\r\n                    options={[{ label: \"Khartoum\", value: \"khartoum\" }]}\r\n                />\r\n                <FormField\r\n                    className=\"flex flex-col\"\r\n                    label=\"city\"\r\n                    name=\"city\"\r\n                    id=\"10\"\r\n                    type=\"select\"\r\n                    options={getCityOptions()}\r\n                    value={formData.city}\r\n                    placeholder=\"city name here...\"\r\n                />\r\n                <FormField\r\n                    className=\"flex flex-col col-span-2\"\r\n                    label=\"address\"\r\n                    name=\"address\"\r\n                    id=\"11\"\r\n                    value={formData.address}\r\n                    placeholder=\"address line here...\"\r\n                />\r\n                <GoogleMap\r\n                    label=\"Location in the map\"\r\n                    className=\"flex flex-col col-span-4\"\r\n                    coordinates={{ lat: formData.lat, lng: formData.lng }}\r\n                />\r\n            </div>\r\n            <div className=\"text-right mt-5\">\r\n                <FormButton label=\"Save Changes\" />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PharmacyInformationForm;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport store from \"../../state\";\r\nimport Note from \"../common/Note\";\r\nimport Section from \"../common/Section\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport PaymentOption from \"../PaymentOption\";\r\nimport DeliveryOption from \"../DeliveryOption\";\r\nimport PharmacyInformationForm from \"../forms/PharmacyInformationForm\";\r\nimport FormField from \"../forms/FormField\";\r\nimport FormButton from \"../forms/FormButton\";\r\nimport { setVATOption } from \"../../services/pharmacyBranch\";\r\nimport { notify } from \"../../utility\";\r\n\r\nconst PharmacySettings = () => {\r\n    const { pharmacyBranch } = useState(store);\r\n    const vatAmount = useState(pharmacyBranch.vat.value);\r\n    return (\r\n        <>\r\n            <SectionHeader name=\"Pharmacy Settings\" faClass=\"fas fa-cogs\" />\r\n            <div className=\"grid grid-cols-3 gap-5 items-start animate__animated animate__fadeIn\">\r\n                <Section\r\n                    label=\"Pharmacy Information\"\r\n                    className=\"col-span-2\"\r\n                    contentClassName=\"p-5 gray-inputs\"\r\n                >\r\n                    <PharmacyInformationForm data={pharmacyBranch} />\r\n                </Section>\r\n\r\n                <aside>\r\n                    <Section\r\n                        label=\"Online Order Option\"\r\n                        contentClassName=\"overflow-hidden\"\r\n                    >\r\n                        <Note className=\"text-smd m-5\">\r\n                            <strong>Note:</strong> To enable online ordering for\r\n                            your pharmacy products, you must activate at least\r\n                            one of the payment methods below.\r\n                        </Note>\r\n                        <PaymentOption\r\n                            branchId={pharmacyBranch.id.value}\r\n                            option=\"mbok\"\r\n                            data={pharmacyBranch.payment_options.mbok}\r\n                        />\r\n                        <PaymentOption\r\n                            branchId={pharmacyBranch.id.value}\r\n                            option=\"atm_card\"\r\n                            data={pharmacyBranch.payment_options.atm_card}\r\n                        />\r\n                    </Section>\r\n\r\n                    <Section label=\"VAT Option\" className=\"mt-5 gray-inputs\">\r\n                        <Note className=\"text-smd mb-5\">\r\n                            <strong>Note:</strong> This VAT will be added to the\r\n                            total price of online and local orders.\r\n                        </Note>\r\n                        <form\r\n                            onSubmit={async (e) => {\r\n                                e.preventDefault();\r\n                                const { status } = await setVATOption();\r\n                                notify({\r\n                                    status,\r\n                                    waitMsg: \"Setting new VAT amount...\",\r\n                                    successMsg:\r\n                                        \"VAT amount has been changes successfully!\",\r\n                                    successCallback() {\r\n                                        pharmacyBranch.vat.set(\r\n                                            +vatAmount.value\r\n                                        );\r\n                                    },\r\n                                });\r\n                            }}\r\n                            className=\"text-smd\"\r\n                        >\r\n                            <FormField\r\n                                label=\"VAT amount (SDG)\"\r\n                                name=\"vat\"\r\n                                id=\"pharmacy_vat\"\r\n                                value={vatAmount}\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                            />\r\n                            <div className=\"mt-5 text-right\">\r\n                                <FormButton label=\"save\" />\r\n                            </div>\r\n                        </form>\r\n                    </Section>\r\n\r\n                    <Section\r\n                        label=\"Delivery Option\"\r\n                        className=\"mt-5 gray-inputs\"\r\n                    >\r\n                        <Note className=\"text-smd mb-5\">\r\n                            <strong>Note:</strong> If home delivery is enabled,\r\n                            users of the search platform will be able to order\r\n                            medicines with the option of home delivery. Your\r\n                            delivery service should be statewide and at a fixed\r\n                            price for all orders.\r\n                        </Note>\r\n                        <DeliveryOption data={pharmacyBranch} />\r\n                    </Section>\r\n                </aside>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PharmacySettings;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport { changePassword } from \"../../services/auth\";\r\nimport store from \"../../state\";\r\nimport { notify } from \"../../utility\";\r\nimport Form from \"./Form\";\r\nimport FormField from \"./FormField\";\r\nimport PasswordField from \"./PasswordField\";\r\n\r\nconst defaultState = {\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    oldPassword: \"\",\r\n};\r\n\r\nconst PasswordChangeForm = () => {\r\n    const { loggedUser } = useHookstate(store);\r\n    const formData = useHookstate({ ...defaultState });\r\n\r\n    return (\r\n        <Form\r\n            className=\"grid gap-y-5\"\r\n            onSubmit={async () => {\r\n                const { status } = await changePassword(\r\n                    loggedUser.id.value,\r\n                    formData.value\r\n                );\r\n                notify({\r\n                    status,\r\n                    waitMsg: \"Changing Password...\",\r\n                    successMsg: \"Your password has been changed successfully!\",\r\n                    successCallback() {\r\n                        formData.set({\r\n                            ...defaultState,\r\n                        });\r\n                    },\r\n                });\r\n            }}\r\n            formButtons={[\r\n                {\r\n                    label: \"Change Password\",\r\n                    faClass: \"fas fa-exchange-alt\",\r\n                },\r\n            ]}\r\n        >\r\n            <PasswordField\r\n                className=\"flex flex-col\"\r\n                value={formData.newPassword}\r\n                placeholder=\"Your new password here...\"\r\n            />\r\n\r\n            <PasswordField\r\n                className=\"flex flex-col\"\r\n                label=\"confirm password\"\r\n                name=\"confirm_password\"\r\n                id=\"confirm_password\"\r\n                value={formData.confirmPassword}\r\n                confirmation={formData.newPassword.value}\r\n                placeholder=\"Confirm your new password here...\"\r\n            />\r\n\r\n            <PasswordField\r\n                className=\"flex flex-col\"\r\n                label=\"old password\"\r\n                name=\"old_password\"\r\n                id=\"old_password\"\r\n                value={formData.oldPassword}\r\n                placeholder=\"Your old password here...\"\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default PasswordChangeForm;\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport FormField from \"./FormField\";\r\nimport { updateUser } from \"../../services/users\";\r\nimport { getCityOptions, notify } from \"../../utility\";\r\nimport { useState, DevTools } from \"@hookstate/core\";\r\nimport PhoneNumberField from \"./PhoneNumberField\";\r\n\r\nconst PersonalInformationForm = ({ data: state }) => {\r\n    const formState = useState(JSON.parse(JSON.stringify(state.value)));\r\n    DevTools(formState).label(\"Personal Information Form State\");\r\n\r\n    return (\r\n        <Form\r\n            className=\"grid gap-5 grid-cols-6\"\r\n            onSubmit={async () => {\r\n                const { status } = await updateUser(state.get());\r\n                notify({\r\n                    status,\r\n                    waitMsg: \"Updating Account Information...\",\r\n                    successMsg:\r\n                        \"Your personal information has been updated successfully!\",\r\n                    successCallback() {\r\n                        state.set(JSON.parse(JSON.stringify(formState.value)));\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"first name\"\r\n                name=\"first_name\"\r\n                id=\"1\"\r\n                value={formState.first_name}\r\n                placeholder=\"First name here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"last name\"\r\n                name=\"last_name\"\r\n                id=\"2\"\r\n                value={formState.last_name}\r\n                placeholder=\"Last name here...\"\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"username\"\r\n                name=\"username\"\r\n                id=\"3\"\r\n                value={formState.username}\r\n                placeholder=\"username here...\"\r\n                disabled\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"4\"\r\n                value={formState.email}\r\n                placeholder=\"email here...\"\r\n                required\r\n            />\r\n\r\n            <PhoneNumberField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"7\"\r\n                value={formState.phone_number}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                id=\"6\"\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                type=\"radio\"\r\n                value={formState.gender}\r\n                options={[\r\n                    {\r\n                        label: \"Male\",\r\n                        value: \"m\",\r\n                    },\r\n                    {\r\n                        label: \"Female\",\r\n                        value: \"f\",\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"state\"\r\n                name=\"state\"\r\n                type=\"select\"\r\n                id=\"9\"\r\n                value={formState.state}\r\n                options={[{ label: \"Khartoum\", value: \"khartoum\" }]}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"city\"\r\n                name=\"city\"\r\n                id=\"10\"\r\n                value={formState.city}\r\n                type=\"select\"\r\n                options={getCityOptions()}\r\n                placeholder=\"city name here...\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-2\"\r\n                label=\"address\"\r\n                name=\"address\"\r\n                id=\"11\"\r\n                value={formState.address}\r\n                placeholder=\"address line here...\"\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default PersonalInformationForm;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport store from \"../../state\";\r\nimport Section from \"../common/Section\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport PasswordChangeForm from \"../forms/PasswordChangeForm\";\r\nimport PersonalInformationForm from \"../forms/PersonalInformationForm\";\r\n\r\nconst AccountSettings = () => {\r\n    const { loggedUser } = useHookstate(store);\r\n    return (\r\n        <>\r\n            <SectionHeader name=\"Account Settings\" faClass=\"fas fa-user-cog\" />\r\n            <div className=\"grid grid-cols-3 gap-5 items-start animate__animated animate__fadeIn\">\r\n                <Section\r\n                    label=\"Personal Information\"\r\n                    className=\"col-span-2\"\r\n                    contentClassName=\"p-5 gray-inputs text-smd\"\r\n                >\r\n                    <PersonalInformationForm data={loggedUser} />\r\n                </Section>\r\n\r\n                <aside>\r\n                    <Section\r\n                        label=\"Change your password\"\r\n                        contentClassName=\"p-5 gray-inputs text-smd\"\r\n                    >\r\n                        <PasswordChangeForm />\r\n                    </Section>\r\n                </aside>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountSettings;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React, { useState } from \"react\";\r\nimport store from \"../../state\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst ProductsSearch = ({\r\n    label = \"Products Search\",\r\n    placeholder = \"\",\r\n    className = \"\",\r\n    products,\r\n    value,\r\n}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const inventoryData = useHookstate(store.tables.inventory.data);\r\n    const [resultSet, setResultSet] = useState([]);\r\n\r\n    return (\r\n        <div className={`inline-block font-medium relative mr-5 ${className}`}>\r\n            <label htmlFor={label} className=\"mr-2\">\r\n                {label}\r\n            </label>\r\n            <input\r\n                id={label}\r\n                className=\"inline-block py-1.5 px-2 w-72 border border-gray-300 rounded-sm shadow focus:outline-none\"\r\n                type=\"search\"\r\n                placeholder={placeholder}\r\n                type=\"search\"\r\n                autoComplete=\"off\"\r\n                value={value.get()}\r\n                onInput={() => {\r\n                    setLoading(true);\r\n                }}\r\n                onChange={({ target }) => {\r\n                    value.set(target.value);\r\n                    setResultSet(\r\n                        inventoryData.filter((item) => {\r\n                            return (\r\n                                item.name\r\n                                    .get()\r\n                                    .search(\r\n                                        new RegExp(`${target.value}`, \"i\")\r\n                                    ) !== -1\r\n                            );\r\n                        })\r\n                    );\r\n                    setLoading(false);\r\n                }}\r\n            />\r\n            <i className=\"fas fa-search absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-300\"></i>\r\n            {value.get() !== \"\" && (\r\n                <div className=\"bg-white absolute z-30 right-0 w-72 max-h-64 overflow-y-auto rounded-sm border shadow mt-2\">\r\n                    {loading ? (\r\n                        <Loading\r\n                            label=\"Searching\"\r\n                            className=\"flex text-gray-500\"\r\n                        />\r\n                    ) : resultSet.length ? (\r\n                        <ul>\r\n                            {resultSet.map((result) => (\r\n                                <ResultItem\r\n                                    result={result}\r\n                                    onSelect={() => {\r\n                                        products.set((oldList) => {\r\n                                            let alreadyExist = false;\r\n                                            oldList.forEach((item) => {\r\n                                                if (\r\n                                                    +item.id ===\r\n                                                    +result.id.get()\r\n                                                ) {\r\n                                                    if (item.stock > item.qty)\r\n                                                        item.qty++;\r\n                                                    alreadyExist = true;\r\n                                                }\r\n                                            });\r\n                                            return alreadyExist\r\n                                                ? oldList\r\n                                                : [\r\n                                                      {\r\n                                                          ...result.get(),\r\n                                                          qty: 1,\r\n                                                      },\r\n                                                      ...oldList,\r\n                                                  ];\r\n                                        });\r\n                                        value.set(\"\");\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <span className=\"p-4 block text-center\">\r\n                            No Result Found\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ResultItem = ({ result, onSelect }) => {\r\n    const isInStock = +result.stock.get() > 0;\r\n    return (\r\n        <li className=\"border-b last:border-b-0\">\r\n            <button\r\n                onClick={isInStock && onSelect}\r\n                className={`px-3 py-2 text-left w-full ${\r\n                    isInStock\r\n                        ? \"hover:bg-gray-100\"\r\n                        : \"text-gray-500 italic bg-gray-100 cursor-not-allowed\"\r\n                }`}\r\n            >\r\n                <span>{result.name.get()}</span>\r\n                <p className=\"text-gray-500 block text-left leading-5\">\r\n                    <span>{result.unit.get()}</span>\r\n                    <span\r\n                        className={`float-right font-medium text-xxs ${\r\n                            isInStock ? \"text-green\" : \"text-red\"\r\n                        }`}\r\n                    >\r\n                        {isInStock ? \"In Stock\" : \"Out of Stock\"}\r\n                    </span>\r\n                </p>\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ProductsSearch;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport FormField from \"./FormField\";\r\nimport PopupForm from \"./PopupForm\";\r\n\r\nconst DiscountPopupForm = ({ display, totalAmount, discount }) => {\r\n    const { amount, unit } = useHookstate({\r\n        amount: discount.amount.get(),\r\n        unit: discount.unit.get(),\r\n    });\r\n    return (\r\n        <PopupForm\r\n            title=\"Make a Discount\"\r\n            faClass=\"fas fa-percent\"\r\n            style={{ minWidth: \"30%\", width: 300 }}\r\n            state={display}\r\n            formButtons={[\r\n                {\r\n                    label: \"Apply Discount\",\r\n                    faClass: \"\",\r\n                },\r\n            ]}\r\n            className=\"grid gap-x-5 gap-y-6 grid-cols-4 text-sm\"\r\n            onSubmit={() => {\r\n                discount.set({\r\n                    amount: amount.get(),\r\n                    unit: unit.get(),\r\n                });\r\n                display.set(false);\r\n            }}\r\n        >\r\n            <FormField\r\n                className=\"col-span-2\"\r\n                label=\"discount amount\"\r\n                name=\"discount_amount\"\r\n                id=\"discount_amount\"\r\n                type=\"number\"\r\n                value={amount}\r\n                max={unit.get() === \"%\" ? 100 : totalAmount}\r\n                min=\"0\"\r\n            />\r\n\r\n            <FormField\r\n                className=\"col-span-2\"\r\n                label=\"unit\"\r\n                name=\"discount_unit\"\r\n                id=\"discount_unit\"\r\n                type=\"select\"\r\n                value={unit}\r\n                options={[\r\n                    { label: \"SDG\", value: \"SDG\" },\r\n                    { label: \"%\", value: \"%\" },\r\n                ]}\r\n            />\r\n        </PopupForm>\r\n    );\r\n};\r\n\r\nexport default DiscountPopupForm;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React from \"react\";\r\nimport { getOrders, setOrder } from \"../services/orders\";\r\nimport store from \"../state\";\r\nimport { notify } from \"../utility\";\r\nimport Popup from \"./common/Popup\";\r\nimport DiscountPopupForm from \"./forms/DiscountPopupForm\";\r\nimport FormButton from \"./forms/FormButton\";\r\nimport OrderDetials from \"./OrderDetails\";\r\n\r\nconst OrderSummary = ({ products, discount, vat }) => {\r\n    const orderDetails = useHookstate({\r\n        display: false,\r\n        data: {},\r\n    });\r\n    const displayDiscountForm = useHookstate(false);\r\n    const { loggedUser } = useHookstate(store);\r\n\r\n    let totalItems = 0,\r\n        basketTotal = 0;\r\n\r\n    products.forEach((item) => {\r\n        totalItems += +item.qty.get();\r\n        basketTotal += item.qty.get() * item.price.get();\r\n    });\r\n\r\n    // if products products become empty reset discount to zero\r\n    if (products.length === 0 && discount.amount.get() !== 0)\r\n        discount.amount.set(0);\r\n\r\n    let discountPercentage = 0;\r\n    let total = 0;\r\n    let actualDiscountAmount = 0;\r\n\r\n    if (discount.unit.get() === \"%\") {\r\n        discountPercentage = +discount.amount.get();\r\n        actualDiscountAmount = (basketTotal * discount.amount.get()) / 100;\r\n        total = basketTotal - actualDiscountAmount + vat.get();\r\n    } else {\r\n        discountPercentage = (discount.amount.get() / basketTotal) * 100 || 0;\r\n        actualDiscountAmount = +discount.amount.get();\r\n        total = basketTotal - actualDiscountAmount + vat.get();\r\n    }\r\n\r\n    // if discount become bigger than basket total than reduce it to basket total\r\n    if (actualDiscountAmount > basketTotal) discount.amount.set(basketTotal);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"font-semibold mb-5 inline-block pb-2 border-b-2 border-dashed border-gray-300\">\r\n                <i className=\"fas fa-file-invoice-dollar mr-2 text-primary\"></i>\r\n                <span>Order Summary</span>\r\n            </h3>\r\n            <div className=\"bg-white rounded shadow-md p-4 text-smd\">\r\n                <p className=\"flex justify-between pb-2\">\r\n                    <span>Basket Total ({totalItems})</span>\r\n                    <span>{basketTotal} SDG</span>\r\n                </p>\r\n                <p className=\"flex justify-between pb-2\">\r\n                    <span>\r\n                        Discount ({discountPercentage.toFixed(1)}%)\r\n                        <button\r\n                            title=\"Add discount to order\"\r\n                            className=\"text-smd ml-1 fas fa-plus-circle shadow rounded-full text-secondary hover:text-primary\"\r\n                            onClick={() => {\r\n                                displayDiscountForm.set(true);\r\n                            }}\r\n                        ></button>\r\n                    </span>\r\n                    <span>- {actualDiscountAmount} SDG</span>\r\n                </p>\r\n                <p className=\"flex text-gray-400 justify-between pb-3\">\r\n                    <span>VAT</span>\r\n                    <span>+ {vat.get()} SDG</span>\r\n                </p>\r\n                <p className=\"flex justify-between font-semibold text-sm pt-3 border-t-2 border-dashed border-gray-300\">\r\n                    <span>Total</span>\r\n                    <span className=\"text-primary\">{total} SDG</span>\r\n                </p>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 gap-y-4 mt-6\">\r\n                {products.length !== 0 && (\r\n                    <>\r\n                        <FormButton\r\n                            className=\"w-full bg-primary shadow-md text-white hover:bg-secondary\"\r\n                            label=\"Confirm the Order\"\r\n                            faClass=\"fas fa-receipt\"\r\n                            onClick={async () => {\r\n                                const { data, status } = await setOrder({\r\n                                    type: \"local\",\r\n                                    status: \"finished\",\r\n                                    handled_by: {\r\n                                        id: loggedUser.id.get(),\r\n                                        name: `${loggedUser.first_name.get()} ${loggedUser.last_name.get()}`,\r\n                                    },\r\n                                    date: new Date().toJSON(),\r\n                                    products: products.map(\r\n                                        ({ id, price, qty, name }) => ({\r\n                                            id: id.get(),\r\n                                            name: name.get(),\r\n                                            price: price.get(),\r\n                                            qty: qty.get(),\r\n                                        })\r\n                                    ),\r\n                                    products_amount: basketTotal,\r\n                                    discount: actualDiscountAmount,\r\n                                    vat: vat.get(),\r\n                                });\r\n\r\n                                notify({\r\n                                    status,\r\n                                    waitMsg: \"Making the order...\",\r\n                                    successMsg:\r\n                                        \"Order has been created successfully!\",\r\n                                    successCallback() {\r\n                                        orderDetails.data.set(data);\r\n                                        orderDetails.display.set(true);\r\n\r\n                                        // Update orders data list\r\n                                        (async () => {\r\n                                            const { data: ordersData } =\r\n                                                await getOrders();\r\n                                            store.tables.orders.data.set(\r\n                                                ordersData\r\n                                            );\r\n                                        })();\r\n                                    },\r\n                                });\r\n                            }}\r\n                        />\r\n\r\n                        <FormButton\r\n                            className=\"w-full bg-white shadow-md hover:text-red\"\r\n                            label=\"Cancel the Order\"\r\n                            faClass=\"fas fa-times text-red\"\r\n                            onClick={() => {\r\n                                products.set([]);\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            <Popup\r\n                state={orderDetails.display}\r\n                faClass=\"fas fa-file-invoice\"\r\n                title={`Order Invoice`}\r\n                onClose={() => {\r\n                    products.set([]);\r\n                }}\r\n            >\r\n                <OrderDetials data={orderDetails.data.get()} />\r\n            </Popup>\r\n\r\n            <DiscountPopupForm\r\n                display={displayDiscountForm}\r\n                totalAmount={basketTotal}\r\n                discount={discount}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport store from \"../../state\";\r\nimport DataTable from \"../common/DataTable\";\r\nimport DeleteBtn from \"../common/DeleteBtn\";\r\nimport Note from \"../common/Note\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport FormField from \"../forms/FormField\";\r\nimport ProductsSearch from \"../forms/ProductsSearch\";\r\nimport OrderSummary from \"../OrderSummary\";\r\nimport ProductCell from \"../table/ProductCell\";\r\n\r\nconst PointOfSale = () => {\r\n    const searchValue = useHookstate(\"\");\r\n    const { discount, products } = useHookstate(store.pos);\r\n    const inventoryItems = useHookstate(store.tables.inventory.data);\r\n    const { vat } = useHookstate(store.pharmacyBranch);\r\n\r\n    useEffect(() => {\r\n        let scanneredBarcode = \"\";\r\n        window.onkeypress = ({ keyCode, key }) => {\r\n            if (keyCode === 13) {\r\n                const product = inventoryItems.find(\r\n                    ({ barcode }) => barcode.get() === scanneredBarcode\r\n                );\r\n                if (product) {\r\n                    products.set((oldList) => {\r\n                        let alreadyExist = false;\r\n                        oldList.forEach((item) => {\r\n                            if (+item.id === +product.id.value) {\r\n                                if (item.stock > item.qty) item.qty++;\r\n                                alreadyExist = true;\r\n                            }\r\n                        });\r\n                        return alreadyExist\r\n                            ? oldList\r\n                            : [{ ...product.get(), qty: 1 }, ...oldList];\r\n                    });\r\n                }\r\n                scanneredBarcode = \"\";\r\n            } else {\r\n                scanneredBarcode += key;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <SectionHeader\r\n                name=\"Point of Sale\"\r\n                faClass=\"fas fa-cash-register\"\r\n            />\r\n            <div className=\"grid grid-cols-4 gap-5\">\r\n                <div className=\"col-span-3\">\r\n                    <div className=\"flex justify-between items-center text-xs\">\r\n                        <ProductsSearch\r\n                            className=\"flex-shrink-0\"\r\n                            label=\"Products Search\"\r\n                            placeholder=\"Search Product By Name Here...\"\r\n                            products={products}\r\n                            value={searchValue}\r\n                        />\r\n                        <Note>\r\n                            <strong>Note:</strong> You can use{\" \"}\r\n                            <i className=\"fas fa-barcode\"></i> barcode reader to\r\n                            add the product to basket below.\r\n                        </Note>\r\n                    </div>\r\n                    <div className=\"mt-5\">\r\n                        <DataTable data={products} columns={columns} />\r\n                    </div>\r\n                </div>\r\n\r\n                <section className=\"col-span-1\">\r\n                    <OrderSummary\r\n                        products={products}\r\n                        discount={discount}\r\n                        vat={vat}\r\n                    />\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Order's Products List\",\r\n        sortProp: \"id\",\r\n        wrapper: ({ name, photo, unit, id, edited, handleEdit }) => (\r\n            <ProductCell\r\n                name={name.value}\r\n                photo={photo.value}\r\n                unit={unit.value}\r\n                id={id}\r\n            />\r\n        ),\r\n    },\r\n    { title: \"price\", prop: \"price\" },\r\n    { title: \"stock\", prop: \"stock\" },\r\n    { title: \"reserved\", prop: \"reserved\" },\r\n    { title: \"expire date\", prop: \"expire_date\" },\r\n    {\r\n        title: \"QTY\",\r\n        width: 80,\r\n        wrapper: ({ id, qty, reserved, stock }) => {\r\n            console.log(\"-id: \", id.get());\r\n            return (\r\n                <FormField\r\n                    id={id.get()}\r\n                    name={`qty_${id.get()}`}\r\n                    type=\"number\"\r\n                    value={qty}\r\n                    max={stock.get()}\r\n                    min=\"1\"\r\n                />\r\n            );\r\n        },\r\n    },\r\n    {\r\n        title: \"Subtotal\",\r\n        wrapper: ({ price, qty }) => {\r\n            return <strong>{price.get() * qty.get()} SDG</strong>;\r\n        },\r\n    },\r\n    {\r\n        title: \"\",\r\n        wrapper: ({ id }) => (\r\n            <DeleteBtn\r\n                onDelete={() =>\r\n                    store.pos.products.set((p) => {\r\n                        return p.filter((item) => item.id !== id.value);\r\n                    })\r\n                }\r\n            />\r\n        ),\r\n    },\r\n];\r\n\r\nexport default PointOfSale;\r\n","const pharmacyFormState = {\r\n    data: {\r\n        id: \"\",\r\n        name: \"\",\r\n        branch: \"\",\r\n        phone_numbers: [\"\", \"\"],\r\n        email: \"\",\r\n        website: \"\",\r\n        state: \"khartoum\",\r\n        city: \"\",\r\n        address: \"\",\r\n        lat: 15.4838,\r\n        lng: 32.5339,\r\n    },\r\n    errors: {},\r\n};\r\n\r\nexport default pharmacyFormState;\r\n","import { DevTools, useState } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport pharmacyFormState from \"../../states/pharmacyFormState\";\r\nimport FormField from \"./FormField\";\r\nimport PopupForm from \"./PopupForm\";\r\nimport {\r\n    getPharmaciesByOwner,\r\n    getPharmacyBasicInfo,\r\n    setPharmacy,\r\n    updatePharmacyBranch,\r\n} from \"../../services/pharmacies\";\r\nimport { getCityOptions, notify } from \"../../utility\";\r\nimport store from \"../../state\";\r\nimport { setPharmacyBranch } from \"../../services/pharmacies\";\r\nimport Note from \"../common/Note\";\r\nimport PhoneNumberField from \"./PhoneNumberField\";\r\nimport GoogleMap from \"../GoogleMap\";\r\n\r\nconst PharmacyPopupForm = ({ showState, formState }) => {\r\n    let state = useState({\r\n        data: { ...pharmacyFormState.data },\r\n        errors: { ...pharmacyFormState.errors },\r\n    });\r\n    const { pharmacyBranches: pharmaciesData, loggedUser } = useState(store);\r\n    let { data, errors } = state;\r\n    DevTools(state).label(\"Pharmacy Popup Form\");\r\n    const isPending = formState && formState.status === \"pending\";\r\n    const isFirstPharmacy = useState(false);\r\n\r\n    useEffect(() => {\r\n        data.set(\r\n            formState\r\n                ? JSON.parse(JSON.stringify(formState))\r\n                : {\r\n                      ...pharmacyFormState.data,\r\n                      pharmacy_id: data.pharmacy_id.get(),\r\n                      name: data.name.get(),\r\n                      website: data.website.get(),\r\n                      email: data.email.get(),\r\n                      phone_numbers: [\"\", \"\"],\r\n                  }\r\n        );\r\n    }, [formState]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (isFirstPharmacy.value === true) return;\r\n            try {\r\n                const { data: pharmacyBasicInfo } = await getPharmacyBasicInfo(\r\n                    store.loggedUser.id.get()\r\n                );\r\n                state.data.merge(pharmacyBasicInfo);\r\n            } catch (ex) {\r\n                isFirstPharmacy.set(true);\r\n            }\r\n        })();\r\n    }, [isFirstPharmacy.value]);\r\n\r\n    return (\r\n        <PopupForm\r\n            title=\"Add New Pharmacy Branch\"\r\n            state={showState}\r\n            className=\"grid grid-cols-12 gap-x-5 gap-y-6 text-sm gray-inputs\"\r\n            formButtons={\r\n                formState && formState.status === \"pending\"\r\n                    ? []\r\n                    : [\r\n                          {\r\n                              label: formState\r\n                                  ? \"Resubmit Pharmacy Branch Info\"\r\n                                  : \"Add Pharmacy Branch\",\r\n                              faClass: formState\r\n                                  ? \"fas fa-redo\"\r\n                                  : \"fas fa-plus\",\r\n                          },\r\n                      ]\r\n            }\r\n            onSubmit={async () => {\r\n                const isUpdate = formState && formState.status === \"rejected\";\r\n\r\n                const { status } = await (isUpdate\r\n                    ? updatePharmacyBranch(data.get())\r\n                    : isFirstPharmacy.value\r\n                    ? setPharmacy(data.get(), {\r\n                          id: loggedUser.id.get(),\r\n                          name: `${loggedUser.first_name.get()} ${loggedUser.last_name.get()}`,\r\n                      })\r\n                    : setPharmacyBranch(data.get()));\r\n\r\n                notify({\r\n                    status,\r\n                    successMsg: isUpdate\r\n                        ? \"Pharmacy Branch Info has been Resubmited successfully!\"\r\n                        : \"New Pharmacy Branch has been added successfully!\",\r\n                    successCallback: async () => {\r\n                        // Clear the form data\r\n                        data.set({\r\n                            ...pharmacyFormState.data,\r\n                            pharmacy_id: data.pharmacy_id.get(),\r\n                            name: data.name.get(),\r\n                            website: data.website.get(),\r\n                            email: data.email.get(),\r\n                            phone_numbers: [\"\", \"\"],\r\n                        });\r\n\r\n                        if (isFirstPharmacy.value === true) {\r\n                            isFirstPharmacy.set(false);\r\n                        }\r\n\r\n                        // Update employees data list\r\n                        const { data: newPharmacyBranchData } =\r\n                            await getPharmaciesByOwner(\r\n                                store.loggedUser.id.get()\r\n                            );\r\n                        pharmaciesData.set(newPharmacyBranchData);\r\n\r\n                        // Close the popup form\r\n                        showState.set(false);\r\n                    },\r\n                });\r\n            }}\r\n        >\r\n            {formState && (\r\n                <Note className=\"col-span-full\">\r\n                    {formState.status === \"rejected\" ? (\r\n                        <>\r\n                            <strong>Note:</strong> Your pharmacy branch has been\r\n                            rejected due to incorrect information about your\r\n                            branch, please review the information you entered\r\n                            and edit them to be correct and then resubmit the\r\n                            information again to be reviewd by our team.\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <strong>Note:</strong> Our team will review your\r\n                            pharmacy branch information as soon as possible to\r\n                            verify from the information you entered and then\r\n                            activate it!\r\n                        </>\r\n                    )}\r\n                </Note>\r\n            )}\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-4\"\r\n                label=\"pharmacy name\"\r\n                name=\"name\"\r\n                id=\"1\"\r\n                value={data.name}\r\n                placeholder=\"pharmacy name here...\"\r\n                disabled={isFirstPharmacy.value === false}\r\n                required\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-4\"\r\n                label=\"branch name\"\r\n                name=\"branch\"\r\n                id=\"2\"\r\n                value={data.branch}\r\n                placeholder=\"branch name here...\"\r\n                required={isFirstPharmacy.value === false}\r\n                disabled={isPending}\r\n            />\r\n\r\n            <PhoneNumberField\r\n                className=\"flex flex-col col-span-4\"\r\n                label=\"phone number 1\"\r\n                name=\"phone_number_1\"\r\n                id=\"3\"\r\n                value={data.phone_numbers[0]}\r\n                disabled={isPending}\r\n                required\r\n            />\r\n\r\n            <PhoneNumberField\r\n                className=\"flex flex-col col-span-4\"\r\n                label=\"phone number 2\"\r\n                name=\"phone_number_2\"\r\n                id=\"4\"\r\n                value={data.phone_numbers[1]}\r\n                disabled={isPending}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-4\"\r\n                label=\"email\"\r\n                name=\"email\"\r\n                id=\"5\"\r\n                type=\"email\"\r\n                value={data.email}\r\n                placeholder=\"pharmacy email here...\"\r\n                disabled={isPending}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-4\"\r\n                label=\"website\"\r\n                name=\"website\"\r\n                id=\"6\"\r\n                type=\"url\"\r\n                value={data.website}\r\n                placeholder=\"pharmacy website here...\"\r\n                disabled={isPending}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"state\"\r\n                name=\"state\"\r\n                type=\"select\"\r\n                id=\"7\"\r\n                value={data.state}\r\n                options={[{ label: \"Khartoum\", value: \"khartoum\" }]}\r\n                required\r\n                disabled={isPending}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-3\"\r\n                label=\"city\"\r\n                name=\"city\"\r\n                id=\"8\"\r\n                type=\"select\"\r\n                options={getCityOptions()}\r\n                value={data.city}\r\n                placeholder=\"city name here...\"\r\n                required\r\n                disabled={isPending}\r\n            />\r\n\r\n            <FormField\r\n                className=\"flex flex-col col-span-6\"\r\n                label=\"address\"\r\n                name=\"address\"\r\n                id=\"8\"\r\n                value={data.address}\r\n                placeholder=\"address line here...\"\r\n                required\r\n                disabled={isPending}\r\n            />\r\n\r\n            <GoogleMap\r\n                className=\"flex flex-col col-span-12\"\r\n                coordinates={{ lat: data.lat, lng: data.lng }}\r\n                immutable={formState && formState.status === \"pending\"}\r\n                initZoom={\r\n                    formState && formState.status === \"pending\" ? undefined : 9\r\n                }\r\n            />\r\n        </PopupForm>\r\n    );\r\n};\r\n\r\nexport default PharmacyPopupForm;\r\n","import { useState } from \"@hookstate/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { getPharmaciesByOwner } from \"../../services/pharmacies\";\r\nimport store from \"../../state\";\r\nimport SectionHeader from \"../common/SectionHeader\";\r\nimport PharmacyPopupForm from \"../forms/PharmacyPopupForm\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst MyPharmacies = ({ history }) => {\r\n    const pharmacyBranches = useState(store.pharmacyBranches);\r\n    const pharmacyBranch = useState(store.pharmacyBranch);\r\n    const loading = useState(true);\r\n    const displayPopupForm = useState(false);\r\n    const pharmacyBranchFormState = useState(undefined);\r\n\r\n    // Reset selected pharmacy branch to nothing\r\n    pharmacyBranch.id.ornull && pharmacyBranch.set({});\r\n\r\n    const handlePharmacySelection = (selectedPharmacyBranch) => {\r\n        switch (selectedPharmacyBranch.status) {\r\n            case \"active\":\r\n                pharmacyBranch.set(\r\n                    JSON.parse(JSON.stringify(selectedPharmacyBranch))\r\n                );\r\n                history.push(\"/\");\r\n                break;\r\n\r\n            case \"rejected\":\r\n            case \"pending\":\r\n                pharmacyBranchFormState.set(\r\n                    JSON.parse(JSON.stringify(selectedPharmacyBranch))\r\n                );\r\n                displayPopupForm.set(true);\r\n                break;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { data: pharmaciesData } = await getPharmaciesByOwner(\r\n                store.loggedUser.id.get()\r\n            );\r\n            pharmacyBranches.set(pharmaciesData);\r\n            loading.set(false);\r\n        })();\r\n    }, []);\r\n\r\n    return loading.value ? (\r\n        <Loading />\r\n    ) : (\r\n        <>\r\n            <SectionHeader\r\n                name=\"Your Pharmacies\"\r\n                faClass=\"fas fa-clinic-medical\"\r\n            />\r\n            <div className=\"grid grid-cols-4 gap-8\">\r\n                {pharmacyBranches.map((pharmacyBranch, i) => (\r\n                    <PharmacyCard\r\n                        key={pharmacyBranch.id.get()}\r\n                        data={pharmacyBranch.get()}\r\n                        onClick={() =>\r\n                            handlePharmacySelection(pharmacyBranch.get())\r\n                        }\r\n                    />\r\n                ))}\r\n                <AddPharmacyBranchCard\r\n                    onClick={() => {\r\n                        pharmacyBranchFormState.set(undefined);\r\n                        displayPopupForm.set(true);\r\n                    }}\r\n                />\r\n            </div>\r\n            <PharmacyPopupForm\r\n                showState={displayPopupForm}\r\n                formState={pharmacyBranchFormState.get()}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst AddPharmacyBranchCard = ({ onClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            title=\"Add New Pharmacy Branch\"\r\n            className=\"group shadow-inner flex flex-col group py-12 hover:border-gray-400 border-2 border-dashed items-center rounded border-gray-300\"\r\n        >\r\n            <i className=\"group-hover:text-shadow fas fa-plus text-6xl mb-8 group-hover:text-primary text-gray-300\"></i>\r\n            <strong className=\"font-semibold text-gray-500 group-hover:text-black\">\r\n                Add New Pharmacy Branch\r\n            </strong>\r\n        </button>\r\n    );\r\n};\r\n\r\nconst PharmacyCard = ({ data: { status, name, branch }, onClick }) => {\r\n    const statusColor =\r\n        status === \"pending\"\r\n            ? \"gray-400\"\r\n            : status === \"rejected\"\r\n            ? \"red\"\r\n            : \"primary\";\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`animate__animated animate__flipInY flex flex-col py-12 hover:bg-${statusColor} justify-center group items-center relative bg-white shadow-md rounded`}\r\n        >\r\n            <span\r\n                className={`absolute top-0 right-0 group-hover:bg-white group-hover:text-${statusColor} text-xs text-white px-2.5 py-2 rounded-tr shadow-md font-semibold bg-${statusColor}`}\r\n            >\r\n                {status}\r\n            </span>\r\n            <i\r\n                className={`text-shadow fas fa-clinic-medical text-6xl mb-4 group-hover:text-white text-${statusColor}`}\r\n            ></i>\r\n            <strong className=\"font-semibold text-lg\">{name}</strong>\r\n            <span className=\"text-sm text-gray-500 group-hover:text-white\">\r\n                {branch}\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyPharmacies;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router\";\r\nimport Inventory from \"./pages/Inventory\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Employees from \"./pages/Employees\";\r\nimport Orders from \"./pages/Orders\";\r\nimport Pharmacies from \"./pages/Pharmacies\";\r\nimport Users from \"./pages/Users\";\r\nimport Products from \"./pages/Products\";\r\nimport PharmacySettings from \"./pages/PharmacySettings\";\r\nimport AccountSettings from \"./pages/AccountSettings\";\r\nimport PointOfSale from \"./pages/PointOfSale\";\r\nimport { useState } from \"@hookstate/core\";\r\nimport store from \"../state\";\r\nimport MyPharmacies from \"./pages/MyPharmacies\";\r\n\r\nfunction Main() {\r\n    const { loggedUser, pharmacyBranch, collapseMenu } = useState(store);\r\n    const userRole = loggedUser.role.get();\r\n    const isPharmacyBranchSelected = pharmacyBranch.id.value !== undefined;\r\n\r\n    function renderMain() {\r\n        switch (userRole) {\r\n            case \"pharmacy owner\":\r\n                if (!isPharmacyBranchSelected) {\r\n                    return (\r\n                        <Switch>\r\n                            <Route\r\n                                path=\"/account-settings\"\r\n                                component={AccountSettings}\r\n                            />\r\n                            <Route\r\n                                path=\"/my-pharmacies\"\r\n                                component={MyPharmacies}\r\n                            />\r\n                            <Redirect from=\"/\" to=\"/my-pharmacies\" />\r\n                        </Switch>\r\n                    );\r\n                }\r\n\r\n            case \"supervisor\":\r\n                return (\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Dashboard} />\r\n                        {userRole === \"pharmacy owner\" && (\r\n                            <Route\r\n                                path=\"/my-pharmacies\"\r\n                                component={MyPharmacies}\r\n                            />\r\n                        )}\r\n                        <Route\r\n                            path={[\"/orders/:id\", \"/orders\"]}\r\n                            component={Orders}\r\n                        />\r\n                        <Route path=\"/pos\" component={PointOfSale} />\r\n                        <Route\r\n                            path={[\"/staff/:id\", \"/staff\"]}\r\n                            component={Employees}\r\n                        />\r\n                        <Route\r\n                            path={[\"/Inventory/:id\", \"/Inventory\"]}\r\n                            component={Inventory}\r\n                        />\r\n                        {userRole === \"pharmacy owner\" && (\r\n                            <Route\r\n                                path=\"/pharmacy-settings\"\r\n                                component={PharmacySettings}\r\n                            />\r\n                        )}\r\n                        <Route\r\n                            path=\"/account-settings\"\r\n                            component={AccountSettings}\r\n                        />\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                );\r\n\r\n            case \"pharmacist\":\r\n                return (\r\n                    <Switch>\r\n                        <Route\r\n                            path={[\"/orders/:id\", \"/orders\"]}\r\n                            component={Orders}\r\n                        />\r\n                        <Route\r\n                            path={[\"/Inventory/:id\", \"/Inventory\"]}\r\n                            component={Inventory}\r\n                        />\r\n                        <Route\r\n                            path=\"/account-settings\"\r\n                            component={AccountSettings}\r\n                        />\r\n                        <Route path=\"/\" component={PointOfSale} />\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                );\r\n\r\n            case \"admin\":\r\n                return (\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Dashboard} />\r\n                        <Route\r\n                            path={[\"/products/:id\", \"/products\"]}\r\n                            component={Products}\r\n                        />\r\n                        <Route\r\n                            path={[\"/users/:id\", \"/users\"]}\r\n                            component={Users}\r\n                        />\r\n                        <Route\r\n                            path={[\"/pharmacies/:id\", \"/pharmacies\"]}\r\n                            component={Pharmacies}\r\n                        />\r\n                        <Route\r\n                            path=\"/account-settings\"\r\n                            component={AccountSettings}\r\n                        />\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main\r\n            className={`${\r\n                collapseMenu.value ? \"ml-24\" : \"ml-64\"\r\n            } mt-21.5 py-8 px-8 overflow-hidden transition-all`}\r\n            style={{ minHeight: \"calc(100vh - 100px)\" }}\r\n        >\r\n            {renderMain()}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import { useHookstate } from \"@hookstate/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport store from \"../state\";\r\nimport { getEmployees } from \"../services/employees\";\r\nimport { getInventoryItems } from \"../services/inventoryItems\";\r\nimport {\r\n    getNotifications,\r\n    getPharmaciesNotifications,\r\n} from \"../services/notifications\";\r\nimport { getOrders } from \"../services/orders\";\r\nimport { getPharmacies } from \"../services/pharmacies\";\r\nimport { getProducts } from \"../services/products\";\r\nimport { getUsers } from \"../services/users\";\r\nimport Loading from \"../components/Loading\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport Header from \"../components/Header\";\r\nimport Main from \"../components/Main\";\r\n\r\nconst ControlPanel = () => {\r\n    const { tables, notifications, loggedUser, pharmacyBranch } =\r\n        useHookstate(store);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (pharmacyBranch.id.ornull) {\r\n            (async () => {\r\n                const { data: notificationsData } = await getNotifications(\r\n                    pharmacyBranch.id.value\r\n                );\r\n                notifications.set(notificationsData);\r\n            })();\r\n        } else {\r\n            notifications.set([]);\r\n        }\r\n    }, [pharmacyBranch.id.ornull]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            (async () => {\r\n                const userRole = loggedUser.role.get();\r\n                if (userRole === \"admin\") {\r\n                    const appData = await Promise.all([\r\n                        getPharmaciesNotifications(),\r\n                        getUsers(),\r\n                        getPharmacies(),\r\n                        getProducts(),\r\n                    ]);\r\n\r\n                    notifications.set(appData[0].data);\r\n                    tables.users.data.set(appData[1].data);\r\n                    tables.pharmacies.data.set(appData[2].data);\r\n                    tables.products.data.set(appData[3].data);\r\n                } else if (\r\n                    userRole === \"pharmacy owner\" ||\r\n                    userRole === \"supervisor\"\r\n                ) {\r\n                    const appData = await Promise.all([\r\n                        getInventoryItems(),\r\n                        getEmployees(),\r\n                        getOrders(),\r\n                        getProducts(),\r\n                    ]);\r\n\r\n                    tables.inventory.data.set(appData[0].data);\r\n                    tables.employees.data.set(appData[1].data);\r\n                    tables.orders.data.set(appData[2].data);\r\n                    tables.products.data.set(appData[3].data);\r\n                } else {\r\n                    const appData = await Promise.all([\r\n                        getInventoryItems(),\r\n                        getOrders(),\r\n                        getProducts(),\r\n                    ]);\r\n\r\n                    tables.inventory.data.set(appData[0].data);\r\n                    tables.orders.data.set(appData[1].data);\r\n                    tables.products.data.set(appData[2].data);\r\n                }\r\n                window.setTimeout(() => setLoading(false), 500);\r\n            })();\r\n        } catch (ex) {\r\n            toast.error(\"Network Error in loading resourse.\");\r\n        }\r\n    }, []);\r\n\r\n    return loading ? (\r\n        <Loading />\r\n    ) : (\r\n        <>\r\n            <TopBar />\r\n            <Header />\r\n            <Main />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ControlPanel;\r\n","import { useHookstate } from \"@hookstate/core\";\nimport React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport store from \"../state\";\nimport Authentication from \"./Authentication\";\nimport ControlPanel from \"./ControlPanel\";\n\nfunction App() {\n    const { loggedUser } = useHookstate(store);\n\n    return (\n        <>\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            {loggedUser.id.ornull ? <ControlPanel /> : <Authentication />}\n        </>\n    );\n}\n\nexport default App;\n","import \"@hookstate/devtools\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"animate.css\";\nimport App from \"./components/App.jsx\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}